var expertName;
var alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');
var phonetics = ['alpha','bravo','charlie','delta','echo','foxtrot','golf','hotel','india','juliet','kilo','lima','mike','nancy','oscar','papa','quebec','romeo','sierra','tango','uniform','victory','whiskey','xray','yankee','zulu'];
var displayText = '';
var email='';
var AHT=[];
var EOS=[];
var CCTEOS=[];
var OSEOS=[];
var num_cases=0;
var num_casesCCT=0;
var num_casesOS=0;
var AHT_num_cases=0;
var standardStorage = [];
var prevSlide;
var googleScriptLoaded=false;
var loopCounter=0;
var birthday=[];
var inbound=0;
var taggingCodes=[];
var changeTags=[];
var currentStandardT = {
	inquiry:"",
	name:"",
	phone:"",
	email:"",
	BSSN:"",
	BSFW:"",
	CamSN:"",
	CamFW:"",
	DOP:"",
	POP:"",
	ISP:"",
	TS:"",
	CH:"",
	standard_device:"",
	standard_deviceSN:"",
	standard_deviceFW:"",
	standard_login:"",
	standard_login_model:"",
	caseclosed_standard:"",
	RMA_standard:"",
	call_pulse:"",
	nextaction:"",
	casenumber_standard:"",
	logs:"",
	selfservice:"",
	survey:"",
	KB:""
}
var vdb_affected_SN=['A2G19AK1A0185','A2G19AK8A08DD','A2G19AKEA01AE','A2G19AKJA01F8','A2G19AKTA08A5','A2G19AKYA096F','A2G19AK0A0A5F','A2G19AK8A01A8','A2G19AKDA01E5','A2G19AKJA01DC','A2G19AKTA0227','A2G19AKYA08AA','A2G19AK1A08F2','A2G19AK9A01E1','A2G19AKEA0A31','A2G19AKKA0A1A','A2G19AKTA0A3D','A2G19AK3A01B1','A2G19AKAA01F0','A2G19AKGA0112','A2G19AKMA01FB','A2G19AKUA0987','A2G19AK0A08AB','A2G19AK7A018B','A2G19AKCA08FD','A2G19AKHA0A42','A2G19AKSA0A2E','A2G19AKYA022C','A2G19AK0A099A','A2G19AK8A018C','A2G19AKDA00F6','A2G19AKJA01CE','A2G19AKSA0A3C','A2G19AKYA089C','A2G19AK2A0194','A2G19AK9A0A02','A2G19AKEA0B04','A2G19AKKA0AFE','A2G19AKTA0A75','A2G19AK1A022E','A2G19AK8A0ABB','A2G19AKEA01CA','A2G19AKKA0963','A2G19AKTA08B3','A2G19AKYA097D','A2G19AK0A023B','A2G19AK6A09AE','A2G19AKCA01E4','A2G19AKHA0A0A','A2G19AKSA08C0','A2G19AKYA0191','A2G19AK0A013E','A2G19AK6A01A6','A2G19AKCA01D6','A2G19AKHA0953','A2G19AKSA0234','A2G19AKXA0A5D','A2G19AK4A017A','A2G19AKBA0A04','A2G19AKHA0121','A2G19AKRA095A','A2G19AKWA08A8','A2G19AK2A08F3','A2G19AK9A0ABC','A2G19AKFA01E7','A2G19AKLA0A0D','A2G19AKUA08B4','A2G19AK5A0189','A2G19AKCA01AC','A2G19AKHA01F7','A2G19AKSA010D','A2G19AKXA0239','A2G19AK1A08D6','A2G19AK9A019B','A2G19AKEA0942','A2G19AKKA0A0C','A2G19AKTA0978','A2G19AKYA09A7','A2G19AK3A08D8','A2G19AKAA08DF','A2G19AKGA01BE','A2G19AKMA0206','A2G19AKUA0A5A','A2G19AK3A0AA8','A2G19AKBA019D','A2G19AKGA0960','A2G19AKMA0949','A2G19AKUA0A68','A2G19AK4A08BD','A2G19AKCA0100','A2G19AKHA01DB','A2G19AKRA0A3B','A2G19AKWA09A5','A2G19AK3A0195','A2G19AKAA01C6','A2G19AKGA00EB','A2G19AKLA0A37','A2G19AKUA08C2','A2G19AK3A0AB6','A2G19AKBA08FC','A2G19AKGA0A17','A2G19AKPA0991','A2G19AKWA0238','A2G19AK5A08F6','A2G19AKCA01C8','A2G19AKHA0202','A2G19AKSA0218','A2G19AKXA08B7']
var vdb_onboarded_SN=['A2G101K0A1721','A2G101K0A1E80','A2G101K0A204E','A2G101K0A379B','A2G101K0A4975','A2G101K0A4A1E','A2G101K0A4B45','A2G101K0A4C26','A2G101K0A4D23','A2G101K0A5042','A2G101K0A6676','A2G101K0A7E96','A2G101K1A1C5D','A2G101K1A1D84','A2G101K1A1E57','A2G101K1A1F62','A2G101K1A2419','A2G101K1A2E37','A2G101K1A3326','A2G101K1A35CC','A2G101K1A46D3','A2G101K1A4968','A2G101K1A4DDE','A2G101K2A1CB2','A2G101K2A1D85','A2G101K2A1D93','A2G101K2A1F1D','A2G101K2A207A','A2G101K2A44DA','A2G101K2A44F6','A2G101K2A45D7','A2G101K2A46F0','A2G101K2A4969','A2G101K2A4A2E','A2G101K3A1910','A2G101K3A1AF1','A2G101K3A1BB6','A2G101K3A2348','A2G101K3A2356','A2G101K3A2C5B','A2G101K3A37C8','A2G101K3A4065','A2G101K3A43DE','A2G101K3A4C61','A2G101K3A4FCC','A2G101K3A5134','A2G101K4A13A1','A2G101K4A17ED','A2G101K4A19E7','A2G101K4A1CA6','A2G101K4A1D87','A2G101K4A36E8','A2G101K4A3FDF','A2G101K4A4139','A2G101K4A4D43','A2G101K4A4EDE','A2G101K4A4EEC','A2G101K5A0EB3','A2G101K5A18F9','A2G101K5A1AF3','A2G101K5A1CD1','A2G101K5A2269','A2G101K5A233C','A2G101K5A3079','A2G101K5A3273','A2G101K5A3516','A2G101K5A38D5','A2G101K5A8924','A2G101K5A8E5F','A2G101K6A037D','A2G101K6A153B','A2G101K6A1557','A2G101K6A1727','A2G101K6A19E9','A2G101K6A1ABC','A2G101K6A30C0','A2G101K6A3290','A2G101K6A36DC','A2G101K7A13B2','A2G101K7A1477','A2G101K7A1760','A2G101K7A1BD6','A2G101K7A1CD3','A2G101K7A26EF','A2G101K7A34FF','A2G101K7A37BE','A2G101K7A420F','A2G101K8A1478','A2G101K8A1583','A2G101K8A1BAD','A2G101K8A1BC9','A2G101K8A20B8','A2G101K8A3268','A2G101K8A3276','A2G101K8A3543','A2G101K8A55BD','A2G101K9A0685','A2G101K9A13D0','A2G101K9A1DC4','A2G101K9A21E0','A2G101K9A235C','A2G101K9A2E5B','A2G101K9A3269','A2G101K9A3277','A2G101K9A3374','A2G101K9A3382','A2G101K9A8782','A2G101KAA163C',
'A2G101KAA1674','A2G101KAA170F','A2G101KAA1933','A2G101KAA1AEA','A2G101KAA1BE7','A2G101KAA1BF5','A2G101KAA1E7C','A2G101KAA209E','A2G101KAA2638','A2G101KAA31A5','A2G101KAA3901','A2G101KAA3D77','A2G101KAA4096','A2G101KAA80DE','A2G101KBA02AF','A2G101KBA0784','A2G101KBA091C','A2G101KBA13C4','A2G101KBA1D9C','A2G101KBA20E5','A2G101KBA2AAF','A2G101KBA343B','A2G101KBA36EF','A2G101KBA3AE3','A2G101KBA49F0','A2G101KBA4A6F','A2G101KBA4A99','A2G101KCA049C','A2G101KCA13E1','A2G101KCA1579','A2G101KCA1B13','A2G101KCA1CBC','A2G101KCA1CE6','A2G101KCA1F97','A2G101KCA1FA5','A2G101KCA20BC','A2G101KCA21AB','A2G101KCA2EC0','A2G101KCA316F','A2G101KCA3644','A2G101KCA3CD0','A2G101KCA83C9','A2G101KDA01DE','A2G101KDA156C','A2G101KDA1CAF','A2G101KDA1DAC','A2G101KDA1E8D','A2G101KDA229B','A2G101KDA2398','A2G101KDA23A6','A2G101KDA2CAB','A2G101KDA2CB9','A2G101KDA3AF3','A2G101KDA3F66','A2G101KDA417A','A2G101KDA4382','A2G101KDA4641','A2G101KDA46FB','A2G101KDA4CA3','A2G101KDA8019','A2G101KEA1CCC','A2G101KEA1EF0','A2G101KEA21E5','A2G101KEA23B5','A2G101KEA40B6','A2G101KEA417B','A2G101KEA41B3','A2G101KEA42B0','A2G101KEA4359','A2G101KEA4545','A2G101KEA8884','A2G101KFA0223','A2G101KFA1BDE','A2G101KFA1BEC','A2G101KFA1E9D','A2G101KFA1F8C','A2G101KFA2102','A2G101KFA2110','A2G101KFA2C9F','A2G101KFA2CF3','A2G101KFA3CA9','A2G101KFA417C','A2G101KFA894A','A2G101KGA2200','A2G101KGA272D','A2G101KGA4482','A2G101KHA0055','A2G101KHA1F8E','A2G101KHA2007','A2G101KHA2CF5','A2G101KHA3681','A2G101KHA3C9D','A2G101KHA3CAB','A2G101KHA3CC7','A2G101KHA3DE0','A2G101KHA40E3','A2G101KHA418C','A2G101KHA41D2','A2G101KHA425F','A2G101KHA4297','A2G101KHA470A','A2G101KHA49E8','A2G101KJA0153','A2G101KJA1C24','A2G101KJA1ECA','A2G101KJA20DE','A2G101KJA2210','A2G101KJA22BC','A2G101KJA3D9B',
'A2G101KJA3DB7','A2G101KJA3F4F','A2G101KJA40F2','A2G101KJA42C2','A2G101KJA436B','A2G101KJA44A0','A2G101KJA453B','A2G101KJA4719','A2G101KKA03DE','A2G101KKA1053','A2G101KKA1FBA','A2G101KKA21EA','A2G101KKA266B','A2G101KKA2CDB','A2G101KKA2EB9','A2G101KKA3CBB','A2G101KKA3E7D','A2G101KKA3E99','A2G101KKA41C6','A2G101KKA428B','A2G101KLA0C0E','A2G101KLA1224','A2G101KLA2696','A2G101KLA274D','A2G101KLA2A1A','A2G101KLA2FE1','A2G101KLA3AFA','A2G101KLA3CBC','A2G101KLA3DF1','A2G101KLA3FC1','A2G101KLA40F4','A2G101KLA41B9','A2G101KLA428C','A2G101KLA44A2','A2G101KMA1DDE','A2G101KMA1FE6','A2G101KMA23BC','A2G101KMA339C','A2G101KMA3F8A','A2G101KMA3FD0','A2G101KMA40F5','A2G101KNA0440','A2G101KNA095F','A2G101KNA1234','A2G101KNA1C60','A2G101KNA1EEA','A2G101KNA200C','A2G101KNA23E7','A2G101KNA2DCD','A2G101KNA33AB','A2G101KNA3864','A2G101KNA3937','A2G101KNA3B23','A2G101KNA3CDA','A2G101KNA41AD','A2G101KNA44A4','A2G101KNA4852','A2G101KPA0C1F','A2G101KPA1A75','A2G101KPA24BB','A2G101KPA27B2','A2G101KPA2CDF','A2G101KPA3017','A2G101KPA3300','A2G101KPA3AFD','A2G101KPA4102','A2G101KPA41E6','A2G101KPA4489','A2G101KPA462F','A2G101KPA4756','A2G101KPA4829','A2G101KPA4837','A2G101KRA1898','A2G101KRA1E24','A2G101KRA2E04','A2G101KRA30EE','A2G101KRA437F','A2G101KSA1512','A2G101KSA2D08','A2G101KSA3108','A2G101KSA365F','A2G101KSA3A53','A2G101KSA3D20','A2G101KSA4007','A2G101KSA4031','A2G101KSA41F6','A2G101KSA42BB','A2G101KSA44D1','A2G101KSA4944','A2G101KSA4ADF','A2G101KTA0339','A2G101KTA1181','A2G101KTA2315','A2G101KTA2404','A2G101KTA259F','A2G101KTA25BB','A2G101KTA26D4','A2G101KTA2D41','A2G101KTA2EF8','A2G101KTA3949','A2G101KTA3CDE','A2G101KTA448C','A2G101KUA130C','A2G101KUA2154','A2G101KUA26D5','A2G101KUA26E3','A2G101KUA2A59','A2G101KUA2C53','A2G101KUA2FBE',
'A2G101KUA301B','A2G101KUA35D4','A2G101KUA3699','A2G101KUA3966','A2G101KUA3A2B','A2G101KUA3ECB','A2G101KUA3EF5','A2G101KUA4106','A2G101KUA4130','A2G101KUA42E7','A2G101KVA0551','A2G101KVA06DE','A2G101KVA0C78','A2G101KVA0D75','A2G101KVA1D47','A2G101KVA23FB','A2G101KVA24EA','A2G101KVA26BA','A2G101KVA3797','A2G101KVA40FC','A2G101KVA4131','A2G101KVA42DA','A2G101KVA43E5','A2G101KVA4D11','A2G101KWA0E49','A2G101KWA0F0E','A2G101KWA10B1','A2G101KWA115A','A2G101KWA1176','A2G101KWA3039','A2G101KWA3798','A2G101KWA3DDE','A2G101KWA3E13','A2G101KWA4140','A2G101KWA457E','A2G101KXA1282','A2G101KXA1AB4','A2G101KXA24DE','A2G101KXA289A','A2G101KXA320A','A2G101KXA36AA','A2G101KXA3D25','A2G101KXA3DFB','A2G101KXA4028','A2G101KXA4060','A2G101KXA4DDB','A2G101KYA132C','A2G101KYA1720','A2G101KYA37E0','A2G101KYA3D0A','A2G101KYA3ECF','A2G101KYA4231','A2G101KYA43CC','A2G197WF00154','A2G199K9A0031','A2G199KEA0028','A2G199KFA02CF','A2G199WJA011F','A2G199WNA006C','A2G19AK0A0AA5','A2G19AK0A2EBF','A2G19AK0A2FCA','A2G19AK0A31FA','A2G19AK0A34B9','A2G19AK0A438E','A2G19AK0A4AED','A2G19AK0A4DAC','A2G19AK0A4DD6','A2G19AK1A18A8','A2G19AK1A203A','A2G19AK1A23DD','A2G19AK1A23EB','A2G19AK1A2C28','A2G19AK1A2D25','A2G19AK1A383E','A2G19AK1A3CDE','A2G19AK1A44D2','A2G19AK1A466A','A2G19AK1A4A50','A2G19AK1A5012','A2G19AK1A52D4','A2G19AK1A537D','A2G19AK2A1A87','A2G19AK2A22EF','A2G19AK2A32DD','A2G19AK2A3304','A2G19AK2A3982','A2G19AK2A43D6','A2G19AK3A112F','A2G19AK3A122C','A2G19AK3A15F9','A2G19AK3A1B85','A2G19AK3A2341','A2G19AK3A23ED','A2G19AK3A27B7','A2G19AK3A35D5','A2G19AK3A4BDF','A2G19AK4A0BC2','A2G19AK4A27C6','A2G19AK4A29B2','A2G19AK4A4C15','A2G19AK4A4D04','A2G19AK5A2343','A2G19AK5A295F','A2G19AK5A54A8','A2G19AK5A555F','A2G19AK6A124B','A2G19AK6A213C','A2G19AK6A28D3',
'A2G19AK6A35BC','A2G19AK6A4FC8','A2G19AK7A1640','A2G19AK7A25CF','A2G19AK7A26CC','A2G19AK7A2D47','A2G19AK7A2E36','A2G19AK7A320C','A2G19AK7A5018','A2G19AK7A54B8','A2G19AK8A01C4','A2G19AK8A0C8B','A2G19AK8A0F4A','A2G19AK8A204F','A2G19AK8A2168','A2G19AK8A2427','A2G19AK8A2540','A2G19AK8A3C71','A2G19AK8A3EFB','A2G19AK8A495A','A2G19AK9A0BF1','A2G19AK9A109A','A2G19AK9A2B95','A2G19AK9A478B','A2G19AK9A4FBD','A2G19AK9A5230','A2G19AKAA2BC0','A2G19AKAA486D','A2G19AKAA510A','A2G19AKBA1458','A2G19AKBA379F','A2G19AKBA3C66','A2G19AKBA403C','A2G19AKBA4058','A2G19AKBA46C8','A2G19AKBA4B2D','A2G19AKBA4EDE','A2G19AKBA4EFA','A2G19AKCA01E4','A2G19AKCA0CAB','A2G19AKCA1BE2','A2G19AKCA306B','A2G19AKCA3F42','A2G19AKCA4EDF','A2G19AKDA11A9','A2G19AKDA1913','A2G19AKDA21B3','A2G19AKDA38C8','A2G19AKDA3C68','A2G19AKDA3F27','A2G19AKDA44EC','A2G19AKDA4B83','A2G19AKEA0E99','A2G19AKEA1590','A2G19AKEA18ED','A2G19AKEA19DC','A2G19AKEA36F9','A2G19AKEA512A','A2G19AKFA0200','A2G19AKFA2DA3','A2G19AKFA3BA5','A2G19AKFA3CB0','A2G19AKFA3E72','A2G19AKFA4E36','A2G19AKFA4F09','A2G19AKGA11C8','A2G19AKGA2E69','A2G19AKGA4D2C','A2G19AKGA55F6','A2G19AKHA11D7','A2G19AKHA11E5','A2G19AKHA13B5','A2G19AKHA1828','A2G19AKHA1A06','A2G19AKHA22D0','A2G19AKHA28DE','A2G19AKHA307E','A2G19AKHA4B6B','A2G19AKHA4BA3','A2G19AKHA54DE','A2G19AKJA0A35','A2G19AKJA0FB6','A2G19AKJA1594','A2G19AKJA2CC5','A2G19AKJA350E','A2G19AKJA3E4B','A2G19AKJA450A','A2G19AKJA4526','A2G19AKJA4FFE','A2G19AKJA5417','A2G19AKKA0FD3','A2G19AKKA10DC','A2G19AKKA2818','A2G19AKKA2DC3','A2G19AKKA2DD1','A2G19AKKA4446','A2G19AKKA4D59','A2G19AKLA01DE','A2G19AKLA156C','A2G19AKLA1E7F','A2G19AKLA2657','A2G19AKLA270E','A2G19AKLA2F94','A2G19AKLA33B0','A2G19AKLA342F','A2G19AKLA3B9C','A2G19AKLA3BB8','A2G19AKLA4A7F','A2G19AKMA14E0',
'A2G19AKMA20F6','A2G19AKMA21F3','A2G19AKMA2CC8','A2G19AKMA39E9','A2G19AKMA3D5F','A2G19AKMA4DA1','A2G19AKNA2950','A2G19AKNA3CC5','A2G19AKNA3DA6','A2G19AKNA47DE','A2G19AKNA49BC','A2G19AKNA4C6D','A2G19AKNA4D4E','A2G19AKNA4F48','A2G19AKPA0DCF','A2G19AKPA1FD3','A2G19AKPA2ADE','A2G19AKPA329A','A2G19AKPA361E','A2G19AKPA3656','A2G19AKPA3DB5','A2G19AKPA48EA','A2G19AKPA5462','A2G19AKRA0A81','A2G19AKRA1697','A2G19AKRA1948','A2G19AKRA2863','A2G19AKRA2C03','A2G19AKRA372A','A2G19AKRA3916','A2G19AKRA4297','A2G19AKRA4AD7','A2G19AKRA55FE','A2G19AKSA1D05','A2G19AKSA24A8','A2G19AKSA38FE','A2G19AKSA3F79','A2G19AKSA4387','A2G19AKSA52B0','A2G19AKSA5480','A2G19AKTA0B64','A2G19AKTA0D26','A2G19AKTA167D','A2G19AKTA2784','A2G19AKTA2954','A2G19AKTA2BDE','A2G19AKUA0228','A2G19AKUA0B57','A2G19AKUA11FD','A2G19AKUA12DE','A2G19AKUA14E6','A2G19AKUA1C26','A2G19AKUA2A0C','A2G19AKUA3692','A2G19AKUA461E','A2G19AKUA4656','A2G19AKUA4F85','A2G19AKVA0C71','A2G19AKVA1128','A2G19AKVA14CB','A2G19AKVA16E1','A2G19AKVA1DDE','A2G19AKVA23F4','A2G19AKVA2891','A2G19AKVA2CDD','A2G19AKVA2EBB','A2G19AKVA3790','A2G19AKVA3928','A2G19AKVA4584','A2G19AKVA49DE','A2G19AKVA4BE6','A2G19AKWA0A78','A2G19AKWA101E','A2G19AKWA1323','A2G19AKWA17A7','A2G19AKWA17C3','A2G19AKWA21DF','A2G19AKWA274F','A2G19AKWA30DE','A2G19AKWA3FB5','A2G19AKWA4577','A2G19AKWA4852','A2G19AKWA4A22','A2G19AKXA0B84','A2G19AKXA0FFA','A2G19AKXA1340','A2G19AKXA1FCC','A2G19AKXA26A7','A2G19AKXA27C0','A2G19AKXA2CDF','A2G19AKXA2CED','A2G19AKXA3962','A2G19AKXA3AEF','A2G19AKXA41AE','A2G19AKXA428F','A2G19AKXA4837','A2G19AKXA4926','A2G19AKXA49EE','A2G19AKXA52C3','A2G19AKXA5671','A2G19AKYA1C70','A2G19AKYA2EDA','A2G19AKYA4ADE','A2G19BK0A085E','A2G19BK0A0CFE','A2G19BK0A0EF8','A2G19BK0A1CDE','A2G19BK0A2105','A2G19BK0A3E98',
'A2G19BK0A42A6','A2G19BK0A42C2','A2G19BK0A49CD','A2G19BK0A49DB','A2G19BK0A4C8C','A2G19BK0A59C9','A2G19BK0A5CA4','A2G19BK0A6290','A2G19BK0A6452','A2G19BK0A7084','A2G19BK0A7327','A2G19BK0A75E9','A2G19BK0A7B75','A2G19BK0A7FF9','A2G19BK0A86D4','A2G19BK0A89A1','A2G19BK0A8A82','A2G19BK0A8D25','A2G19BK0A94AC','A2G19BK0A9FAB','A2G19BK0AB399','A2G19BK0AB72B','A2G19BK1A03DE','A2G19BK1A15B8','A2G19BK1A2009','A2G19BK1A32F1','A2G19BK1A3756','A2G19BK1A3E8B','A2G19BK1A427D','A2G19BK1A471A','A2G19BK1A4AAF','A2G19BK1A507F','A2G19BK1A68C9','A2G19BK1A68E5','A2G19BK1A6D2E','A2G19BK1A6E0F','A2G19BK1A721D','A2G19BK1A7506','A2G19BK1A7514','A2G19BK1A79A6','A2G19BK1A7A4F','A2G19BK1A7AA3','A2G19BK1A7E35','A2G19BK1A83DE','A2G19BK1A8413','A2G19BK1A84E9','A2G19BK1A879A','A2G19BK1A93E8','A2G19BK1A97A4','A2G19BK1A9B52','A2G19BK1AA2E7','A2G19BK1AA4E1','A2G19BK1AA65D','A2G19BK1AA776','A2G19BK1AA938','A2G19BK1AAEF1','A2G19BK1ABAEB','A2G19BK2A185C','A2G19BK2A1FF3','A2G19BK2A2939','A2G19BK2A2BFB','A2G19BK2A356B','A2G19BK2A3ADE','A2G19BK2A3D8F','A2G19BK2A4478','A2G19BK2A461E','A2G19BK2A49DD','A2G19BK2A4ACC','A2G19BK2A4E96','A2G19BK2A4F93','A2G19BK2A509C','A2G19BK2A6365','A2G19BK2A66DE','A2G19BK2A6810','A2G19BK2A721E','A2G19BK2A7523','A2G19BK2A75EB','A2G19BK2A803C','A2G19BK2A8155','A2G19BK2A86C8','A2G19BK2A8C2A','A2G19BK2A8EEC','A2G19BK2A8FE9','A2G19BK2A9967','A2G19BK2A9B1B','A2G19BK2AA5B5','A2G19BK2AA6A4','A2G19BK2AA6B2','A2G19BK2AAA52','A2G19BK2AAA60','A2G19BK2AB1F5','A2G19BK2AB862','A2G19BK3A0423','A2G19BK3A1136','A2G19BK3A1C43','A2G19BK3A1DDE','A2G19BK3A1EE9','A2G19BK3A25A8','A2G19BK3A2F8E','A2G19BK3A3015','A2G19BK3A33B8','A2G19BK3A4673','A2G19BK3A4924','A2G19BK3A4940','A2G19BK3A4D9A','A2G19BK3A52A5','A2G19BK3A5718','A2G19BK3A6471','A2G19BK3A65FE',
'A2G19BK3A69D6','A2G19BK3A6E73','A2G19BK3A7516','A2G19BK3A75DE','A2G19BK3A79C4','A2G19BK3A8350','A2G19BK3A8A69','A2G19BK3A8FDC','A2G19BK3A968D','A2G19BK3A984F','A2G19BK3A9FE6','A2G19BK3AA5A8','A2G19BK3AAA45','A2G19BK3AB0CF','A2G19BK4A0149','A2G19BK4A088C','A2G19BK4A0A86','A2G19BK4A0B91','A2G19BK4A1A3C','A2G19BK4A24AC','A2G19BK4A267C','A2G19BK4A2BEF','A2G19BK4A2D05','A2G19BK4A2DCD','A2G19BK4A35C1','A2G19BK4A373D','A2G19BK4A41D7','A2G19BK4A509E','A2G19BK4A5CB6','A2G19BK4A5EB0','A2G19BK4A5F91','A2G19BK4A626A','A2G19BK4A6634','A2G19BK4A67EB','A2G19BK4A7452','A2G19BK4A789E','A2G19BK4A7AA6','A2G19BK4A7B4F','A2G19BK4A7B95','A2G19BK4A811F','A2G19BK4A8424','A2G19BK4A84DE','A2G19BK4A87D5','A2G19BK4A8B59','A2G19BK4A8C56','A2G19BK4A8D29','A2G19BK4A9129','A2G19BK4A9412','A2G19BK4A9420','A2G19BK4AA2DC','A2G19BK4AA91F','A2G19BK4AA973','A2G19BK4AAA46','A2G19BK4AB945','A2G19BK5A0271','A2G19BK5A16C7','A2G19BK5A2312','A2G19BK5A2FBA','A2G19BK5A31F8','A2G19BK5A35D0','A2G19BK5A365D','A2G19BK5A36B1','A2G19BK5A3B32','A2G19BK5A4102','A2G19BK5A43B6','A2G19BK5A446D','A2G19BK5A455C','A2G19BK5A4EA7','A2G19BK5A509F','A2G19BK5A5299','A2G19BK5A553C','A2G19BK5A634C','A2G19BK5A68E9','A2G19BK5A6D94','A2G19BK5A6E2F','A2G19BK5A7BA4','A2G19BK5A7D66','A2G19BK5A7D90','A2G19BK5A804D','A2G19BK5A8158','A2G19BK5A8530','A2G19BK5A86BD','A2G19BK5A86CB','A2G19BK5A8BA0','A2G19BK5A8D54','A2G19BK5A903B','A2G19BK5A9073','A2G19BK5A9FBE','A2G19BK5AA3DA','A2G19BK5AA6D1','A2G19BK5AA94A','A2G19BK5AAA47','A2G19BK5AAD14','A2G19BK5AB025','A2G19BK5AB7A0','A2G19BK6A3971','A2G19BK6A3FD3','A2G19BK6A4200','A2G19BK6A480E','A2G19BK6A4D8F','A2G19BK6A554B','A2G19BK6A6474','A2G19BK6A660C','A2G19BK6A69CB','A2G19BK6A6CD0','A2G19BK6A6F1F','A2G19BK6A70A6','A2G19BK6A7195','A2G19BK6A7462',
'A2G19BK6A750B','A2G19BK6A7543','A2G19BK6A7640','A2G19BK6A812F','A2G19BK6A8D71','A2G19BK6A9406','A2G19BK6A95AF','A2G19BK6A96C8','A2G19BK6A977F','A2G19BK6A98C2','A2G19BK6A9E16','A2G19BK6AA046','A2G19BK6AA208','A2G19BK6AA4F4','A2G19BK6AAA1E','A2G19BK7A021F','A2G19BK7A0F42','A2G19BK7A1172','A2G19BK7A14DD','A2G19BK7A1A4D','A2G19BK7A348F','A2G19BK7A37A2','A2G19BK7A3A29','A2G19BK7A3CF9','A2G19BK7A4A33','A2G19BK7A5592','A2G19BK7A6564','A2G19BK7A68DD','A2G19BK7A6904','A2G19BK7A6DC0','A2G19BK7A7C5D','A2G19BK7A8370','A2G19BK7A85DE','A2G19BK7A8D48','A2G19BK7A9B90','A2G19BK7AA3DC','A2G19BK7AA69B','A2G19BK7AA895','A2G19BK7AAD16','A2G19BK7AADDE','A2G19BK7AB84B','A2G19BK8A089E','A2G19BK8A1432','A2G19BK8A16AE','A2G19BK8A17C7','A2G19BK8A2896','A2G19BK8A3141','A2G19BK8A3EF4','A2G19BK8A42E6','A2G19BK8A44D2','A2G19BK8A4A0A','A2G19BK8A5B11','A2G19BK8A5DD3','A2G19BK8A60F2','A2G19BK8A61E1','A2G19BK8A68DE','A2G19BK8A7359','A2G19BK8A7529','A2G19BK8A79AD','A2G19BK8A7B7D','A2G19BK8A7B8B','A2G19BK8A7E58','A2G19BK8A85ED','A2G19BK8A89A9','A2G19BK8A9319','A2G19BK8A96D8','A2G19BK8A9C48','A2G19BK8A9D29','A2G19BK8AA01E','A2G19BK8AA072','A2G19BK8AA4DA','A2G19BK8AA5C9','A2G19BK8AAFD9','A2G19BK8AB5A9','A2G19BK8ABCDE','A2G19BK9A0AC3','A2G19BK9A13FE','A2G19BK9A14FB','A2G19BK9A2324','A2G19BK9A2EF9','A2G19BK9A3885','A2G19BK9A3D30','A2G19BK9A4BDE','A2G19BK9A5659','A2G19BK9A59EE','A2G19BK9A5F88','A2G19BK9A671A','A2G19BK9A6752','A2G19BK9A72B1','A2G19BK9A8372','A2G19BK9A86DD','A2G19BK9A88C9','A2G19BK9A8A99','A2G19BK9A8C93','A2G19BK9A987F','A2G19BK9A9E0B','A2G19BK9A9F24','A2G19BK9AA405','A2G19BK9AA6D5','A2G19BK9AA7E0','A2G19BK9AAEEB','A2G19BK9ABB44','A2G19BKAA0CB0','A2G19BKAA2325','A2G19BKAA2E40','A2G19BKAA2EDE','A2G19BKAA300E','A2G19BKAA3062','A2G19BKAA376D',
'A2G19BKAA3789','A2G19BKAA3CEE','A2G19BKAA458B','A2G19BKAA4BDF','A2G19BKAA55B1','A2G19BKAA6575','A2G19BKAA6664','A2G19BKAA6834','A2G19BKAA6EC0','A2G19BKAA7628','A2G19BKAA7814','A2G19BKAA79F5','A2G19BKAA7C8A','A2G19BKAA7D4F','A2G19BKAA7E4C','A2G19BKAA88E6','A2G19BKAA8C78','A2G19BKAA8D59','A2G19BKAA8D91','A2G19BKAA9B69','A2G19BKAA9F33','A2G19BKAAA6AC','A2G19BKAAAB57','A2G19BKAAAFE9','A2G19BKBA099E','A2G19BKBA09D6','A2G19BKBA1D2C','A2G19BKBA2D44','A2G19BKBA3C0B','A2G19BKBA4124','A2G19BKBA474E','A2G19BKBA4CF9','A2G19BKBA4ED7','A2G19BKBA6592','A2G19BKBA6916','A2G19BKBA6E7B','A2G19BKBA742F','A2G19BKBA834A','A2G19BKBA8544','A2G19BKBA8609','A2G19BKBA87F8','A2G19BKBA88E7','A2G19BKBA8BD0','A2G19BKBA8DA0','A2G19BKBA8E2D','A2G19BKBA8F0E','A2G19BKBA9281','A2G19BKBA95DE','A2G19BKBA98D5','A2G19BKBA99C4','A2G19BKBAA180','A2G19BKBAA21B','A2G19BKCA0529','A2G19BKCA0561','A2G19BKCA09C9','A2G19BKCA0E4A','A2G19BKCA130F','A2G19BKCA141A','A2G19BKCA204C','A2G19BKCA2610','A2G19BKCA301E','A2G19BKCA3C0C','A2G19BKCA4CFA','A2G19BKCA50EC','A2G19BKCA565C','A2G19BKCA5961','A2G19BKCA619F','A2G19BKCA62E2','A2G19BKCA638B','A2G19BKCA6BD9','A2G19BKCA6FA3','A2G19BKCA7468','A2G19BKCA7638','A2G19BKCA770B','A2G19BKCA7824','A2G19BKCA78FA','A2G19BKCA80C4','A2G19BKCA88DA','A2G19BKCA89C9','A2G19BKCA8A8E','A2G19BKCA8F71','A2G19BKCA90A4','A2G19BKCA9177','A2G19BKCAA416','A2G19BKCAA9B3','A2G19BKCAAF23','A2G19BKCAB072','A2G19BKDA0724','A2G19BKDA0AD5','A2G19BKDA131E','A2G19BKDA1CA1','A2G19BKDA2D0E','A2G19BKDA35CA','A2G19BKDA4A63','A2G19BKDA5A19','A2G19BKDA6675','A2G19BKDA672C','A2G19BKDA680D','A2G19BKDA6DD4','A2G19BKDA71C6','A2G19BKDA736C','A2G19BKDA743F','A2G19BKDA78FB','A2G19BKDA7BE4','A2G19BKDA7F84','A2G19BKDA816E','A2G19BKDA8457','A2G19BKDA8562','A2G19BKDA8643',
'A2G19BKDA87EC','A2G19BKDA88E9','A2G19BKDA89F4','A2G19BKDA8AB9','A2G19BKDA922F','A2G19BKDA96DD','A2G19BKDA9D74','A2G19BKDAA182','A2G19BKDAAA95','A2G19BKDAAF24','A2G19BKEA116B','A2G19BKEA1551','A2G19BKEA1616','A2G19BKEA18D8','A2G19BKEA1A9A','A2G19BKEA1C86','A2G19BKEA1F61','A2G19BKEA2175','A2G19BKEA2C2E','A2G19BKEA2D1D','A2G19BKEA37A9','A2G19BKEA37C5','A2G19BKEA4143','A2G19BKEA4B29','A2G19BKEA4C42','A2G19BKEA4F01','A2G19BKEA5D03','A2G19BKEA62BA','A2G19BKEA639B','A2G19BKEA681C','A2G19BKEA6B13','A2G19BKEA70BC','A2G19BKEA71C7','A2G19BKEA754B','A2G19BKEA771B','A2G19BKEA7F5B','A2G19BKEA80B8','A2G19BKEA81D1','A2G19BKEA827A','A2G19BKEA89BD','A2G19BKEA8BD3','A2G19BKEA8F65','A2G19BKEA97DB','A2G19BKEA98AE','A2G19BKEA9BC1','A2G19BKEA9C6A','A2G19BKEAA426','A2G19BKEAA97D','A2G19BKEAB2FE','A2G19BKFA1E3B','A2G19BKFA2D72','A2G19BKFA3261','A2G19BKFA3F30','A2G19BKFA4403','A2G19BKFA459E','A2G19BKFA4992','A2G19BKFA4A1F','A2G19BKFA4A57','A2G19BKFA51FA','A2G19BKFA6015','A2G19BKFA62C9','A2G19BKFA6EB7','A2G19BKFA745D','A2G19BKFA75A0','A2G19BKFA7649','A2G19BKFA7827','A2G19BKFA78FD','A2G19BKFA7BD8','A2G19BKFA7CD5','A2G19BKFA836A','A2G19BKFA8912','A2G19BKFA89DA','A2G19BKFA8CC3','A2G19BKFA8F3C','A2G19BKFA906F','A2G19BKFA9277','A2G19BKFA9455','A2G19BKFA99C8','A2G19BKFA99E4','A2G19BKFA9C95','A2G19BKFA9F62','A2G19BKFA9F70','A2G19BKFAA14C','A2G19BKFAA22D','A2G19BKFAA4FD','A2G19BKFAA5EC','A2G19BKFAAB86','A2G19BKFAB156','A2G19BKFAB164','A2G19BKFAB8C3','A2G19BKGA01A9','A2G19BKGA01C5','A2G19BKGA0638','A2G19BKGA0C8C','A2G19BKGA0DB3','A2G19BKGA132F','A2G19BKGA29A9','A2G19BKGA2D1F','A2G19BKGA3E42','A2G19BKGA47B5','A2G19BKGA575D','A2G19BKGA72D4','A2G19BKGA73B5','A2G19BKGA7747','A2G19BKGA7771','A2G19BKGA7E98','A2G19BKGA819B','A2G19BKGA8573','A2G19BKGA90C4',
'A2G19BKGA96FC','A2G19BKGA9D5B','A2G19BKGA9F55','A2G19BKGAAE62','A2G19BKGAB13B','A2G19BKGAB246','A2G19BKGAB4DE','A2G19BKHA0D7C','A2G19BKHA0F5A','A2G19BKHA16FD','A2G19BKHA2C85','A2G19BKHA4A3D','A2G19BKHA4B2C','A2G19BKHA4C45','A2G19BKHA4C53','A2G19BKHA5877','A2G19BKHA5A63','A2G19BKHA60FB','A2G19BKHA65B4','A2G19BKHA65C2','A2G19BKHA6849','A2G19BKHA6E8F','A2G19BKHA7578','A2G19BKHA7594','A2G19BKHA7780','A2G19BKHA79FC','A2G19BKHA8477','A2G19BKHA88DF','A2G19BKHA8914','A2G19BKHA8CA9','A2G19BKHA8F4C','A2G19BKHA90B7','A2G19BKHA9279','A2G19BKHA92B1','A2G19BKHA9392','A2G19BKHA9473','A2G19BKHA9BE0','A2G19BKHA9CB3','A2G19BKHA9D78','A2G19BKHA9DB0','A2G19BKHA9E59','A2G19BKHA9F48','A2G19BKHAA06D','A2G19BKHAA16A','A2G19BKHAA1B0','A2G19BKHAA437','A2G19BKHAA615','A2G19BKHAB13C','A2G19BKJA0010','A2G19BKJA02A8','A2G19BKJA108E','A2G19BKJA19E7','A2G19BKJA1AD6','A2G19BKJA313D','A2G19BKJA4309','A2G19BKJA43FB','A2G19BKJA4D0B','A2G19BKJA5991','A2G19BKJA5D07','A2G19BKJA5D15','A2G19BKJA6BED','A2G19BKJA7927','A2G19BKJA7ADE','A2G19BKJA8494','A2G19BKJA8BAD','A2G19BKJA90D4','A2G19BKJA944A','A2G19BKJA9490','A2G19BKJA9806','A2G19BKJA98EA','A2G19BKJA99F5','A2G19BKJA9A00','A2G19BKJA9AD6','A2G19BKJA9C98','A2G19BKJA9CD0','A2G19BKJA9E68','A2G19BKJA9F73','A2G19BKJAA0A6','A2G19BKJAA0D0','A2G19BKJAA179','A2G19BKJAA1A3','A2G19BKJAA1B1','A2G19BKJAA268','A2G19BKJAA446','A2G19BKJAB06A','A2G19BKKA0398','A2G19BKKA09DE','A2G19BKKA1572','A2G19BKKA2285','A2G19BKKA388F','A2G19BKKA3BB0','A2G19BKKA4075','A2G19BKKA411E','A2G19BKKA44F9','A2G19BKKA486F','A2G19BKKA4A85','A2G19BKKA4FEA','A2G19BKKA54AF','A2G19BKKA5992','A2G19BKKA62F7','A2G19BKKA682F','A2G19BKKA72AD','A2G19BKKA74B5','A2G19BKKA75B2','A2G19BKKA774A','A2G19BKKA7847','A2G19BKKA7855','A2G19BKKA7EC5','A2G19BKKA89DE',
'A2G19BKKA8A21','A2G19BKKA8BCA','A2G19BKKA90F1','A2G19BKKA91E0','A2G19BKKA92A5','A2G19BKKA9580','A2G19BKKA9629','A2G19BKKAA0B5','A2G19BKKAA34A','A2G19BKKAA439','A2G19BKKAA6FB','A2G19BKKAA9C8','A2G19BKKAAD84','A2G19BKKAB05D','A2G19BKLA0739','A2G19BKLA0D7F','A2G19BKLA19CD','A2G19BKLA1CE0','A2G19BKLA1E4E','A2G19BKLA22A2','A2G19BKLA2C7A','A2G19BKLA3274','A2G19BKLA46D8','A2G19BKLA4B3D','A2G19BKLA4D37','A2G19BKLA501E','A2G19BKLA63CB','A2G19BKLA649E','A2G19BKLA65C5','A2G19BKLA668A','A2G19BKLA674F','A2G19BKLA6892','A2G19BKLA6B27','A2G19BKLA6ED8','A2G19BKLA6FF1','A2G19BKLA71BF','A2G19BKLA73C7','A2G19BKLA73D5','A2G19BKLA7759','A2G19BKLA7783','A2G19BKLA7945','A2G19BKLA7A50','A2G19BKLA7F6F','A2G19BKLA82D4','A2G19BKLA8739','A2G19BKLA880C','A2G19BKLA8BAF','A2G19BKLA91A9','A2G19BKLA91D3','A2G19BKLA928A','A2G19BKLA9379','A2G19BKLA9743','A2G19BKLA99F7','A2G19BKLA9A02','A2G19BKLA9AE6','A2G19BKLA9C8C','A2G19BKLA9F75','A2G19BKLAA359','A2G19BKLAAA8E','A2G19BKLAAC5E','A2G19BKLAB1A1','A2G19BKLAB460','A2G19BKMA0756','A2G19BKMA0861','A2G19BKMA0BF6','A2G19BKMA137A','A2G19BKMA1A03','A2G19BKMA1AD9','A2G19BKMA27DE','A2G19BKMA2F48','A2G19BKMA3615','A2G19BKMA4182','A2G19BKMA4522','A2G19BKMA4C1F','A2G19BKMA54CD','A2G19BKMA6401','A2G19BKMA6B60','A2G19BKMA6D22','A2G19BKMA73D6','A2G19BKMA73F2','A2G19BKMA7BDE','A2G19BKMA8021','A2G19BKMA845F','A2G19BKMA84A5','A2G19BKMA855C','A2G19BKMA8594','A2G19BKMA864B','A2G19BKMA8756','A2G19BKMA8837','A2G19BKMA8BCC','A2G19BKMA8E7D','A2G19BKMA8E99','A2G19BKMA8FA4','A2G19BKMA9469','A2G19BKMAA0C5','A2G19BKMAB89F','A2G19BKNA10D8','A2G19BKNA1F4D','A2G19BKNA1FA1','A2G19BKNA323E','A2G19BKNA3454','A2G19BKNA350B','A2G19BKNA3632','A2G19BKNA38CA','A2G19BKNA40A2','A2G19BKNA579B','A2G19BKNA58B4','A2G19BKNA5EDE','A2G19BKNA5F05',
'A2G19BKNA65C7','A2G19BKNA669A','A2G19BKNA6C0A','A2G19BKNA76C0','A2G19BKNA775B','A2G19BKNA881C','A2G19BKNA8A16','A2G19BKNA8F6D','A2G19BKNA92C4','A2G19BKNA94A2','A2G19BKNA9680','A2G19BKNA9B01','A2G19BKNA9D8B','A2G19BKNA9F5B','A2G19BKNAA2A4','A2G19BKNAA385','A2G19BKNAB42A','A2G19BKNABAE0','A2G19BKPA137C','A2G19BKPA253A','A2G19BKPA2DA4','A2G19BKPA4524','A2G19BKPA4AC1','A2G19BKPA54DD','A2G19BKPA588B','A2G19BKPA5D52','A2G19BKPA6976','A2G19BKPA7116','A2G19BKPA757E','A2G19BKPA7B50','A2G19BKPA7BFC','A2G19BKPA7D20','A2G19BKPA7ED7','A2G19BKPA83E2','A2G19BKPA8944','A2G19BKPA8B14','A2G19BKPA8DF2','A2G19BKPA970E','A2G19BKPA9EB3','A2G19BKPA9F78','A2G19BKPAA0E3','A2G19BKPAA548','A2G19BKPAB9F2','A2G19BKRA1739','A2G19BKRA209E','A2G19BKRA2F75','A2G19BKRA2F91','A2G19BKRA3294','A2G19BKRA3731','A2G19BKRA3A9C','A2G19BKRA46EA','A2G19BKRA46F8','A2G19BKRA4A8A','A2G19BKRA54DE','A2G19BKRA5B3D','A2G19BKRA5B91','A2G19BKRA62FC','A2G19BKRA64BE','A2G19BKRA757F','A2G19BKRA76B4','A2G19BKRA77A3','A2G19BKRA785A','A2G19BKRA791F','A2G19BKRA7949','A2G19BKRA8F99','A2G19BKRA93D1','A2G19BKRA95A1','A2G19BKRA9658','A2G19BKRA9771','A2G19BKRA9DB7','A2G19BKRA9F5D','A2G19BKRAA000','A2G19BKRAA2C2','A2G19BKRAA44C','A2G19BKRAABF1','A2G19BKRAAE5C','A2G19BKSA0776','A2G19BKSA0BEC','A2G19BKSA12D5','A2G19BKSA1FA4','A2G19BKSA2825','A2G19BKSA2BE4','A2G19BKSA2E79','A2G19BKSA343B','A2G19BKSA40B3','A2G19BKSA432C','A2G19BKSA46DD','A2G19BKSA47BE','A2G19BKSA4B88','A2G19BKSA5085','A2G19BKSA5D54','A2G19BKSA74F3','A2G19BKSA7958','A2G19BKSA7B36','A2G19BKSA7C25','A2G19BKSA7D30','A2G19BKSA82F5','A2G19BKSA8300','A2G19BKSA8DCA','A2G19BKSA9AF9','A2G19BKSA9FC0','A2G19BKSAA61D','A2G19BKSAAE4F','A2G19BKSAAEB1','A2G19BKSAB0A9','A2G19BKTA00EE','A2G19BKTA0F8D','A2G19BKTA1ADE','A2G19BKTA246A',
'A2G19BKTA2656','A2G19BKTA32A4','A2G19BKTA4365','A2G19BKTA46DE','A2G19BKTA4713','A2G19BKTA4D4B','A2G19BKTA4D75','A2G19BKTA4D91','A2G19BKTA504E','A2G19BKTA522C','A2G19BKTA59C3','A2G19BKTA6C0E','A2G19BKTA72DE','A2G19BKTA73BF','A2G19BKTA74CA','A2G19BKTA7FBB','A2G19BKTA8688','A2G19BKTA8BDF','A2G19BKTA8EE4','A2G19BKTA9587','A2G19BKTA9AEC','A2G19BKTA9E9A','A2G19BKTAAD99','A2G19BKTAAE88','A2G19BKTAB0B8','A2G19BKTAB0F0','A2G19BKTABABA','A2G19BKUA0C15','A2G19BKUA163F','A2G19BKUA1A25','A2G19BKUA244F','A2G19BKUA2B02','A2G19BKUA3E5B','A2G19BKUA49AC','A2G19BKUA4F70','A2G19BKUA51A0','A2G19BKUA6083','A2G19BKUA6512','A2G19BKUA678E','A2G19BKUA67C6','A2G19BKUA6C0F','A2G19BKUA6D0C','A2G19BKUA73F8','A2G19BKUA776E','A2G19BKUA7968','A2G19BKUA7A3B','A2G19BKUA7CEF','A2G19BKUA8051','A2G19BKUA8116','A2G19BKUA81DE','A2G19BKUA8B50','A2G19BKUA92D7','A2G19BKUA92E5','A2G19BKUA938E','A2G19BKUA93F0','A2G19BKUA955E','A2G19BKUA965B','A2G19BKUA9928','A2G19BKUA9B22','A2G19BKUAA0D9','A2G19BKUAA1D6','A2G19BKUAA80B','A2G19BKUAA9DE','A2G19BKUAB1B6','A2G19BKVA0B43','A2G19BKVA0F9D','A2G19BKVA1024','A2G19BKVA1929','A2G19BKVA1A18','A2G19BKVA22D4','A2G19BKVA2593','A2G19BKVA2941','A2G19BKVA29FB','A2G19BKVA2EB4','A2G19BKVA39BF','A2G19BKVA4634','A2G19BKVA4804','A2G19BKVA4DA1','A2G19BKVA532B','A2G19BKVA55DF','A2G19BKVA6424','A2G19BKVA6E42','A2G19BKVA720A','A2G19BKVA73F9','A2G19BKVA76E2','A2G19BKVA77B5','A2G19BKVA793F','A2G19BKVA7C28','A2G19BKVA7D09','A2G19BKVA8125','A2G19BKVA84C8','A2G19BKVA8787','A2G19BKVA8F8F','A2G19BKVA91BF','A2G19BKVA95C1','A2G19BKVA9A26','A2G19BKVA9B15','A2G19BKVA9DAD','A2G19BKVA9DE5','A2G19BKVA9F8B','A2G19BKVAA3C3','A2G19BKVAA925','A2G19BKVAB34F','A2G19BKVAB62A','A2G19BKWA0320','A2G19BKWA058E','A2G19BKWA14A9','A2G19BKWA2A07','A2G19BKWA2CE5',
'A2G19BKWA2E6F','A2G19BKWA4279','A2G19BKWA533A','A2G19BKWA541B','A2G19BKWA60A1','A2G19BKWA6166','A2G19BKWA622B','A2G19BKWA6344','A2G19BKWA67F2','A2G19BKWA69B4','A2G19BKWA7073','A2G19BKWA73DE','A2G19BKWA7413','A2G19BKWA74CD','A2G19BKWA75AE','A2G19BKWA769D','A2G19BKWA8207','A2G19BKWA8B28','A2G19BKWA8C17','A2G19BKWA8EE7','A2G19BKWA96A3','A2G19BKWA9776','A2G19BKWA9FA8','A2G19BKWA9FD2','A2G19BKWAA005','A2G19BKWAA110','A2G19BKWAA2B9','A2G19BKWAA38C','A2G19BKWAB1AA','A2G19BKWAB485','A2G19BKXA002A','A2G19BKXA11CF','A2G19BKXA1688','A2G19BKXA1CEA','A2G19BKXA2870','A2G19BKXA2B21','A2G19BKXA2DE3','A2G19BKXA30F4','A2G19BKXA3583','A2G19BKXA3D99','A2G19BKXA4D6B','A2G19BKXA5519','A2G19BKXA56DE','A2G19BKXA613D','A2G19BKXA6604','A2G19BKXA7066','A2G19BKXA75CB','A2G19BKXA7FCD','A2G19BKXA802A','A2G19BKXA86B6','A2G19BKXA92BE','A2G19BKXA9301','A2G19BKXA9688','A2G19BKXA9A44','A2G19BKXAA006','A2G19BKXAA1AF','A2G19BKXAA29E','A2G19BKXAA80E','A2G19BKXAB29A','A2G19BKXAB53D','A2G19BKYA05AC','A2G19BKYA17B0','A2G19BKYA1D12','A2G19BKYA21E8','A2G19BKYA238E','A2G19BKYA265B','A2G19BKYA2F7C','A2G19BKYA4A01','A2G19BKYA4D88','A2G19BKYA524D','A2G19BKYA5285','A2G19BKYA5D5A','A2G19BKYA65DE','A2G19BKYA6B6A','A2G19BKYA6D3A','A2G19BKYA7318','A2G19BKYA7C47','A2G19BKYA8128','A2G19BKYA8144','A2G19BKYA86D3','A2G19BKYA87D0','A2G19BKYA88B1','A2G19BKYA9CCF','A2G19BKYA9CEB','A2G19BKYA9FD4','A2G19BKYAA47D','A2G19BKYAA55E','A2G19BKYAAADF','A2G19BKYAAAED','A2G19BKYAB673','A2G19BKYABABF','A2G19CK0A064F','A2G19CK0A0954','A2G19CK0A1A15','A2G19CK0A1E7D','A2G19CK0A1EC3','A2G19CK0A1F88','A2G19CK0A244D','A2G19CK0A318A','A2G19CK0A3635','A2G19CK0A37DE','A2G19CK0A3F56','A2G19CK0A47CC','A2G19CK0A4E55','A2G19CK0A512E','A2G19CK0A53FE','A2G19CK0A5D54','A2G19CK0A6219','A2G19CK0A65D8',
'A2G19CK1A1579','A2G19CK1A181C','A2G19CK1A190B','A2G19CK1A20E6','A2G19CK1A23A5','A2G19CK1A244E','A2G19CK1A3AAC','A2G19CK1A4179','A2G19CK1A49F1','A2G19CK1A4CA2','A2G19CK1A5191','A2G19CK1A522C','A2G19CK1A5337','A2G19CK1A6260','A2G19CK1A669E','A2G19CK1A67B7','A2G19CK1A6979','A2G19CK2A0043','A2G19CK2A00EF','A2G19CK2A01DE','A2G19CK2A04E3','A2G19CK2A0AFF','A2G19CK2A13E2','A2G19CK2A1ADF','A2G19CK2A1BEA','A2G19CK2A1F8A','A2G19CK2A4F38','A2G19CK2A5346','A2G19CK2A5D2C','A2G19CK2A6520','A2G19CK2A68A7','A2G19CK3A04AC','A2G19CK3A084C','A2G19CK3A164E','A2G19CK3A1A26','A2G19CK3A23D1','A2G19CK3A51A1','A2G19CK3A63FD','A2G19CK3A6432','A2G19CK3A64DE','A2G19CK3A68D2','A2G19CK3A6B4B','A2G19CK4A1025','A2G19CK4A1857','A2G19CK4A1FD2','A2G19CK4A30D7','A2G19CK4A3AF5','A2G19CK4A425D','A2G19CK4A4740','A2G19CK4A5089','A2G19CK4A50B3','A2G19CK4A532C','A2G19CK4A5429','A2G19CK4A5F1A','A2G19CK4A68B7','A2G19CK5A14C6','A2G19CK5A174D','A2G19CK5A1785','A2G19CK5A190F','A2G19CK5A3E5E','A2G19CK5A3F85','A2G19CK5A4458','A2G19CK5A4E68','A2G19CK5A51B1','A2G19CK5A6507','A2G19CK6A08B1','A2G19CK6A1FD4','A2G19CK6A35A0','A2G19CK6A3DE0','A2G19CK6A49BE','A2G19CK6A4F4A','A2G19CK6A50D1','A2G19CK6A51A4','A2G19CK6A533C','A2G19CK6A5390','A2G19CK6A68AB','A2G19CK7A0A74','A2G19CK7A0D09','A2G19CK7A0D17','A2G19CK7A41D3','A2G19CK7A4EA2','A2G19CK7A50B6','A2G19CK7A516D','A2G19CK7A5383','A2G19CK7A5BC3','A2G19CK7A5F63','A2G19CK7A6096','A2G19CK7A66F8','A2G19CK8A100D','A2G19CK8A290E','A2G19CK8A3CBB','A2G19CK8A4EA3','A2G19CK8A57DE','A2G19CK8A5C5F','A2G19CK8A5D5C','A2G19CK8A60A5','A2G19CK8A6380','A2G19CK8A65EE','A2G19CK9A069E','A2G19CK9A0C46','A2G19CK9A101C','A2G19CK9A3FB3','A2G19CK9A435F','A2G19CK9A517D','A2G19CK9A5369','A2G19CK9A5F57','A2G19CK9A6195','A2G19CK9A62A0','A2G19CK9A6608',
'A2G19CK9A6616','A2G19CK9A699D','A2G19CK9A6E56','A2G19CKAA18A3','A2G19CKAA2CEB','A2G19CKAA4762','A2G19CKAA526D','A2G19CKAA5548','A2G19CKAA6617','A2G19CKAA6706','A2G19CKAA6F54','A2G19CKBA04DE','A2G19CKBA1064','A2G19CKBA2117','A2G19CKBA52A6','A2G19CKBA65FF','A2G19CKBA6618','A2G19CKBA6634','A2G19CKBA699F','A2G19CKBA6AB8','A2G19CKCA07AC','A2G19CKCA2990','A2G19CKCA3784','A2G19CKCA3EF1','A2G19CKCA45A2','A2G19CKCA4853','A2G19CKCA6538','A2G19CKCA6627','A2G19CKCA66FD','A2G19CKCA6732','A2G19CKCA6E2F','A2G19CKDA0183','A2G19CKDA06E8','A2G19CKDA0C82','A2G19CKDA0E28','A2G19CKDA195D','A2G19CKDA23BF','A2G19CKDA24D8','A2G19CKDA2967','A2G19CKDA41F5','A2G19CKDA46A0','A2G19CKDA4846','A2G19CKDA4D8F','A2G19CKDA62B2','A2G19CKDA6555','A2G19CKDA6B8D','A2G19CKDA6BE1','A2G19CKDA6D4F','A2G19CKEA0338','A2G19CKEA06F7','A2G19CKEA08D5','A2G19CKEA0D72','A2G19CKEA15DA','A2G19CKEA2314','A2G19CKEA2EDB','A2G19CKEA31FA','A2G19CKEA439C','A2G19CKEA4839','A2G19CKEA4855','A2G19CKEA4A33','A2G19CKEA4A41','A2G19CKEA4C03','A2G19CKEA4DC8','A2G19CKEA60E3','A2G19CKEA6742','A2G19CKFA041A','A2G19CKFA06CE','A2G19CKFA0D2D','A2G19CKFA14DE','A2G19CKFA16F4','A2G19CKFA18B6','A2G19CKFA1A78','A2G19CKFA2056','A2G19CKFA23CF','A2G19CKFA374F','A2G19CKFA4880','A2G19CKFA4AFC','A2G19CKFA4CF6','A2G19CKFA6905','A2G19CKFA6921','A2G19CKFA6B8F','A2G19CKFA6BB9','A2G19CKFA6D97','A2G19CKFA6DC1','A2G19CKFA6F59','A2G19CKGA01A2','A2G19CKGA16BD','A2G19CKGA17BA','A2G19CKGA2DFC','A2G19CKGA4009','A2G19CKGA447F','A2G19CKGA449B','A2G19CKGA475A','A2G19CKGA4768','A2G19CKGA482D','A2G19CKGA490E','A2G19CKGA4946','A2G19CKGA4B08','A2G19CKGA4BDE','A2G19CKGA4BFA','A2G19CKGA4CBF','A2G19CKGA4DAE','A2G19CKGA6485','A2G19CKGA6744','A2G19CKGA68DF','A2G19CKGA6BAC','A2G19CKHA05FD','A2G19CKHA1264','A2G19CKHA1D2B',
'A2G19CKHA1EFE','A2G19CKHA32DE','A2G19CKHA34BC','A2G19CKHA3C50','A2G19CKHA484A','A2G19CKHA4A44','A2G19CKHA5DD5','A2G19CKHA654B','A2G19CKHA6A04','A2G19CKJA007D','A2G19CKJA024D','A2G19CKJA199A','A2G19CKJA1D64','A2G19CKJA32ED','A2G19CKJA39A0','A2G19CKJA3F02','A2G19CKJA44AB','A2G19CKJA46C1','A2G19CKJA4964','A2G19CKJA4B0A','A2G19CKJA4C15','A2G19CKJA5790','A2G19CKJA61BA','A2G19CKJA61D6','A2G19CKJA6649','A2G19CKJA6843','A2G19CKJA6BF4','A2G19CKJA6E7B','A2G19CKKA0278','A2G19CKKA0286','A2G19CKKA0359','A2G19CKKA0CC0','A2G19CKKA1622','A2G19CKKA1630','A2G19CKKA1D81','A2G19CKKA2092','A2G19CKKA3064','A2G19CKKA387A','A2G19CKKA3DDF','A2G19CKKA3FF5','A2G19CKKA4B43','A2G19CKKA4CDE','A2G19CKKA4D05','A2G19CKKA590D','A2G19CKKA69DF','A2G19CKLA00B7','A2G19CKLA0473','A2G19CKLA1186','A2G19CKLA1194','A2G19CKLA132C','A2G19CKLA1D90','A2G19CKLA2328','A2G19CKLA2D46','A2G19CKLA310E','A2G19CKLA4045','A2G19CKLA458E','A2G19CKLA467D','A2G19CKLA477A','A2G19CKLA47C0','A2G19CKLA4869','A2G19CKLA4990','A2G19CKLA4A39','A2G19CKLA4A55','A2G19CKLA5ED5','A2G19CKLA629D','A2G19CKLA645F','A2G19CKLA68FF','A2G19CKLA6DC6','A2G19CKMA0288','A2G19CKMA1713','A2G19CKMA3406','A2G19CKMA3B73','A2G19CKMA3FBF','A2G19CKMA4046','A2G19CKMA4135','A2G19CKMA47A5','A2G19CKMA484E','A2G19CKMA573F','A2G19CKMA5E9E','A2G19CKMA63D3','A2G19CKMA64D0','A2G19CKNA034E','A2G19CKNA052C','A2G19CKNA0645','A2G19CKNA0D88','A2G19CKNA0E3F','A2G19CKNA123F','A2G19CKNA1366','A2G19CKNA140F','A2G19CKNA230E','A2G19CKNA36AD','A2G19CKNA49A0','A2G19CKNA4B2A','A2G19CKNA4CEF','A2G19CKNA6112','A2G19CKNA62F3','A2G19CKNA691A','A2G19CKPA02B4','A2G19CKPA034F','A2G19CKPA03B1','A2G19CKPA0484','A2G19CKPA0808','A2G19CKPA160A','A2G19CKPA223C','A2G19CKPA311F','A2G19CKPA3238','A2G19CKPA3343','A2G19CKPA4048','A2G19CKPA4056',
'A2G19CKPA60DE','A2G19CKPA6775','A2G19CKPA6945','A2G19CKRA01B8','A2G19CKRA07FE','A2G19CKRA09EA','A2G19CKRA0ACB','A2G19CKRA0D7C','A2G19CKRA0DB4','A2G19CKRA1546','A2G19CKRA17DE','A2G19CKRA2623','A2G19CKRA2BB2','A2G19CKRA2C5B','A2G19CKRA2E2B','A2G19CKRA3166','A2G19CKRA3D0E','A2G19CKRA43DE','A2G19CKRA44BF','A2G19CKRA4E23','A2G19CKRA5FAC','A2G19CKRA5FC8','A2G19CKRA62AF','A2G19CKRA664F','A2G19CKRA6849','A2G19CKRA6857','A2G19CKRA6970','A2G19CKRA6BDE','A2G19CKRA6C21','A2G19CKSA03B3','A2G19CKSA0478','A2G19CKSA0761','A2G19CKSA0826','A2G19CKSA0A04','A2G19CKSA0F85','A2G19CKSA242A','A2G19CKSA2640','A2G19CKSA26DE','A2G19CKSA2C94','A2G19CKSA2D2F','A2G19CKSA2D59','A2G19CKSA312F','A2G19CKSA3183','A2G19CKSA330D','A2G19CKSA379F','A2G19CKSA38D4','A2G19CKSA4082','A2G19CKSA43DF','A2G19CKSA4600','A2G19CKSA6026','A2G19CKSA6123','A2G19CKSA6890','A2G19CKSA6963','A2G19CKTA036E','A2G19CKTA0487','A2G19CKTA063B','A2G19CKTA072A','A2G19CKTA09DE','A2G19CKTA0A21','A2G19CKTA2E2D','A2G19CKTA38AB','A2G19CKTA398C','A2G19CKTA3D3A','A2G19CKTA3D48','A2G19CKTA4512','A2G19CKTA4B4A','A2G19CKTA56A9','A2G19CKTA61DE','A2G19CKTA65D2','A2G19CKTA67B0','A2G19CKTA6EE5','A2G19CKUA00DA','A2G19CKUA01D7','A2G19CKUA03D1','A2G19CKUA04A4','A2G19CKUA0585','A2G19CKUA0755','A2G19CKUA0F87','A2G19CKUA10D6','A2G19CKUA160E','A2G19CKUA1727','A2G19CKUA29AD','A2G19CKUA2C96','A2G19CKUA2CC0','A2G19CKUA323C','A2G19CKUA3E38','A2G19CKUA4505','A2G19CKUA48E0','A2G19CKUA4AA2','A2G19CKUA5EF8','A2G19CKUA5FAF','A2G19CKUA5FF5','A2G19CKUA62DC','A2G19CKUA67B1','A2G19CKUA6A1C','A2G19CKVA03C4','A2G19CKVA055C','A2G19CKVA056A','A2G19CKVA062F','A2G19CKVA0AF9','A2G19CKVA0DF0','A2G19CKVA0F6C','A2G19CKVA0F7A','A2G19CKVA11AA','A2G19CKVA1671','A2G19CKVA1BC8','A2G19CKVA333A','A2G19CKVA3E2B','A2G19CKVA4255',
'A2G19CKVA46F5','A2G19CKVA496E','A2G19CKVA498A','A2G19CKVA4B92','A2G19CKVA4C73','A2G19CKVA4E35','A2G19CKVA5340','A2G19CKVA57B6','A2G19CKVA6061','A2G19CKVA61FC','A2G19CKVA6401','A2G19CKVA66D1','A2G19CKVA6BFE','A2G19CKVA6EE7','A2G19CKWA01D9','A2G19CKWA0749','A2G19CKWA080E','A2G19CKWA0A16','A2G19CKWA0E7E','A2G19CKWA0F7B','A2G19CKWA119D','A2G19CKWA12A8','A2G19CKWA12B6','A2G19CKWA3438','A2G19CKWA3D67','A2G19CKWA4094','A2G19CKWA45F9','A2G19CKWA4612','A2G19CKWA498B','A2G19CKWA49A7','A2G19CKWA4C66','A2G19CKWA62EC','A2G19CKWA6305','A2G19CKWA63E9','A2G19CKXA0015','A2G19CKXA057A','A2G19CKXA063F','A2G19CKXA0CBD','A2G19CKXA10BD','A2G19CKXA1754','A2G19CKXA1B02','A2G19CKXA2580','A2G19CKXA3455','A2G19CKXA3803','A2G19CKXA4265','A2G19CKXA46E9','A2G19CKXA497E','A2G19CKXA4A7B','A2G19CKXA4B4E','A2G19CKXA4D80','A2G19CKXA4E29','A2G19CKXA67D0','A2G19CKYA03B9','A2G19CKYA0F8B','A2G19CKYA13D1','A2G19CKYA28DE','A2G19CKYA3AE2','A2G19CKYA3BA7','A2G19CKYA3CC0','A2G19CKYA4096','A2G19CKYA46EA','A2G19CKYA47F5','A2G19CKYA48AC','A2G19CKYA4B79','A2G19CKYA5D0D','A2G19CKYA5E42','A2G19CKYA5E50','A2G19CKYA65BB','A2G201K0A1235','A2G201K0A1B56','A2G201K1A0F33','A2G201K1A1260','A2G201K1A169E','A2G201K1A2151','A2G201K1A2A48','A2G201K1A2A64','A2G201K2A07CA','A2G201K2A08E3','A2G201K2A0C67','A2G201K2A197A','A2G201K2A1C63','A2G201K3A00B2','A2G201K3A089E','A2G201K3A14DE','A2G201K3A1EFC','A2G201K4A0445','A2G201K4A0453','A2G201K4A04FF','A2G201K4A0BB2','A2G201K4A0F44','A2G201K4A29A2','A2G201K5A0446','A2G201K5A07BF','A2G201K5A0E64','A2G201K5A1507','A2G201K5A24F8','A2G201K5A28D0','A2G201K5A62E0','A2G201K6A1265','A2G201K6A16BF','A2G201K6A1AA5','A2G201K6A1C75','A2G201K6A1EFF','A2G201K7A1282','A2G201K7A1509','A2G201K7A19E1','A2G201K8A20A1','A2G201K8A27C8','A2G201K8A28E1',
'A2G201K8A29C2','A2G201K9A0555','A2G201K9A1519','A2G201K9A6200','A2G201KAA117A','A2G201KAA1C95','A2G201KAA20A3','A2G201KAA215A','A2G201KAA2184','A2G201KAA2524','A2G201KAA657A','A2G201KBA0654','A2G201KBA0735','A2G201KBA206C','A2G201KBA2363','A2G201KCA1376','A2G201KDA00F4','A2G201KDA0D6F','A2G201KDA0DB5','A2G201KDA0F4D','A2G201KDA1D6B','A2G201KDA20C2','A2G201KDA6220','A2G201KEA16FF','A2G201KFA1719','A2G201KFA6400','A2G201KFA657F','A2G201KFA66D0','A2G201KGA0BBE','A2G201KGA1914','A2G201KGA1C7F','A2G201KGA1C9B','A2G201KGA20C5','A2G201KGA63E8','A2G201KHA0765','A2G201KHA14B0','A2G201KJA6500','A2G201KKA048C','A2G201KKA620A','A2G201KKA64CC','A2G201KLA01F8','A2G201KLA181B','A2G201KLA6502','A2G201KLA66F1','A2G201KMA073F','A2G201KMA0971','A2G201KNA2BBC','A2G201KNA5B4E','A2G201KNA63EE','A2G201KPA0060','A2G201KPA1961','A2G201KPA1F99','A2G201KPA603E','A2G201KPA621C','A2G201KPA622A','A2G201KPA6246','A2G201KPA6262','A2G201KPA6327','A2G201KRA613C','A2G201KRA6611','A2G201KRA67BA','A2G201KSA2BBF','A2G201KSA614B','A2G201KSA6183','A2G201KSA621E','A2G201KSA6256','A2G201KSA65CF','A2G201KSA65DD','A2G201KTA5E73','A2G201KTA605D','A2G201KTA60A3','A2G201KTA65DE','A2G201KTA67F4','A2G201KUA0D09','A2G201KUA0FE7','A2G201KUA2016','A2G201KUA6193','A2G201KUA6525','A2G201KUA6533','A2G201KVA0340','A2G201KVA1869','A2G201KVA57DE','A2G201KVA5F1E','A2G201KVA60A5','A2G201KVA6453','A2G201KVA67CC','A2G201KWA0341','A2G201KWA09B1','A2G201KWA0C70','A2G201KWA0D43','A2G201KWA1E20','A2G201KWA2B41','A2G201KWA60C2','A2G201KWA6632','A2G201KWA66DE','A2G201KWA67F7','A2G201KXA1217','A2G201KXA6196','A2G201KYA16E2','A2G202K6A05CD','A2G202K6A06F4','A2G202K6A0B4B','A2G202K7A05CE','A2G202K7A087F','A2G303K0A01D1','A2G303K0A0660','A2G303KCA049C','A2G303KFA07C0','A2G303KLA07E1',
'A2G303KMA013A','A2G303KRA0280','A2G303KUA04FF','A2G304K0A1075','A2G304K1A0AB4','A2G304K1A0F51','A2G304K1A179D','A2G304K2A09F0','A2G304K2A0C5B','A2G304K2A0F36','A2G304K2A1069','A2G304K3A1361','A2G304K5A10C0','A2G304K5A1622','A2G304K5A17CB','A2G304K7A0458','A2G304K7A0EA0','A2G304K7A0F81','A2G304K7A1721','A2G304K8A0467','A2G304K8A08EB','A2G304K8A0CD1','A2G304K8A1269','A2G304K9A045A','A2G304K9A0BAB','A2G304K9A0EB0','A2G304K9A12B0','A2G304K9A1715','A2G304KAA0493','A2G304KAA10C5','A2G304KBA0C9C','A2G304KBA0E96','A2G304KBA1539','A2G304KCA09FA','A2G304KCA0AE9','A2G304KCA0BF4','A2G304KCA0F78','A2G304KCA108F','A2G304KDA1581','A2G304KEA0B20','A2G304KEA0E8B','A2G304KFA0DC7','A2G304KHA0856','A2G304KJA0FB6','A2G304KKA04F0','A2G304KKA0A60','A2G304KMA04BA','A2G304KMA1008','A2G304KNA049F','A2G304KNA04AD','A2G304KNA0EE7','A2G304KPA093D','A2G304KPA0A1E','A2G304KSA08A4','A2G304KSA0B2B','A2G304KSA0FCB','A2G304KTA04E9','A2G304KTA0A2F','A2G304KTA0B48','A2G304KTA0F20','A2G304KUA0B1F','A2G304KVA1055','A2G304KWA0D45','A2G304KXA0A4F','A2G304KYA09C3']

var window_slot=[
	{occupied:false,dom:""},
	{occupied:false,dom:""},
	{occupied:false,dom:""},
	{occupied:false,dom:""},
]
var window_location=["10px","240px","470px","700px"];

var userID;
var compareColumns=0;
try{
	console.log(document.cookie);
	
	var user=JSON.parse(getCookie('userdetails'));
	console.log(user)
	var userCN=user.users_CN;
	expertName=user.users_alias;
	localStorage.setItem('expertName',expertName);
	var userlevel=user.users_type.substr(6,1);
	var usertype=user.users_type=='RTA'?'RTA':user.users_type.substr(8);
	var userteam=user.users_team;
	var userCES=user.users_CES;
	var userLOB=user.users_LOB;
	var userCC=user.users_CC;
	console.log(userCC);
console.log(userlevel);
	
}catch(err){
}
console.log('userLOB:'+userLOB);
var l2endorser_editor=[103930,137451,193199];

var expanded = false;

var currentRecord=1;

var mousetimeout;
var screensaver_active = false;
var idletime = 60;
var folder = "/assets/img/commendations/";
var screensaverImageList=[];
var screensaverMasterImageList=[];
var displayLoopHandler;

var placeSearch, autocomplete;

var auxExpertRequestArray=[];
var auxRequestsArray=[];
var auxRequestListArray=[];
var fl_wifi=false;

//showSlides(1, 1);

var percentColors = [
    { pct: 0, color: { r: 0xf8, g: 0x69, b: 0x6b } },
    { pct: 65, color: { r: 0xf8, g: 0x69, b: 0x6b } },
	{ pct: 85, color: { r: 0xee, g: 0xe6, b: 0x83 } },
    { pct: 100, color: { r: 0x63, g: 0xbe, b: 0x7b } } ];

var getColorForPercentage = function(pct) {
    for (var i = 1; i < percentColors.length - 1; i++) {
        if (pct < percentColors[i].pct) {
            break;
        }
    }
    var lower = percentColors[i - 1];
    var upper = percentColors[i];
    var range = upper.pct - lower.pct;
    var rangePct = (pct - lower.pct) / range;
    var pctLower = 1 - rangePct;
    var pctUpper = rangePct;
    var color = {
        r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),
        g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),
        b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper)
    };
    return 'rgb(' + [color.r, color.g, color.b].join(',') + ')';
    // or output as hex if preferred
}


var rtaToExpert="";
var rtaToExpertType="";

var sundayDate=new Date();
var prevMondayDate=new Date();
var weekMonth1, weekDay1, weekYear1, weekMonth2, weekDay2, weekYear2;

var inactivityTimeout = false;
var resetTimeoutOK = false;
var goReset = false;

$(document).mousemove(function (){
	resetTimeout();
});
console.log(localStorage);
document.onkeyup = function(e) {
	
	//console.log(e.target.id);
	//console.log(e.target.id=='#counter');
	//console.log(e);
	//if (e.ctrlKey && e.shiftKey && e.which == 85) {
	//	$("#modal_update").css('display','block');
	//}

	if (e.ctrlKey && e.shiftKey && e.which == 85) {
		show_screensaver();
	}

	if (e.ctrlKey && e.shiftKey && e.which == 220) {
		
		arleeopen=true;
		$('#modal_arlee').css('display','block');
		if(!arleeloaded){
			init();
			$('#testCanvas').css('display','none');
			$('#arleeloading').css('display','block');
		}
	}

	if((e.which == 13)&&(e.target.id=='counter')){
		//console.log('counter trigger');
		//Disable textbox to prevent multiple submit
		$('#counter').attr("disabled", "disabled");
		currentRecord=$('#counter').val();
		getData(0);
		//Enable the textbox again if needed.
		$('#counter').removeAttr("disabled");
	}
}

$('a[href*="#"]')
// Remove links that don't actually link to anything
.not('[href="#"]')
.not('[href="#0"]')
.click(function(event) {
	// On-page links
	if (location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '')&&location.hostname == this.hostname) {
		// Figure out element to scroll to
		var target = $(this.hash);
		target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
		// Does a scroll target exist?
		if (target.length) {
		// Only prevent default if animation is actually gonna happen
			event.preventDefault();
			$('body').animate({
				scrollTop: target.offset().top
			}, 1000, function() {
				// Callback after animation
				// Must change focus!
				var $target = $(target);
				$target.focus();
				if ($target.is(":focus")) { // Checking if the target was focused
				return false;
				} else {
				$target.attr('tabindex','-1'); // Adding tabindex for elements not focusable
				$target.focus(); // Set focus again
				};
			});
		}
	}
});

//var other_server='10.54.107.196';
var port;
//var other_server='10.54.108.15';
var metricDate;
var pattern="yy/MM/dd hh:mm";
var chatCounter=0;
var chatCounterL2=0;
var chatCounterConsult=0;
var chatCounterCCTConsult=0;
var chatTrainerCounter=0;
var updateCounter=0;
var dashBoardCounter=0;
var auxCounter=0;

arleeloaded=false;
arleeopen=false;
//var socket3;
var socket;

$('.RTAchatlist').on('click', function(e) { 
	console.log('clicked');
	console.log(e);
	$('#rtaPopup').offset({ top: e.pageY, left:  e.pageX}).fadeIn();
 });

var _lsTotal=0,_xLen,_x;for(_x in localStorage){ if(!localStorage.hasOwnProperty(_x)){continue;} _xLen= ((localStorage[_x].length + _x.length)* 2);_lsTotal+=_xLen; console.log(_x.substr(0,50)+" = "+ (_xLen/1024).toFixed(2)+" KB")};console.log("Total = " + (_lsTotal / 1024).toFixed(2) + " KB");

	if (Notification.permission === "granted") {
		console.log("permission granted")		;
	} else{
		Notification.requestPermission().then(permission => {
			console.log("permission granted");
			
		});
	}

	

	


$(function(){
	console.log("LOADED");
	function showNotification(title,message,callback) {
		var notification = new Notification(title, {
		   body: message,
		   icon: "/favicon.ico",
		   requireInteraction: true 
		})
		notification.onclick = function(x) { 
			window.focus(); 
			if(callback) 
				callback(); 
			this.close(); };
		document.addEventListener('visibilitychange', function() {
			if (document.visibilityState === 'visible') {
			  // The tab has become visible so clear the now-stale Notification.
			  notification.close();
			}
		});
	}


	

	resetTimeout();
	$('#RTAchatlist').on('click', function(e) { 
		console.log('clicked');
		console.log(e);
		$('#rtaPopup').offset({ top: e.pageY, left:  e.pageX}).fadeIn();
 	});


	if(usertype=='RTA'){
		$('#chatForm').css('max-width','375px')
		$('#chatForm').css('width','375px')
		$('#chatForm>#formchat').css('max-width','100%')
		$('#messageDisplay').css('width','50%')
		$('#listDisplay').css('width','50%')
		$('#listDisplay>ul').css('width','100%')
		$('ul#chatuserlist>li').attr('style','width:100%!important')
		
	}

	$('.select_endorser').change(function(event){
		if($(this).val()!=''){
			$(this).parent().css('background-color','rgba(255, 255, 255, 0.8)')
		}else{
			$(this).parent().css('background-color','#ad717b');
		}
		if($(this).val()==user.users_CES){
			$(this).parent().css('background-color','#75c98b')
		}
	})

	getMetricDate(function(){
		sundayDate=new Date(metricDate);
		sundayDate.setDate(metricDate.getDate()-metricDate.getDay());
		prevMondayDate=new Date(metricDate);
		prevMondayDate.setDate(sundayDate.getDate()-6);
		weekMonth1=((((prevMondayDate.getMonth()+1)+'').length<2)?'0':'')+(prevMondayDate.getMonth()+1);
		weekDay1=(((prevMondayDate.getDate()+'').length<2)?'0':'')+prevMondayDate.getDate();
		weekYear1=prevMondayDate.getFullYear();
		weekMonth2=((((sundayDate.getMonth()+1)+'').length<2)?'0':'')+(sundayDate.getMonth()+1);
		weekDay2=(((sundayDate.getDate()+'').length<2)?'0':'')+sundayDate.getDate();
		weekYear2=sundayDate.getFullYear();
		console.log(weekMonth1);
		console.log(sundayDate);
	})

	//runScreenSaver();
	$('#updateform').submit(function(event) {
		event.preventDefault();
		//$(this).submit();
	}); 

	$('#aht_form').submit(function(event) {
		event.preventDefault();
		//$(this).submit();
	}); 
	//socket3 = io(document.location.hostname+":3003");
//	localStorage.removeItem('requestsArray');localStorage.removeItem('auxRequestListArray');localStorage.removeItem('auxExpertRequestArray');
	if(usertype=='RTA'){
		if ("requestsArray" in localStorage){
			auxRequestsArray=JSON.parse(localStorage.getItem('requestsArray') || "[]");
			console.log(auxRequestsArray);
			auxRequestsArray.slice().reverse().forEach(function (data){
				console.log(data);
				$('#auxRequests').append("<tr id="+data.auxid+" class='blink-bg'><td>"+data.name+"</td><td>"+data.auxtype+"</td><td>"+data.auxtime+"</td><td>"+data.message+"</td><td><button onclick=approveAuxRequest('"+data.auxid+"',1)>Approve</button><button onclick=approveAuxRequest('"+data.auxid+"',0)>Disapprove</button><textarea id='message_"+data.auxid+"'></textarea></td></tr>")
			})
		}
		
		if ("auxRequestListArray" in localStorage){
			auxRequestListArray=JSON.parse(localStorage.getItem('auxRequestListArray') || "[]");
			console.log(auxRequestListArray);
			auxRequestListArray.slice().reverse().forEach(function (dataR){
				console.log(dataR);
				$('#auxRequestList').append("<tr id="+dataR.auxid+"><td>"+dataR.name+"</td><td>"+dataR.auxtype+"</td><td>"+dataR.auxtime+"</td><td>"+dataR.message+"</td><td>"+dataR.reply+"</td><td>"+((dataR.approved==1)?"Approved":"Disapproved")+"</td></tr>")
			})
		}
		
	}else{
		
		if ("auxExpertRequestArray" in localStorage){
			auxExpertRequestArray=JSON.parse(localStorage.getItem('auxExpertRequestArray') || "[]");
			console.log(auxExpertRequestArray);
			$('#auxList').html("");
			auxExpertRequestArray.slice().reverse().forEach(function (request){
				$('#auxList').append($('<li id='+userCES+'-'+request.auxtime.replace(/:/g,'')+'>').html('<b>'+request.auxtype+'</b><span class="auxtime">'+request.auxtime+'</span><span class="approved">'+ ((request.approved>0)?"Approved":((request.approved<0)?"Disapproved":"Pending"))+'</span>'));	
			})
		}
	}
	
	try{
		console.log(document.location.hostname+":"+document.location.port);
		socket = io(document.location.hostname+(document.location.port==''?"":":"+document.location.port));
		socket.on('connect', () => {
			data = {user: user, name: expertName, userID: socket.id, dateLog: new Date().toLocaleString("en-US", {timeZone: "Asia/Manila"})};
			socket.emit('setSocketId', data);
			userID=data.userID;
			console.log(userID);
		});

		socket.on('ip address', function(ip){
			$('#localip').html("&nbsp;&nbsp;&nbsp;" + ip.split("::ffff:")[1]==undefined?'':ip.split("::ffff:")[1]);
			data = {user: user, name: expertName, userID: socket.id, ip: ip, userlevel:userlevel, userCES: userCES, userType:usertype};
			socket.emit('register chat', data);
		});

		socket.on('message from rta', function(type){
			$('#rtaMessageText').html(type);
			$('#rtaMessage').css('top','20px');
			$('#rtaMessage').css('right','20px');
			$('#rtaMessage').fadeIn();
			setTimeout(function(){
				$('#rtaMessage').fadeOut();
			},10000)
		});

		socket.on('chat list', function(data){
			console.log('get chat list');
			//console.log(data);
			var chatList=data;
			$('#chatuserlist').html('');
			var sortArray = []
			$.each(chatList,function(index,value){
				if(value!=null)
					sortArray.push({'userCN':value.user_CN,'userName':value.username,'chatID':value.userID});
			});
			
			//console.log(sortArray);
			if(usertype=='RTA'){
				sortArray.sort((a, b) => (a.userCN > b.userCN) ? 1 : -1)
				sortArray.forEach(element=>{
					$('#chatuserlist').append($('<li>').attr('id',element.chatID).attr('onclick','popupRTA(event)').html('<b id="'+element.chatID+'" onclick=popupRTA(event)>'+titleCase(element.userCN)+'</b>').css('cursor','pointer'));
				});
			}else{
				sortArray.sort((a, b) => (a.userName > b.userName) ? 1 : -1)
				sortArray.forEach(element=>{
					$('#chatuserlist').append($('<li>').html('<b>'+element.userName+'</b>'));
				});
			}
			//
			//daEach(element => {
				//console.log(element);
			//});
		});

		socket.on('chat listL2', function(data){
			//console.log(data);
			$('#chatuserlistL2').html('');
			var sortArray = []
			$.each(data,function(index,value){
				if(value!=null)
					sortArray.push(value.username);
			});
			sortArray.sort((a, b) => (a > b) ? 1 : -1)
			//console.log(sortArray);
			sortArray.forEach(element=>{
				$('#chatuserlistL2').append($('<li>').html('<b>'+element+'</b>'));
			});
			//
			//daEach(element => {
				//console.log(element);
			//});
		});


		socket.on('aux request', function(requestData){
			if(usertype=='RTA'){
				$('#auxRequestAudio').trigger('play');
				console.log(auxRequestsArray);
				auxRequestsArray.push(requestData);
				localStorage.setItem('requestsArray',JSON.stringify(auxRequestsArray));
				console.log(localStorage.getItem('requestsArray'));
				console.log('aux request');
				$('#auxRequests').html("<thead><th onclick=sortTable('auxRequests',0)>Name</th><th onclick=sortTable('auxRequests',1)>Aux Type</th><th  onclick=sortTable('auxRequests',2)>Time</th><th>Message</th><th>Action</th></thead>");
				auxRequestsArray.slice().reverse().forEach(function (data){
					$('#auxRequests').append("<tr id="+data.auxid+" class='blink-bg'><td>"+data.name+"</td><td>"+data.auxtype+"</td><td>"+data.auxtime+"</td><td>"+data.message+"</td><td><button onclick=approveAuxRequest('"+data.auxid+"',1)>Approve</button><button onclick=approveAuxRequest('"+data.auxid+"',-1)>Disapprove</button><textarea id='message_"+data.auxid+"'></textarea></td></tr>")
				})
			}
		})

		//chat trainer

		socket.on('chattrainer open queue',function(){
			$('#trainer-info').addClass('hiddenDiv');
			$('#chatTrainerQueue').removeClass('hiddenDiv');
			
		})

		socket.on('chattrainer queue', function(queuedata){
			console.log('get chat list');
			console.log(queuedata);
			var userlistChatTrainerQueue=queuedata;
			var lastExpert=$('#userlistChatTrainerQueue>li:last-child>b').html();
			var lastQueueLength=$('#userlistChatTrainerQueue>li').length;
			console.log(lastExpert);
			$('#userlistChatTrainerQueue').html('');
			var sortArray = []
			$.each(userlistChatTrainerQueue.queue,function(index,value){
				if(value!=null)
					$('#userlistChatTrainerQueue').append($('<li>').html('<b>'+value.FN+' '+value.LN+'</b>'));
			});
			
			if((usertype=='Chat Trainee')&&(queuedata.queue.length>0)){
				console.log(lastQueueLength);
				console.log($('#userlistChatTrainerQueue>li').length);
				if(($('#userlistChatTrainerQueue>li:last-child>b').html()!=lastExpert)||(lastQueueLength<$('#userlistChatTrainerQueue>li').length)){
					$('#chatConsultAudio').trigger('play');
				};
			}

			if((usertype=='Chat Trainee')&&(queuedata.queue.length>0)){
				$('#gettrainer_div').removeClass('hiddenDiv');
			}else{
				$('#gettrainer_div').addClass('hiddenDiv');
			}

			if((usertype=='Chat Trainee')&&(userlistChatTrainerQueue.queue.length>0)&&!chatChatTrainerOpen){
				$('#chatBadgeChatTrainer').removeClass('hiddenDiv');
				$('#chatBadgeChatTrainer').html(userlistChatTrainerQueue.queue.length);
			}else{
				$('#chatBadgeChatTrainer').addClass('hiddenDiv');
			}
		})

		socket.on('chattrainer avail', function(data){
			console.log('get l2 list');
			console.log(data.avail.length);
			$('#availchattrainer').html(data.avail.length)
		})

		socket.on('chattrainer joinroom', function(room,participants,FN,LN,email,product,subproduct){
			console.log(room);
			console.log(participants);
			var datenum=Date.now();
			if(usertype=='Chat Trainee'){
				//saveChatTrainer(datenum,room,JSON.parse(participants).trainee,JSON.parse(participants).trainer,FN,LN,email,product,subproduct)
				if(chatChatTrainerOpen){
					$('#chatFormChatTrainer2').css('right','250px');
					$('#chatFormChatTrainer2').css('display','block');
				}else{
					$('#chatFormChatTrainer').css('display','block');
				}
			}
			socket.emit('chattrainer joinserver room',room,participants);
			init_trainer_room(room,participants,FN,LN,email,product,subproduct);
		})

		socket.on('chattrainer message', function(expert,message,room){
			console.log(expert);
			console.log(message);
			console.log(room);
			if($('.'+room).css('display')=='none'){
				chatCounterTrainer++;
				if($('#chatBadgeChatTrainer').hasClass('hiddenDiv')){
					$('#chatBadgeChatTrainer').removeClass('hiddenDiv');
				}
				$('#chatBadgeChatTrainer').html(chatCounter);
			}
			$('.'+room+' .chatTrainerMessage').append($('<li>').html('<b>'+expert+'</b><br><span class="chat_text">'+message+'</span>'));
			$('.'+room+' .chatTrainerScrollable').scrollTop($('.'+room+' .chatTrainerScrollable').prop('scrollHeight'));
		})

		socket.on('chattrainer disconnected', function(expert,room){
			
			$('.'+room+' #messagesChatTrainer').append($('<li>').html('<br>'+expert+' has been disconnected.<br><br>Chat training terminated.'));
			$('.'+room+' #messagesChatTrainer2').append($('<li>').html('<br>'+expert+' has been disconnected.<br><br>Chat training terminated.'));
		})

		socket.on('chattrainer gettranscript',function (transcript){
			showTrainerTranscript(transcript);
		});

		$('#formChatTrainer').submit(function(){
			socket.emit('chattrainer message',$('#roomnameTrainer').html(),userCN,$('#chat_messageChatTrainer').val())
			$('#chat_messageChatTrainer').val('');
			return false;
		});

		// l2 chat consult
		socket.on('chatconsult open queue',function(){
			$('#consult-info').addClass('hiddenDiv');
			$('#chatQueue').removeClass('hiddenDiv');
		})

		socket.on('chatconsult queue', function(queuedata){
			console.log('get chat list');
			console.log(queuedata);
			var userlistChatConsultQueue=queuedata;
			var lastExpert=$('#userlistChatConsultQueue>li:last-child>b').html();
			var lastQueueLength=$('#userlistChatConsultQueue>li').length;
			console.log(lastExpert);
			$('#userlistChatConsultQueue').html('');
			var sortArray = []
			$.each(userlistChatConsultQueue.queue,function(index,value){
				if(value!=null)
					$('#userlistChatConsultQueue').append($('<li>').html('<b>'+value.user_CN+'</b>'));
			});
			
			if((userlevel==2)&&(queuedata.queue.length>0)){
				console.log(lastQueueLength);
				console.log($('#userlistChatConsultQueue>li').length);
				if(($('#userlistChatConsultQueue>li:last-child>b').html()!=lastExpert)||(lastQueueLength<$('#userlistChatConsultQueue>li').length)){
					/*myWindow = window.open("", "Title", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=200,height=200,top="+0+",right="+100);
					myWindow.document.head.innerHTML = "<head><title>Chat Consult Request</title>"
					myWindow.document.body.innerHTML = $('#userlistChatConsultQueue>li:last-child>b').html();
					myWindow.focus();*/
					$('#chatConsultAudio').trigger('play');
					/*setTimeout(function(){
						myWindow.close();
						window.focus();
					},5000);*/
				};
			}

			if((userlevel==2)&&(queuedata.queue.length>0)){
				if(expertAvail)
					$('#getconsult_div').removeClass('hiddenDiv');
				else
					$('#getconsult_div').addClass('hiddenDiv');
			}else{
				$('#getconsult_div').addClass('hiddenDiv');
			}

			if((userlevel==2)&&(userlistChatConsultQueue.queue.length>0)&&!chatChatConsultOpen){
				showNotification("Chat Consult Waiting","From: "+userlistChatConsultQueue.queue[userlistChatConsultQueue.queue.length-1].user_CN+"\nCase Number:  "+userlistChatConsultQueue.queue[userlistChatConsultQueue.queue.length-1].casenumber+"\nInquiry: "+userlistChatConsultQueue.queue[userlistChatConsultQueue.queue.length-1].inquiry);
				$('#chatBadgeChatConsult').removeClass('hiddenDiv');
				$('#chatBadgeChatConsult').html(userlistChatConsultQueue.queue.length);
			}else{
				$('#chatBadgeChatConsult').addClass('hiddenDiv');
			}
		})

		socket.on('chatconsult l2avail', function(l2data){
			console.log('get l2 list');
			console.log(l2data.l2avail.length);
			$('#l2availchatconsult').html(l2data.l2avail.length)
		})

		socket.on('chatconsult joinroom', function(room,participants,casenumber,inquiry){
			chatQueue--;
			console.log(room);
			console.log(participants);
			var datenum=Date.now();
			if(userLOB=='L2 ARLO'){
				saveChatConsult(datenum,room,JSON.parse(participants).L2,JSON.parse(participants).expert,casenumber,inquiry)
			}
			socket.emit('chatconsult joinserver room',room,participants);
			
			init_room(room,participants,casenumber,inquiry);
		})

		socket.on('chatconsult message', function(expert,message,room){
			console.log(room)
			if(userLOB=="L2 ARLO"){
				if(chatSession[0]==room){
					roomWindow=1;
				}
				else if(chatSession[1]==room){
					roomWindow=2;
				}
			}else{
				roomWindow="";
			}

			$('#chatFormChatConsult'+roomWindow+' #messagesChatConsult').append($('<li>').html('<b>'+expert+'</b><br><span class="chat_text">'+message+'</span>'));
			$('#chatFormChatConsult'+roomWindow+' #messageDisplayChatConsult').scrollTop($('#chatFormChatConsult'+roomWindow+' #messageDisplayChatConsult').prop('scrollHeight'));
		})

		socket.on('chatconsult disconnected', function(details){
			var roomWindow;
			if(userLOB=="L2 ARLO"){
				if(chatSession[0]==details.room){
					roomWindow=1;
				}
				else if(chatSession[1]==details.room){
					roomWindow=2;
				}
			}else{
				roomWindow="";
			}
			console.log(details.room)
			console.log($('#chatFormChatConsult'+roomWindow+' #roomnameConsult').html());
			if($('#chatFormChatConsult'+roomWindow+' #roomnameConsult').html()==details.room){
				$('#chatFormChatConsult'+roomWindow+' #messagesChatConsult').append($('<li>').html('<br>'+details.expert+' has been disconnected.<br><br>Chat consult terminated.'));
				//endConsult();
				updateRoom(details.room,details.transcript);
			}
			$('#chatFormChatConsult'+roomWindow+' #chatuserlistChatConsult').html("");
		})

		socket.on('chatconsult gettranscript',function (transcript){
			showTranscript2(transcript);
		});


		// rma approval
		socket.on('chatrmaapproval open queue',function(){
			$('#RmaApproval-info').addClass('hiddenDiv');
			$('#RmaApprovalQueue').removeClass('hiddenDiv');
		})

		socket.on('chatrmaapproval queue', function(queuedata){
			console.log('get chat list');
			console.log(queuedata);
			var userlistChatRmaApprovalQueue=queuedata;
			var lastExpert=$('#userlistChatRmaApprovalQueue>li:last-child>b').html();
			var lastQueueLength=$('#userlistChatRmaApprovalQueue>li').length;
			console.log(lastExpert);
			$('#userlistChatRmaApprovalQueue').html('');
			var sortArray = []
			$.each(userlistChatRmaApprovalQueue.queue,function(index,value){
				if(value!=null){
					$('#userlistChatRmaApprovalQueue').append($('<li>').html('<b>'+value.user_CN+'</b>'));
					
				}
			});
			RmaApprovalQueue=$('#userlistChatRmaApprovalQueue>li').length;
			console.log(RmaApprovalQueue);
			
			if((userlevel==2)&&(queuedata.queue.length>0)){
				console.log(lastQueueLength);
				console.log($('#userlistChatRmaApprovalQueue>li').length);
				if(($('#userlistChatRmaApprovalQueue>li:last-child>b').html()!=lastExpert)||(lastQueueLength<$('#userlistChatRmaApprovalQueue>li').length)){
					/*myWindow = window.open("", "Title", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=200,height=200,top="+0+",right="+100);
					myWindow.document.head.innerHTML = "<head><title>Chat Consult Request</title>"
					myWindow.document.body.innerHTML = $('#userlistChatConsultQueue>li:last-child>b').html();
					myWindow.focus();*/
					$('#chatConsultAudio').trigger('play');
					/*setTimeout(function(){
						myWindow.close();
						window.focus();
					},5000);*/
				};
			}

			if((userlevel==2)&&(queuedata.queue.length>0)){
				if(expertAvail)
					$('#getRmaApproval_button').removeClass('hiddenDiv');
				else
					$('#getRmaApproval_button').addClass('hiddenDiv');
			}else{
				$('#getRmaApproval_button').addClass('hiddenDiv');
			}

			if((userlevel==2)&&(userlistChatRmaApprovalQueue.queue.length>0)&&!chatRmaApprovalOpen){
				showNotification("Chat Consult Waiting","From: "+userlistChatRmaApprovalQueue.queue[userlistChatRmaApprovalQueue.queue.length-1].user_CN+"\nCase Number:  "+userlistChatRmaApprovalQueue.queue[userlistChatRmaApprovalQueue.queue.length-1].casenumber+"\nInquiry: "+userlistChatRmaApprovalQueue.queue[userlistChatRmaApprovalQueue.queue.length-1].inquiry);
				$('#chatBadgeRmaApproval').removeClass('hiddenDiv');
				$('#chatBadgeRmaApproval').html(userlistChatRmaApprovalQueue.queue.length);
			}else{
				$('#chatBadgeRmaApproval').addClass('hiddenDiv');
			}
		})

		socket.on('chatrmaapproval l2avail', function(l2data){
			console.log('get l2 list');
			console.log(l2data.l2avail);
			$('#l2availchatrmaapproval').html(l2data.l2avail.length)
		})

		socket.on('chatrmaapproval joinroom', function(room,participants,casenumber,inquiry){
			console.log(room);
			RmaApprovalQueue--;
			console.log(room);
			console.log(participants);
			var datenum=Date.now();
			if(userLOB=='L2 ARLO'){
				saveChatConsult(datenum,room,JSON.parse(participants).L2,JSON.parse(participants).expert,casenumber,inquiry)
			}
			socket.emit('chatrmaapproval joinserver room',room,participants);
			
			init_roomRMA(room,participants,casenumber,inquiry);
		})

		socket.on('chatrmaapproval message', function(expert,message,room){
			console.log(message)
			/*if(userLOB=="L2 ARLO"){
				if(chatSession[0]==room){
					roomWindow=1;
				}
				else if(chatSession[1]==room){
					roomWindow=2;
				}
			}else{
				roomWindow="";
			}*/
			roomWindow="";
			$('#chatFormRmaApproval'+roomWindow+' #messagesRmaApproval').append($('<li>').html('<b>'+expert+'</b><br><span class="chat_text">'+message+'</span>'));
			$('#chatFormRmaApproval'+roomWindow+' #messageDisplayChatRmaApproval').scrollTop($('#chatFormRmaApproval'+roomWindow+' #messageDisplayChatRmaApproval').prop('scrollHeight'));
		})

		socket.on('chatrmaapproval disconnected', function(details){
			var roomWindow;
			if(userLOB=="L2 ARLO"){
				if(chatSession[0]==details.room){
					roomWindow=1;
				}
				else if(chatSession[1]==details.room){
					roomWindow=2;
				}
			}else{
				roomWindow="";
			}
			roomWindow="";
			console.log(details.room)
			console.log($('#chatFormChatConsult'+roomWindow+' #roomnameConsult').html());
			if($('#chatFormChatConsult'+roomWindow+' #roomnameConsult').html()==details.room){
				$('#chatFormChatConsult'+roomWindow+' #messagesChatConsult').append($('<li>').html('<br>'+details.expert+' has been disconnected.<br><br>Chat consult terminated.'));
				//endConsult();
				updateRoom(details.room,details.transcript);
			}
			$('#chatFormChatConsult'+roomWindow+' #chatuserlistChatConsult').html("");
		})

		socket.on('chatrmaapproval gettranscript',function (transcript){
			showTranscript2(transcript);
		});

		// cct chat consult
		socket.on('chatcctconsult open queue',function(){
			$('#CCTconsult-info').addClass('hiddenDiv');
			$('#chatCCTQueue').removeClass('hiddenDiv');
			
		})

		socket.on('chatcctconsult queue', function(queuedata){
			cctQueue=queuedata.cctqueue.length;
			console.log('get chat list');
			console.log(queuedata);
			var userlistChatCCTConsultQueue=queuedata;
			var lastExpert=$('#userlistChatCCTConsultQueue>li:last-child>b').html();
			var lastQueueLength=$('#userlistChatCCTConsultQueue>li').length;
			console.log(lastExpert);
			$('#userlistChatCCTConsultQueue').html('');
			var sortArray = []
			$.each(userlistChatCCTConsultQueue.cctqueue,function(index,value){
				if(value!=null)
					$('#userlistChatCCTConsultQueue').append($('<li>').html('<b>'+value.user_CN+'</b>'));
			});
			
			if(((userLOB=='CCT ARLO')||(userLOB=='CCT IOPEX')||(userLOB=='CCT/OS ARLO'))&&(queuedata.cctqueue.length>0)){
				console.log(lastQueueLength);
				console.log($('#userlistChatCCTConsultQueue>li').length);
				if(($('#userlistChatCCTConsultQueue>li:last-child>b').html()!=lastExpert)||(lastQueueLength<$('#userlistChatCCTConsultQueue>li').length)){
					/*myWindow = window.open("", "Title", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=200,height=200,top="+0+",right="+100);
					myWindow.document.head.innerHTML = "<head><title>Chat Consult Request</title>"
					myWindow.document.body.innerHTML = $('#userlistChatConsultQueue>li:last-child>b').html();
					myWindow.focus();*/
					$('#chatConsultAudio').trigger('play');
					/*setTimeout(function(){
						myWindow.close();
						window.focus();
					},5000);*/
				};
			}
			if(((userLOB=='CCT ARLO')||(userLOB=='CCT IOPEX')||(userLOB=='CCT/OS ARLO'))&&(queuedata.cctqueue.length>0)){
				if(expertAvail)
					$('#getCCTconsult_div').removeClass('hiddenDiv');
				else
					$('#getCCTconsult_div').addClass('hiddenDiv');
			}else{
				$('#getCCTconsult_div').addClass('hiddenDiv');
			}

			if(((userLOB=='CCT ARLO')||(userLOB=='CCT IOPEX')||(userLOB=='CCT/OS ARLO'))&&(queuedata.cctqueue.length>0)&&!chatChatCCTConsultOpen){
				showNotification("Chat Consult Waiting","From: "+userlistChatCCTConsultQueue.cctqueue[userlistChatCCTConsultQueue.cctqueue.length-1].user_CN+"\nCase Number:  "+userlistChatCCTConsultQueue.cctqueue[userlistChatCCTConsultQueue.cctqueue.length-1].casenumber+"\nInquiry: "+userlistChatCCTConsultQueue.cctqueue[userlistChatCCTConsultQueue.cctqueue.length-1].inquiry);
				$('#chatBadgeChatCCTConsult').removeClass('hiddenDiv');
				$('#chatBadgeChatCCTConsult').html(queuedata.cctqueue.length);
			}else{

				$('#chatBadgeChatCCTConsult').addClass('hiddenDiv');
			}
		})

		socket.on('chatcctconsult cctavail', function(l2data){
			console.log('get l2 list');
			console.log(l2data.cctavail.length);
			$('#cctavailchatconsult').html(l2data.cctavail.length)
		})

		socket.on('chatcctconsult joinroom', function(room,participants,casenumber,inquiry){
			cctQueue--;
			console.log(room);
			console.log(participants);
			var datenum=Date.now();
			if((userLOB=='CCT ARLO')||(userLOB=='CCT IOPEX')||(userLOB=='CCT/OS ARLO')){
				saveChatCCTConsult(datenum,room,JSON.parse(participants).L2,JSON.parse(participants).expert,casenumber,inquiry)
			}
			socket.emit('chatcctconsult joinserver room',room,participants);
			
			init_roomCCT(room,participants,casenumber,inquiry);
		})

		socket.on('chatcctconsult message', function(expert,message,room){
			console.log(room)
			if((userLOB=="CCT ARLO")||(userLOB=="CCT IOPEX")||(userLOB=="CCT/OS ARLO")){
				if(chatSession[0]==room){
					roomWindow=1;
				}
				else if(chatSession[1]==room){
					roomWindow=2;
				}
			}else{
				roomWindow="";
			}

			$('#chatFormChatCCTConsult'+roomWindow+' #messagesChatCCTConsult').append($('<li>').html('<b>'+expert+'</b><br><span class="chat_text">'+message+'</span>'));
			$('#chatFormChatCCTConsult'+roomWindow+' #messageDisplayChatCCTConsult').scrollTop($('#chatFormChatCCTConsult'+roomWindow+' #messageDisplayChatCCTConsult').prop('scrollHeight'));
		})

		socket.on('chatcctconsult disconnected', function(details){
			var roomWindow;
			if((userLOB=="CCT ARLO")||(userLOB=="CCT IOPEX")||(userLOB=="CCT/OS ARLO")){
				if(chatSession[0]==details.room){
					roomWindow=1;
				}
				else if(chatSession[1]==details.room){
					roomWindow=2;
				}
			}else{
				roomWindow="";
			}
			console.log(details.room)
			console.log(roomWindow);
			if($('#chatFormChatCCTConsult'+roomWindow+' #roomnameCCTConsult').html()==details.room){
				$('#chatFormChatCCTConsult'+roomWindow+' #messagesChatCCTConsult').append($('<li>').html('<br>'+details.expert+' has been disconnected.<br><br>Chat consult terminated.'));
				//endConsult();
				updateCCTRoom(details.room,details.transcript);
			}
			$('#chatFormChatCCTConsult'+roomWindow+' #chatuserlistChatCCTConsult').html("");
		})

		socket.on('chatcctconsult gettranscript',function (transcript){
			showCCTTranscript2(transcript);
		});

		$('#formChatCCTConsult').submit(function(){
			console.log($('#chatFormChatCCTConsult #roomnameCCTConsult').html());
			socket.emit('chatcctconsult message',$('#chatFormChatCCTConsult #roomnameCCTConsult').html(),userCN,$('#chat_messageChatCCTConsult').val())
			$('#chat_messageChatCCTConsult').val('');
			return false;
		});

		$('#formChatCCTConsult1').submit(function(){
			console.log($('#chatFormChatCCTConsult1 #roomnameCCTConsult').html());
			socket.emit('chatcctconsult message',$('#chatFormChatCCTConsult1 #roomnameCCTConsult').html(),userCN,$('#chat_messageChatCCTConsult1').val())
			$('#chat_messageChatCCTConsult1').val('');
			return false;
		});

		$('#formChatCCTConsult2').submit(function(){
			console.log($('#chatFormChatCCTConsult2 #roomnameCCTConsult').html());
			socket.emit('chatcctconsult message',$('#chatFormChatCCTConsult2 #roomnameCCTConsult').html(),userCN,$('#chat_messageChatCCTConsult2').val())
			$('#chat_messageChatCCTConsult2').val('');
			return false;
		});

		$('#formRmaApproval').submit(function(){
			socket.emit('chatrmaapproval message',$('#chatFormRmaApproval #roomnameRmaApproval').html(),userCN,$('#chat_messageChatRmaApproval').val())
			$('#chat_messageChatRmaApproval').val('');
			return false;
		});

		$('#formChatConsult').submit(function(){
			console.log($('#chat_messageChatConsult').val());
			socket.emit('chatconsult message',$('#roomnameConsult').html(),userCN,$('#chat_messageChatConsult').val())
			$('#chat_messageChatConsult').val('');
			return false;
		});

		$('#formChatConsult1').submit(function(){
			console.log($('#chatFormChatConsult1 #roomnameConsult').html());
			socket.emit('chatconsult message',$('#chatFormChatConsult1 #roomnameConsult').html(),userCN,$('#chat_messageChatConsult1').val())
			$('#chat_messageChatConsult1').val('');
			return false;
		});

		$('#formChatConsult2').submit(function(){
			console.log($('#chatFormChatConsult2 #roomnameConsult').html());
			socket.emit('chatconsult message',$('#chatFormChatConsult2 #roomnameConsult').html(),userCN,$('#chat_messageChatConsult2').val())
			$('#chat_messageChatConsult2').val('');
			return false;
		});

		$('#formL2chat').submit(function(event){
			
			socket.emit('chat messageL2',expertName,$('#chat_messageL2').val());
			$('#chat_messageL2').val('');
			return false;
		});

		$('#formchat').submit(function(){
			socket.emit('chat message',expertName,$('#chat_message').val());
			$('#chat_message').val('');
			return false;
		});

		$('#formaux').submit(function(){
			auxExpertRequestArray.push({auxid:userCES+"-"+$('#auxTime').val().replace(/:/g,''),auxmessage:$('#aux_message').val(),auxtype:$('input[name="auxType"]:checked').val(),auxtime:$('#auxTime').val(),approved:0,reply:''})
			localStorage.setItem('auxExpertRequestArray',JSON.stringify(auxExpertRequestArray));
			console.log(localStorage.getItem('auxExpertRequestArray'))
			socket.emit('aux request',userCN,$('#aux_message').val(),$('input[name="auxType"]:checked').val(),$('#auxTime').val(),userCES+"-"+$('#auxTime').val().replace(/:/g,''));
			$('#auxList').html("");
			auxExpertRequestArray.slice().reverse().forEach(function (request){
				$('#auxList').append($('<li id='+userCES+'-'+request.auxtime.replace(/:/g,'')+'>').html('<b>'+request.auxtype+'</b><span class="auxtime">'+request.auxtime+'</span><span class="approved">'+ ((request.approved>0)?"Approved":((request.approved<0)?"Disapproved":"Pending"))+'</span>'));	
			})
			
			$('#aux_message').val('');
			return false;
		});

		socket.on('new escalation', function(){
			console.log("new escalation received");
			dashBoardCounter++;
			$('#dashBoardBadge').removeClass('hiddenDiv');
			$('#dashBoardBadge').html(dashBoardCounter);
			updateEscalationTable();
		});

		socket.on('new consult', function(){
			console.log("new consult received");
			dashBoardCounter++;
			$('#dashBoardBadge').removeClass('hiddenDiv');
			$('#dashBoardBadge').html(dashBoardCounter);
			updateConsultTable();
		});

		socket.on('new update', function(){
			updateCounter++;
			$('#updateBadge').removeClass('hiddenDiv');
			$('#updateBadge').html(updateCounter);
		});

		socket.on('chat messageL2', function(expertname,msg){
			if($('#chatFormL2').css('display')=='none'){
				chatCounterL2++;
				if($('#chatBadgeL2').hasClass('hiddenDiv')){
					$('#chatBadgeL2').removeClass('hiddenDiv');
				}
				$('#chatBadgeL2').html(chatCounterL2);
			}
			$('#messagesL2').append($('<li>').html('<b>'+expertname+'</b><br><span class="chat_text">'+msg+'</span>'));
			$('#listDisplayL2').scrollTop($('.listDisplayL2').prop('scrollHeight'));
		});
		
		socket.on('chat message', function(expertname,msg){
			if($('#chatForm').css('display')=='none'){
				chatCounter++;
				if($('#chatBadge').hasClass('hiddenDiv')){
					$('#chatBadge').removeClass('hiddenDiv');
				}
				$('#chatBadge').html(chatCounter);
			}
			$('#messages').append($('<li>').html('<b>'+expertname+'</b><br><span class="chat_text">'+msg+'</span>'));
			$('#listDisplay').scrollTop($('.listDisplay').prop('scrollHeight'));
		});

		socket.on('aux approved request', function(data){
			if(usertype=='RTA'){
				approveAuxRequest(data.auxid,1,true)
			}else{
				console.log(data);
				console.log(auxExpertRequestArray);
				auxExpertRequestArray[auxExpertRequestArray.findIndex(element => element.auxid == data.auxid)].approved=1;
				auxExpertRequestArray[auxExpertRequestArray.findIndex(element => element.auxid == data.auxid)].reply=data.message;
				localStorage.setItem('auxExpertRequestArray',JSON.stringify(auxExpertRequestArray));
				$('#auxList').html("");
				auxExpertRequestArray.slice().reverse().forEach(function (request){
					$('#auxList').append($('<li id='+userCES+'-'+request.auxtime.replace(/:/g,'')+'>').html('<b>'+request.auxtype+'</b><span class="auxtime">'+request.auxtime+'</span><span class="approved">'+ ((request.approved>0)?"Approved":((request.approved<0)?"Disapproved":"Pending"))+'</span><span>'+request.reply+'</span>'));	
				})
				alert('Aux Request Approved:\n\n'+data.message);
			}
		})

		socket.on('aux disapproved request', function(data){
			console.log(usertype);
			if(usertype=='RTA'){
				approveAuxRequest(data.auxid,0,true)
			}else{
				console.log(data);
				console.log(auxExpertRequestArray);
				auxExpertRequestArray[auxExpertRequestArray.findIndex(element => element.auxid == data.auxid)].approved=-1;
				auxExpertRequestArray[auxExpertRequestArray.findIndex(element => element.auxid == data.auxid)].reply=data.message;
				localStorage.setItem('auxExpertRequestArray',JSON.stringify(auxExpertRequestArray));

				$('#auxList').html("");
				auxExpertRequestArray.slice().reverse().forEach(function (request){
					$('#auxList').append($('<li id='+userCES+'-'+request.auxtime.replace(/:/g,'')+'>').html('<b>'+request.auxtype+'</b><span class="auxtime">'+request.auxtime+'</span><span class="approved">'+ ((request.approved>0)?"Approved":((request.approved<0)?"Disapproved":"Pending"))+'</span><span>'+request.reply+'</span>'));	
				})
				alert('Aux Request Disapproved:\n\n'+data.message);
			}
		})

		socket.on('callback new', function(callback){
			console.log(usertype);
			getDataRecord('/api/callback/get',function(callbacks){
				console.log(callbacks);
				populateCallbackTable(callbacks);
			});
			if(usertype=="TM"){
				console.log(callback.cn);
				showNotification("New callback request for "+callback.cn,"Please assign an expert.",openCallbackTable);
			}
		});

		socket.on('callback notify', function(){
			console.log(usertype);
			if(usertype=="Voice"){
				getDataRecord('/api/callback/get',function(callbacks){
					console.log(callbacks);
					populateCallbackTable(callbacks);
				});
			}
			showNotification("New callback assigned.","Please check.") 
		});
	}catch(err){

	}
	$.ajax({
		url : folder,
		success: function (data) {
			//console.log(data);
			$(data).find("a").attr("href", function (i, val) {
				if( val.match(/\.(jpg|png|gif)$/i) ) { 
					//$("body").append( "<img src='"+ folder + val +"'>" );
					screensaverMasterImageList.push(val);
				}
			});
			screensaverImageList=screensaverMasterImageList.slice();
			//console.log(screensaverImageList);
		}
	});
	
});

var chatOpen=false;
var chatL2Open=false;

function approveAuxRequest(id,mode,otherRTA){
	var dataRequest;
	if(!otherRTA){
		if(mode==1){
			socket.emit('aux approve',{auxid:id,message:$('#message_'+id).val()});
		}else{
			socket.emit('aux disapprove',{auxid:id,message:$('#message_'+id).val()});
		}
	}else{
		dataRequest=auxRequestsArray[auxRequestsArray.findIndex(element => element.auxid == id)];
		console.log($('#message_'+id).val());
		
		auxRequestListArray.push(auxRequestsArray.splice(auxRequestsArray.findIndex(element => element.auxid == id), 1)[0]);
		auxRequestListArray[auxRequestListArray.length-1].reply=$('#message_'+id).val();
		auxRequestListArray[auxRequestListArray.length-1].approved=mode;
		localStorage.setItem('auxRequestListArray',JSON.stringify(auxRequestListArray));
		localStorage.setItem('requestsArray',JSON.stringify(auxRequestsArray));
		$('#auxRequests').html("<thead><th onclick=sortTable('auxRequests',0)>Name</th><th onclick=sortTable('auxRequests',1)>Aux Type</th><th  onclick=sortTable('auxRequests',2)>Time</th><th>Message</th><th>Action</th></thead>");
		auxRequestsArray.reverse().forEach(function (data){
			$('#auxRequests').append("<tr id="+data.auxid+" class='blink-bg'><td>"+data.name+"</td><td>"+data.auxtype+"</td><td>"+data.auxtime+"</td><td>"+data.message+"</td><td><button onclick=approveAuxRequest('"+data.auxid+"',1)>Approve</button><button onclick=approveAuxRequest('"+data.auxid+"',0)>Disapprove</button><textarea id='message_"+data.auxid+"'></textarea></td></tr>")
		})
		$('#auxRequestList').html("<thead><th onclick=sortTable('auxRequestList',0)>Name</th><th onclick=sortTable('auxRequestList',1)>Aux Type</th><th onclick=sortTable('auxRequestList',2)>Time</th><th>Message</th><th>Reply</th><th onclick=sortTable('auxRequestList',5)>Action</th></thead>");
		auxRequestListArray.reverse().forEach(function (dataR){
			console.log(dataR)
			$('#auxRequestList').append("<tr id="+dataR.auxid+"><td>"+dataR.name+"</td><td>"+dataR.auxtype+"</td><td>"+dataR.auxtime+"</td><td>"+dataR.message+"</td><td>"+dataR.reply+"</td><td>"+((dataR.approved==1)?"Approved":"Disapproved")+"</td></tr>")
		})
	}

}

function clearRequests(){
	auxRequestsArray=[];
	auxRequestListArray=[];
	localStorage.setItem('auxRequestListArray','');
	localStorage.setItem('requestsArray','');
	$('#auxRequests').html("<thead><th onclick=sortTable('auxRequests',0)>Name</th><th onclick=sortTable('auxRequests',1)>Aux Type</th><th  onclick=sortTable('auxRequests',2)>Time</th><th>Message</th><th>Action</th></thead>");
	$('#auxRequestList').html("<thead><th onclick=sortTable('auxRequestList',0)>Name</th><th onclick=sortTable('auxRequestList',1)>Aux Type</th><th onclick=sortTable('auxRequestList',2)>Time</th><th>Message</th><th>Reply</th><th onclick=sortTable('auxRequestList',5)>Action</th></thead>");
}

function openAux() {
		var dt=new Date();
		var time = ((dt.getHours()).toString().length<2?('0'+(dt.getHours()).toString()):(dt.getHours()).toString()) + ':' + ((dt.getMinutes()).toString().length<2?('0'+(dt.getMinutes()).toString()):(dt.getMinutes()).toString()) + ':' + ((dt.getSeconds()).toString().length<2?('0'+(dt.getSeconds()).toString()):(dt.getSeconds()).toString());
		$('#auxTime').val(time);
		$('#auxForm').css('display','block');
		$('#auxBadge').addClass('hiddenDiv');
		//chatCounter=0;

}

function closeAux() {
	console.log('close form')
	chatOpen=false;
	$('#auxForm').css('display','none');
}

function openForm() {
	console.log(chatOpen);

	if(chatL2Open){
		$('#chatForm').css('right','250px')
	}
	if(chatOpen){
		closeForm();
	}else{
		chatOpen=true;
		$('#chatForm').css('display','block');
		$('#chatBadge').addClass('hiddenDiv');
		chatCounter=0;
	}
}

function closeForm() {
	console.log('close form')
	chatOpen=false;
	$('#chatForm').css('display','none');
	if(chatL2Open){
		$('#chatFormL2').css('right','10px')
	}
}

function openFormL2() {
	console.log(chatOpen);
	if(chatOpen){
		$('#chatFormL2').css('right','250px')
	}
	if(chatL2Open){
		closeFormL2();
	}else{
		chatL2Open=true;
		$('#chatFormL2').css('display','block');
		$('#chatBadgeL2').addClass('hiddenDiv');
		chatCounter=0;
	}
}

function closeFormL2() {
	console.log('close form')
	chatL2Open=false;
	$('#chatFormL2').css('display','none');
	if(chatOpen){
		$('#chatForm').css('right','10px')
	}
}

function loadTxt(issue){
	$('#content').empty();
	$('#'+issue+'').clone(true, true).contents().appendTo('#content');
}

function loadPage(page,container,script,callback){
	$('#'+container+'').empty();
	$('#'+container+'').load(page + '.html',function(){if(script){eval($('#'+script+'').text());}});
	if(callback)callback();
}

function loadExternal(page,script,callback){
	$('#content').empty();
	$('#content').load(page + '.html',function(){if(script){eval($('#'+script+'').text());if(callback)callback();}});
	
}

function loadRMAproc(issue){
	console.log(issue);
	$('#rmaproc_details').empty();
	$('#'+issue+'').clone(true, true).contents().appendTo('#rmaproc_details');
}

function loadBox(issue){
	console.log(issue);
	$('.box_cam').addClass("hiddenDiv");
	$('#'+issue+'').removeClass("hiddenDiv");
}

function loadPic(image,divid){
	$(divid).empty();
	//console.log("<img src='/assets/img/" + image + ".jpg'>");
	$(divid).append("<img style='width:100%;' src='/assets/img/" + image + ".jpg'>");
}

function saveComment(comment){
	data={
		name:expertName,
		comment:comment
	}

	$.ajax({
		type:"POST",
		url:"/api/newcomment" ,
		data:JSON.stringify(data),
		headers:{
			"Content-Type":"application/json"
		},
		//dataType:"json",
		success:function(data){
			//console.log(data);
		},
		error:function(error){
		}
	});
}

function saveUpdate(title,update){
	if((title=="")||(update=="")){
	}else{
		data={
			name:expertName,
			title:title,
			update:update
		}

		$.ajax({
			type:"POST",
			url:"/api/newupdate" ,
			data:JSON.stringify(data),
			headers:{
				"Content-Type":"application/json"
			},
			//dataType:"json",
			success:function(data){
				//console.log(data);
				socket.emit('new update');
				$('#submit_update').val('');
				$('#update_title').val('');
				$('#modal_update').css('display','none');
			},
			error:function(error){
			}
		});
	}
}


function saveQuestion(question){
	var http = new XMLHttpRequest();
	var url = '/api/newquestion/';
	var params = 'name=' + expertName + '&' + 
	'question=' + question;
	http.open('POST', url, true);
	console.log(params);
	//Send the proper header information along with the request
	http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

	http.onreadystatechange = function() {//Call a function when the state changes.
		if(http.readyState == 4 && http.status == 200) {
			//alert(http.responseText);
		}
	}
	http.send(params);
}

function getName(){
	$('#modal_name').css('display','block');
}

function saveShipAddress(){
	var place = autocomplete.getPlace();
	console.log(place.address_components[place.address_components.length-1].short_name);
	saveRMA('RMA_shippingaddress');
	$('#RMA_tz').val(offsetToTZ(place.utc_offset_minutes));
	localStorage.setItem('RMA_tz',$('#RMA_tz').val());
}

function offsetToTZ($offset) {
	console.log($offset);
	switch($offset) {
		case -720 : return 'BIT'; break;
		case -660 : return 'SST'; break;
		case -600 : return 'TAHT'; break;
		case -570 : return 'MART'; break;
		case -540 : return 'AKST'; break;
		case -480 : return 'PST'; break;
		case -420 : return 'PDT'; break;
		case -360 : return 'MDT'; break;
		case -300 : return 'CDT'; break;
		case -240 : return 'EDT'; break;
		case -210 : return 'NST'; break;
		case -180 : return 'ADT'; break;
		case -150 : return 'NDT'; break;
		case -120 : return 'BRST'; break;
		case -60 : return 'AZOT'; break;
		case 0 : return 'GMT'; break;
		case 60 : return 'BST'; break;
		case 120 : return 'CAT'; break;
		case 180 : return 'AST'; break;
		case 210 : return 'IRST'; break;
		case 240 : return 'AMT'; break;
		case 270 : return 'AFT'; break;
		case 300 : return 'AQTT'; break;
		case 330 : return 'IST'; break;
		case 345 : return 'NPT'; break;
		case 360 : return 'ALMT'; break;
		case 390 : return 'ACT'; break;
		case 420 : return 'CXT'; break;
		case 480 : return 'AWST'; break;
		case 525 : return 'ACWST'; break;
		case 540 : return 'CHOST'; break;
		case 570 : return 'ACST'; break;
		case 600 : return 'AEST'; break;
		case 630 : return 'ACDT'; break;
		case 660 : return 'AEDT'; break;
		case 720 : return 'ANAT'; break;
		case 765 : return 'CHAST'; break;
		case 780 : return 'NZDT'; break;
		case 825 : return 'CHADT'; break;
		case 840 : return 'LINT'; break;

	}
}

function initAutocomplete() {
	// Create the autocomplete object, restricting the search predictions to
	// geographical location types.
	autocomplete = new google.maps.places.Autocomplete(document.getElementById('RMA_shippingaddress'), {types: ['geocode']});

	// Avoid paying for data that you don't need by restricting the set of
	// place fields that are returned to just the address components.
	autocomplete.setFields(['address_component','utc_offset']);

	// When the user selects an address from the drop-down, populate the
	// address fields in the form.
	autocomplete.addListener('place_changed', saveShipAddress);
}
// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate() {

	console.log('geolocating')
	var geolocation = {
	lat: 41.850033,
	lng: -87.6500523
	};
	var circle = new google.maps.Circle(
		{center: geolocation, radius: 1200.4});
	autocomplete.setBounds(circle.getBounds());
}  
		  
function addKBlink(){
	$('#KB').val($('#KB').val()+$('#kblinks').val()+'\n');
	saveData('KB');
	$('#kblinks').val(0);
	
}
/*
function filter(tablename) {
console.log(tablename);
var rows = Array.prototype.slice.call($('table#'+tablename+'>tr#FAQ_row'));  
console.log(rows);
  // Always trim user input
  var filter = $('tr#FAQ_row').val().trim().toUpperCase();
  var searchfilters = filter.split(',');
  // Loop the rows
  rows.forEach(function(row) {
  
    // You really don't need to know if the search criteria
    // is in the first or second cell. You only need to know
    // if it is in the row.
    var data = "";
    // Loop over all the cells in the current row and concatenate their text
    Array.prototype.slice.call(row.getElementsByTagName("td")).forEach(function(r){
      // Don't use .innerHTML unless there is HTML. Use textContent when there isn't.
      data += r.textContent;  
    });

    // Check the string for a match and show/hide row as needed
    // Don't set individual styles. Add/remove classes instead
    //if(data.toUpperCase().indexOf(filter) > -1){
    if(searchfilters.every(item => data.toUpperCase().includes(item))){
      // show row
      row.classList.remove("hidden");
    } else {
      // hide row
      row.classList.add("hidden");
    }
  });
  
}*/


function displayOption(option,script){
	console.log($('#'+option+'-selector').val() + '.html');
	$('#'+option+'-content').load($('#'+option+'-selector').val() + '.html',function(){if(script){eval($('#'+script+'').text());}});
	
}

function forAHT(casenumber,device,handletime,holdtime){
	localStorage.setItem('AHT_casenumber_temp',casenumber);
	localStorage.setItem('AHT_device_temp',device);
	localStorage.setItem('AHT_AHT',handletime);
	localStorage.setItem('AHT_holdtime',holdtime);
	console.log(handletime);
	loadAHT(0);
}

function saveAHTFields(storage){
	localStorage.setItem(storage, document.getElementById(storage).value);
	if(storage=='AHT_device'){
		localStorage.setItem('AHT_device_temp', document.getElementById(storage).value);
	}
	if(storage=='AHT_casenum'){
		localStorage.setItem('AHT_casenumber_temp', document.getElementById(storage).value);
	}
}

function loadAHT(menu){
	if(menu){
		$('#AHT_expert').val(localStorage.getItem('AHT_expert'));
		$('#AHT_casenum').val(localStorage.getItem('AHT_casenum'));
		$('#AHT_device').val(localStorage.getItem('AHT_device'));
	}
	$('#AHT_AHT').val(localStorage.getItem('AHT_AHT'));
	$('#AHT_holdtime').val(localStorage.getItem('AHT_holdtime'));
	$('#AHT_holdreason').val(localStorage.getItem('AHT_holdreason')?localStorage.getItem('AHT_holdreason'):"0");
	$('#AHT_reason').val(localStorage.getItem('AHT_reason')?localStorage.getItem('AHT_reason'):"0");
	$('#AHT_complexity').val(localStorage.getItem('AHT_complexity'));
	$('#AHT_resolution').val(localStorage.getItem('AHT_resolution'));
}

function getAHT(){
	AHT = ("AHT" in localStorage)?JSON.parse(localStorage.getItem("AHT")):[];
	AHT_num_cases=localStorage.getItem("AHT_numCases");
	$('#displayAHT').html('');
	displayAHT();
}

function displayAHT(){
	$('#displayAHT').html('');

	console.log(AHT_num_cases);
	console.log(AHT);
	var AHTtable='<table id="AHT_table" border=1 style="text-align:center;border: 1px solid black;border-spacing: 0px;border-collapse: collapse;" width="70%"><tr bgcolor="#00b04f" style="font-size:8pt;font-weight: bold;color:white"><th width="5%">#</th><th width="5%">Expert</th><th width="5%">Case #</th><th width="5%">Device</th><th width="5%">AHT</th><th width="5%">Total Hold Time</th><th width="15%">Reasons for Hold</th><th width="15%">Reason for high AHT</th><th width="15%">Complexity of Scenario Description</th><th width="15%">Resolution</th></tr>';
	for(i=0;i<AHT_num_cases;i++){
	  	AHTtable+='<tr style="font-size:8pt;"><td>' + 
		'<div style="white-space: nowrap"><i class="fa fa-edit tooltip" style="font-size:12px;red;cursor: pointer;" onclick="editAHT('+i+')"></i>&nbsp;' +
	  	(i + 1) +
	  	'<i class="fa fa-times tooltip" style="font-size:12px;color:red;cursor: pointer;" onclick="if(confirm(&quot;Are you sure you want to delete this entry?&quot;)){deleteAHT('+i+')};"></i></div></td>' +
	  	'<td>' + AHT[i][0] + '</td><td>' + AHT[i][1] + '</td><td>' + AHT[i][2] + '</td><td>' + AHT[i][3] + '</td><td>' + AHT[i][4] + '</td><td>' + AHT[i][5] + '</td><td>' + AHT[i][6] + '</td><td>' + AHT[i][7] + '</td><td>' + AHT[i][8] + '</td></tr>';
	}
	AHTtable+='</table>';
	$('#displayAHT').append(AHTtable);
}

function deleteAHT(index){
	AHT.splice(index,1);
	AHT_num_cases--;
	localStorage.setItem("AHT", JSON.stringify(AHT));
	localStorage.setItem("AHT_numCases",AHT_num_cases);
	displayAHT();
}

function editAHT(index){
	$('#AHT_index').val(index);
	$('#AHT_expert').val(AHT[index][0]);
	$('#AHT_casenum').val(AHT[index][1]);
	$('#AHT_device').val(AHT[index][2]);
	$('#AHT_AHT').val(AHT[index][3]);
	$('#AHT_holdtime').val(AHT[index][4]);
	$('#AHT_holdreason').val(AHT[index][5]);
	$('#AHT_reason').val(AHT[index][6]);
	$('#AHT_complexity').val(AHT[index][7]);
	$('#AHT_resolution').val(AHT[index][8]);
	$('#addAHTEntry').toggleClass('hiddenDiv');
	$('#updateAHTEntry').toggleClass('hiddenDiv');
}

function updateAHT(index,expert,casenum,device,aht,holdtime,holdreason,reason,complexity,resolution){
	$('#addAHTEntry').toggleClass('hiddenDiv');
	$('#updateAHTEntry').toggleClass('hiddenDiv');
	console.log(AHT);
	AHT[index][0]=expert;
	AHT[index][1]=casenum;
	AHT[index][2]=device;
	AHT[index][3]=aht;
	AHT[index][4]=holdtime;
	AHT[index][5]=holdreason;
	AHT[index][6]=reason;
	AHT[index][7]=complexity;
	AHT[index][8]=resolution;
	console.log(AHT);
	localStorage.setItem("EOS", JSON.stringify(AHT));
	localStorage.setItem("AHT_numCases",AHT_num_cases);
	clearAHTinput();
	displayAHT();
}

function saveAHT(expert,casenum,device,aht,holdtime,holdreason,reason,complexity,resolution){
	if((expert=="")||(casenum=="")||(device=="0")||(aht=="")||(holdtime=="")||(holdreason=="0")||(reason=="0")||(complexity=="")||(resolution=="")){
	}else{
		AHT_num_cases++
		AHT.push([expert,casenum,device,aht,holdtime,holdreason,reason,complexity,resolution]);
		console.log(AHT);
		localStorage.setItem("AHT", JSON.stringify(AHT));
		localStorage.setItem("AHT_numCases",AHT_num_cases);
		clearAHTinput();
		getAHT();
	}
}

function clearAHTinput(){
	//$('#AHT_expert').val('');
	$('#AHT_AHT').val('');
	$('#AHT_casenum').val('');
	$('#AHT_device').val('0');
	$('#AHT_holdtime').val('');
	$('#AHT_holdreason').val('0');
	$('#AHT_reason').val('0');
	$('#AHT_complexity').val('');
	$('#AHT_resolution').val('');
	localStorage.setItem('AHT_AHT','');
	localStorage.setItem('AHT_holdtime','');
	localStorage.setItem('AHT_holdreason','');
	localStorage.setItem('AHT_reason','');
	localStorage.setItem('AHT_complexity','');
	localStorage.setItem('AHT_resolution','');
	localStorage.setItem('AHT_device_temp','');
	localStorage.setItem('AHT_casenumber_temp','');
}

function resetAHT(){
	localStorage.removeItem("AHT");
	localStorage.removeItem("AHT_numCases");
	AHT_num_cases=0;
	AHT=[];
	displayAHT();
  }

function saveEOS(EOS_casenum,EOS_status,EOS_remarks,EOS_RMA,EOS_callpulse){
	console.log(EOS);
	num_cases++;
	EOS.push([EOS_casenum,EOS_status,EOS_remarks,EOS_RMA,EOS_callpulse]);
	console.log(EOS);
	localStorage.setItem("EOS", JSON.stringify(EOS));
	localStorage.setItem("numCases",num_cases);
	clearEOSinput();
}

function getEOS(){
	console.log("EOS" in localStorage);
	console.log("numCases" in localStorage);
	EOS = ("EOS" in localStorage)?JSON.parse(localStorage.getItem("EOS")):[];
	num_cases=localStorage.getItem("numCases");
	displayEOS();
}

function clearEOSinput(){
	$('#EOS_casenum').val('');
	$('#EOS_status').val('Open');
	$('#EOS_remarks').val('')
	$('#EOS_RMA').val('N');
	$('#EOS_callpulse').val('Y');
}

function deleteEOS(index){
	EOS.splice(index,1);
	num_cases--;
	localStorage.setItem("EOS", JSON.stringify(EOS));
	localStorage.setItem("numCases",num_cases);
	displayEOS();
}

function editEOS(index){
	$('#EOS_index').val(index),
	$('#EOS_casenum').val(EOS[index][0]),
	$('#EOS_status').val(EOS[index][1]),
	$('#EOS_remarks').val(EOS[index][2]),
	$('#EOS_RMA').val(EOS[index][3]),
	$('#EOS_callpulse').val(EOS[index][4])
	$('#addEOSEntry').toggleClass('hiddenDiv');
	$('#updateEOSEntry').toggleClass('hiddenDiv');
}

function updateEOS(index,EOS_casenum,EOS_status,EOS_remarks,EOS_RMA,EOS_callpulse){
	$('#addEOSEntry').toggleClass('hiddenDiv');
	$('#updateEOSEntry').toggleClass('hiddenDiv');
	console.log(EOS);
	EOS[index][0]=EOS_casenum;
	EOS[index][1]=EOS_status;
	EOS[index][2]=EOS_remarks;
	EOS[index][3]=EOS_RMA;
	EOS[index][4]=EOS_callpulse;
	console.log(EOS);
	localStorage.setItem("EOS", JSON.stringify(EOS));
	localStorage.setItem("numCases",num_cases);
	clearEOSinput();
	displayEOS();
}

function displayEOS(){
  $('#displayEOS').html('');
  //console.log(num_cases);
  //console.log(EOS);
  var EOStable='<table id="EOS_table" border=1 style="text-align:center;border: 1px solid black;border-spacing: 0px;border-collapse: collapse;" width="70%"><tr bgcolor="#00b04f" style="font-size:8pt;font-weight: bold;color:white"><th width="5%">#</th><th width="10%">Case #</th><th width="10%">Status (Open/Closed)</th><th width="25%">Remarks(Why the case was left open)</th><th width="10%">For RMA? (Y/N)</th><th width="10%">Good Call? (Y/N)</th></tr>';
  for(i=0;i<num_cases;i++){
	EOStable+='<tr style="font-size:8pt;"><td><div style="white-space: nowrap"><i class="fa fa-edit tooltip" style="font-size:12px;red;cursor: pointer;" onclick="editEOS('+i+')"></i>&nbsp;' +(i + 1)+
	'&nbsp;<i class="fa fa-times tooltip" style="font-size:12px;color:red;cursor: pointer;" onclick="if(confirm(&quot;Are you sure you want to delete this entry?&quot;)){deleteEOS('+i+')};"></i></div>' + 
	'</td><td>' + EOS[i][0] + '</td><td>' + EOS[i][1] + '</td><td>' + EOS[i][2] + '</td><td>' + EOS[i][3] + '</td><td>' + EOS[i][4] + '</td></tr>';
  }
  EOStable+='</table>';
  $('#displayEOS').append(EOStable);
}

function resetEOS(){
  localStorage.removeItem("EOS");
  localStorage.removeItem("numCases");
  num_cases=0;
  EOS=[];
  displayEOS();
}



function displayPhonetics(source,dest){
	displayText='';
    email=document.getElementById(source).value.toLowerCase();
	for (i=0;i<email.length;i++){
		displayText+=email[i]+ ' = ' + ((phonetics[alphabet.indexOf(email[i])]!=undefined) ? phonetics[alphabet.indexOf(email[i])] : email[i]) + "<br>";
	}
	$('#'+dest).html(displayText);
	//console.log($('#'+dest).html());
}

function downloadFile(){
	console.log(standardStorage[currentRecord])
	var textvalue;
	textvalue='  Case Number:' + standardStorage[currentRecord].casenumber_standard + '\n\n';
	textvalue+='       Issue: ' + standardStorage[currentRecord].inquiry + '\n\n';
	textvalue+='       Email: ' + standardStorage[currentRecord].email + '\n';
	textvalue+='        Name: ' + standardStorage[currentRecord].name + '\n';
	textvalue+='       Phone: ' + standardStorage[currentRecord].phone + '\n\n';
	textvalue+='Case History:\n';
	textvalue+=standardStorage[currentRecord].CH + '\n\n';
	textvalue+='Troubleshooting details at the time of call:\n';
	textvalue+=standardStorage[currentRecord].TS + '\n\n';
	textvalue+='Affected SN and its FW versions:' + '\n';
	textvalue+='      Device: ' + standardStorage[currentRecord].standard_device + '\n';
	textvalue+='          SN: ' + standardStorage[currentRecord].standard_deviceSN + '\n';
	textvalue+='          FW: ' + standardStorage[currentRecord].standard_deviceFW + '\n';
	textvalue+='         DOP: ' + standardStorage[currentRecord].DOP + '\n';
	textvalue+='         POP: ' + standardStorage[currentRecord].POP + '\n';
	textvalue+='         ISP: ' + standardStorage[currentRecord].ISP + '\n\n';
	textvalue+='Affected devices and its FW versions (Web, IOS, Android, model#)' + '\n';
	textvalue+='Login Device: ' + standardStorage[currentRecord].standard_login + '\n';
	textvalue+='    Model/OS: ' + standardStorage[currentRecord].standard_login_model + '\n\n';
	textvalue+='Next Actions:\n' + standardStorage[currentRecord].nextaction + '\n\n';
	textvalue+='Checklist: \n';
	textvalue+='      Downloaded logs? ' + (standardStorage[currentRecord].logs==true?'Y':'N') + '\n';
	textvalue+='Promoted self-service? ' + (standardStorage[currentRecord].selfservice==true?'Y':'N') + '\n';
	textvalue+='       Pitched survey? ' + (standardStorage[currentRecord].survey==true?'Y':'N') + '\n';
	textvalue+='     Attached article: ' + standardStorage[currentRecord].KB;

	//textvalue=textvalue.replace(/\n/g, "\n");
	saveTextAsFile(textvalue,$('#casenumber_standard').val());
}

function downloadAllFile(){
	var textvalue='';
	var d = new Date();
	for(i=1;i<standardStorage.length;i++){
		textvalue+='\n\n========================== ' + (i) + ' - ' + standardStorage[i].casenumber_standard + '======================================================\n\n';
		textvalue+='       Issue: ' + standardStorage[i].inquiry + '\n\n';
		textvalue+='       Email: ' + standardStorage[i].email + '\n';
		textvalue+='        Name: ' + standardStorage[i].name + '\n';
		textvalue+='       Phone: ' + standardStorage[i].phone + '\n\n';
		textvalue+='Case History:\n';
		textvalue+=standardStorage[i].CH + '\n\n';
		textvalue+='Troubleshooting details at the time of call:\n';
		textvalue+=standardStorage[i].TS + '\n\n';
		textvalue+='Affected SN and its FW versions:' + '\n';
		textvalue+='      Device: ' + standardStorage[i].standard_device + '\n';
		textvalue+='          SN: ' + standardStorage[i].standard_deviceSN + '\n';
		textvalue+='          FW: ' + standardStorage[i].standard_deviceFW + '\n';
		textvalue+='         DOP: ' + standardStorage[i].DOP + '\n';
		textvalue+='         POP: ' + standardStorage[i].POP + '\n';
		textvalue+='         ISP: ' + standardStorage[i].ISP + '\n\n';
		textvalue+='Affected devices and its FW versions (Web, IOS, Android, model#)' + '\n';
		textvalue+='Login Device: ' + standardStorage[i].standard_login + '\n';
		textvalue+='    Model/OS: ' + standardStorage[i].standard_login_model + '\n\n';
		textvalue+='Next Actions:\n' + standardStorage[i].nextaction + '\n\n';
		textvalue+='Checklist: \n';
		textvalue+='      Downloaded logs? ' + (standardStorage[i].logs==true?'Y':'N') + '\n';
		textvalue+='Promoted self-service? ' + (standardStorage[i].selfservice==true?'Y':'N') + '\n';
		textvalue+='       Pitched survey? ' + (standardStorage[i].survey==true?'Y':'N') + '\n';
		textvalue+='     Attached article: ' + standardStorage[i].KB;
	}
	//textvalue=textvalue.replace(/\n/g, "\n");

	saveTextAsFile(textvalue,(d.getMonth()+1)+ '-' + d.getDate() + '-' + d.getFullYear());
}

function saveTextAsFile(textToWrite, fileNameToSaveAs)
    {
    	var textFileAsBlob = new Blob([textToWrite], {type:'text/plain'}); 
    	var downloadLink = document.createElement("a");
    	downloadLink.download = fileNameToSaveAs;
    	downloadLink.innerHTML = "Download File";
    	if (window.webkitURL != null)
    	{
    		// Chrome allows the link to be clicked
    		// without actually adding it to the DOM.
    		downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);
    	}
    	else
    	{
    		// Firefox requires the link to be added to the DOM
    		// before it can be clicked.
    		downloadLink.href = window.URL.createObjectURL(textFileAsBlob);
    		downloadLink.onclick = destroyClickedElement;
    		downloadLink.style.display = "none";
    		document.body.appendChild(downloadLink);
    	}
    
    	downloadLink.click();
	}
	
function showAGWCreds(){
	myWindow = window.open("", "AGW Tool Credentials", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=300,height=100,top="+0+",right="+100);

	myWindow.document.body.innerHTML = "<head><title>AGW Tool Credentials</title></head>"+
	"<body><pre>Username: cameraNTGR.support<br>Password: support.123456</pre></body>"
}

function generateConsult(device,summary){
	//if(confirm('I HAVE UPDATED THE CUSTOMER PHONE NUMBER IN SALESFORCE.')){
		
		var textvalue=device;
		textvalue=textvalue.replace('\r', '&nbsp;').replace('\n', '<br>');

		var textvalue1=summary;
		textvalue1=textvalue1.replace('\r', '&nbsp;').replace('\n', '<br>');

		myWindow = window.open("", "Title", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=780,height=600,top="+0+",right="+100);
		
		myWindow.document.body.innerHTML = "<body>"+
		"<pre><div>Device:<br>"+textvalue+"</div><br>"+
		"<div>Summary/Recommendations:<br>"+textvalue1+"</div></pre>"+
		"</body>"
		console.log(myWindow.document.body.innerHTML);
		myWindow.focus();
		console.log(myWindow.document.body.innerHTML);
	//}else{
	//	alert('Please update before generating.');
	//}
}

function generateText(){
	//if(confirm('I HAVE UPDATED THE CUSTOMER PHONE NUMBER IN SALESFORCE.')){
		var generate_devices='';
		var generate_deviceused='';
		
		var textvalue=document.getElementById('TS').value;
		textvalue=textvalue.replace('\r', '&nbsp;').replace('\n', '<br>');

		var textvalue1=document.getElementById('CH').value;
		textvalue1=textvalue1.replace('\r', '&nbsp;').replace('\n', '<br>');

		var textvalue2=document.getElementById('KB').value;
		textvalue2=textvalue2.replace('\r', '&nbsp;').replace('\n', '<br>');

		myWindow = window.open("", "Title", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=780,height=600,top="+0+",right="+100);
		
		if(!document.getElementById('standard_device').value){
			generate_devices="";
		}else{
			generate_devices="<br><br>Affected SN and its FW versions:" +
			"<br>Device: " + document.getElementById('standard_device').value + 
			"<br>SN: " + document.getElementById('standard_deviceSN').value + 
			"<br>FW: " + document.getElementById('standard_deviceFW').value + 
			"<br>DOP: " + document.getElementById('DOP').value + 
			"<br>POP: " + document.getElementById('POP').value + 
			"<br>ISP: " + document.getElementById('ISP').value;
		}
		if(!document.getElementById('standard_login').value){
			generate_deviceused="";
		}else{
			generate_deviceused="<br><br>Affected devices and its FW versions (Web, IOS, Android, model#)" +
			"<br>Login Device: " + document.getElementById('standard_login').value + 
			"<br>Model/OS: " + document.getElementById('standard_login_model').value;
		}
		
		myWindow.document.body.innerHTML = "<head><title>Case Standard Template"+ 
		"</title></head><div style='white-space: pre-wrap;'><pre>Issue: <br>" + document.getElementById('inquiry').value + 
		"<br>Case Number:" + document.getElementById('casenumber_standard').value +
		"<br>Email: " + document.getElementById('email').value + 
		"<br>Name: " + document.getElementById('name').value + 
		"<br>Phone: " + document.getElementById('phone').value + 
		"<br><br>Case History:<br>" + textvalue1 + 
		"<br><br>Troubleshooting details at the time of call:<br>" + textvalue + 
		generate_devices +
		generate_deviceused +
		"<br><br>Next Actions:<br>" + document.getElementById('nextaction').value + 
		"<br><br>Checklist: <br>Downloaded logs? " + (document.getElementById('logs').checked==true?'Y':'N') + 
		"<br>Promoted self-service? " + (document.getElementById('selfservice').checked==true?'Y':'N') + 
		"<br>Pitched survey? " + (document.getElementById('survey').checked==true?'Y':'N') + 
		"<br><br>Attached Article:<br>" + document.getElementById('KB').value + "</pre></div>";

		myWindow.focus();
		console.log(myWindow.document.body.innerHTML);
	//}else{
	//	alert('Please update before generating.');
	//}
}

function generateOutboundText(){
	var now=new Date();
	var generate_devices='';
	var generate_deviceused='';
	var textvalue=document.getElementById('TSoutbound').value;
	textvalue=textvalue.replace('\r', '&nbsp;').replace('\n', '<br>');

	var textvalue1=document.getElementById('CH').value;
	textvalue1=textvalue1.replace('\r', '&nbsp;').replace('\n', '<br>');

	var textvalue2=document.getElementById('KB').value;
	textvalue2=textvalue2.replace('\r', '&nbsp;').replace('\n', '<br>');

	myWindow = window.open("", "Title", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=780,height=600,top="+0+",right="+100);
	
	myWindow.document.head.innerHTML = "<head><title>Case Standard Template</title>"

	myWindow.document.body.innerHTML = "<div style='white-space: pre-wrap;'><pre>Outbound<br><br>"+
	"Date and Time of Call: " + outBoundStart.toLocaleString('default',{ timeZone: 'Asia/Manila' }) + " PH time" +
	"<br>Phone: " + document.getElementById('phone').value + 
	"<br>Name: " + document.getElementById('name').value + 
	"<br>Status: " + document.getElementById('inquiry').value + 
	"<br><br>Troubleshooting details at the time of call:<br>" + textvalue + 
	"<br><br>Next Actions:<br>" + document.getElementById('nextaction').value + 
	"</pre></div>";

	myWindow.focus();
}

function generateTextRMA(){
	var textvalue=document.getElementById('RMA_prob').value;
	textvalue=textvalue.replace('\r', '&nbsp;').replace('\n', '<br>');

	var textvalue2=document.getElementById('RMA_history').value;
	textvalue2=textvalue2.replace('\r', '&nbsp;').replace('\n', '<br>');

	var textvalue3=document.getElementById('RMA_TS').value;
	textvalue3=textvalue3.replace('\r', '&nbsp;').replace('\n', '<br>');

	var textvalue4=document.getElementById('RMA_wirelessnetwork').value;
	textvalue4=textvalue4.replace('\r', '&nbsp;').replace('\n', '<br>');

	var textvalue6=document.getElementById('RMA_platform').value;
	textvalue6=textvalue6.replace('\r', '&nbsp;').replace('\n', '<br>');

	var textvalue5=document.getElementById('RMA_wirelessdevices').value;
	textvalue5=textvalue5.replace('\r', '&nbsp;').replace('\n', '<br>');

	console.log(document.getElementById('RMA_POP').checked);
	myWindow = window.open("", "Title", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=780,height=600,top="+0+",right="+100);

	var accessory = $('#accessory').prop('checked');
	myWindow.document.body.innerHTML = "<head><title>RMA Template"  +
	"</title></head><div style='white-space: pre-wrap;'><pre>Case #: " + document.getElementById('RMA_casenum').value + 
	"<br>Email: " + document.getElementById('RMA_email').value + 
	"<br>Phone: " + document.getElementById('RMA_phone').value + 
	"<br>Time Zone: " + document.getElementById('RMA_tz').value + 
	"<br>POP Updated: " + (document.getElementById('RMA_POP').checked==true?'Y':'N') + 
	"<br>DL Logs: " + (document.getElementById('RMA_logs').checked==true?'Y':'N') + 
	(accessory?("<br>Main Device: " + document.getElementById('RMA_main_device').value):"") +
	"<br>What device should be replaced (Camera/BS/Power Adapter etc): " + (accessory?($('#RMA_accessoryreplacement').val()):(document.getElementById('RMA_main_device').value)) + 
	(accessory?"":("<br>Serial number of the device to be replaced: " + (document.getElementById('RMA_main_deviceSN').value))) + 
	(accessory?("<br>Part Code (if applicable): " + (document.getElementById('RMA_partcode').value)):"") + 
	"<br>Shipping Address: " + (document.getElementById('RMA_shippingaddress').value) + 
	"<br><br>1. Current firmware version of Base Station and Cameras <br>" +
	(accessory?"FW: N/A" :("FW: " + document.getElementById('RMA_main_deviceFW').value)) + "<br>" +
	"<br>2. Platforms Affected:<br>" + textvalue6 + 
	"<br>3. Problem Description Details:<br>" + textvalue + 
	"<br>4. History of Problem:<br>" + textvalue2 + 
	"<br>5. Detailed Troubleshooting Done:<br>" + textvalue3 + 
	"<br>6. Network topology: " +
	"<br>ISP: " + document.getElementById('RMA_ISP').value + 
	"<br>Modem Brand/Model: " + document.getElementById('RMA_modem').value + 
	"<br>Router Brand/Model: " + (document.getElementById('RMA_router').value) + 
	"<br>Wireless devices on network: " + textvalue4 + 
	"<br>Wireless devices used: " + textvalue5 +"</pre></div>"


	myWindow.focus();
}

function generateTextFeed(){
myWindow2 = window.open("", "Title2", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=400,height=250,top="+300+",right="+300);
console.log($('#accessory').prop('checked'));
var accessory = $('#accessory').prop('checked');
myWindow2.document.body.innerHTML = "<head><title>RMA Text Feed</title></head><div style='white-space: pre-wrap;'><pre>For RMA Approval:<br>Case #: " + document.getElementById('RMA_casenum').value + 
(accessory?("<br>Main Device: " + document.getElementById('RMA_main_device').value):"") +
"<br>Device/Accessory : " + (accessory?(document.getElementById('RMA_accessoryreplacement').value):(document.getElementById('RMA_main_device').value)) + 
(accessory?("<br>Part Code : " + (document.getElementById('RMA_partcode').value)):("<br>Serial number : " + (document.getElementById('RMA_main_deviceSN').value))) + 
(accessory?("<br>Quantity: " + document.getElementById('RMA_quantity').value):"") +
"<br><br>" + "TMs:<br>" + 
"@Darlin Navasca @Maria Vallejo @Ren Balcom<br>" +
"@April Ducao @Aser Oraiz @Flordeliz Diego @Mary Aiko Villafuerte<br>" +
"@Leah Mae Ancog @Michael Peralta @Leah Mae Ancog​<br>" + 
"SMEs:<br>" + 
"@John Jimenea @Ace Orlanes @Meagan Luy<br>" +
"@Antonette Ranoco @Cris Manzano @Sean Christopher Quiñola<br>" +
"@Guiller Camarillo @Renz Alvarado </pre></div>";
myWindow2.focus();
}

function saveRMA(storage){
	localStorage.setItem(storage, document.getElementById(storage).value);
	//console.log(localStorage.getItem(storage));
}

function saveCheckRMA(storage){
	localStorage.setItem(storage, document.getElementById(storage).checked);
	//console.log(localStorage.getItem(storage));
}

function forRMA(device){
	if(device=='BS'){
		localStorage.setItem('RMA_SN',$('#BSSN').val());
		localStorage.setItem('RMA_devicereplacement','Base Station');
	} else if(device=='Camera'){
		localStorage.setItem('RMA_SN',$('#CamSN').val());
		console.log(localStorage.getItem('RMA_SN'));
		localStorage.setItem('RMA_devicereplacement','Camera');
	}

	localStorage.setItem('RMA_main_device',$('#standard_device').val());
	localStorage.setItem('RMA_main_deviceSN',$('#standard_deviceSN').val());
	localStorage.setItem('RMA_main_deviceFW',$('#standard_deviceFW').val());
	console.log($('#logs').prop('checked'));
	localStorage.setItem('RMA_logs',$('#logs').prop('checked'));
	localStorage.setItem('RMA_prob',$('#inquiry').val());
	localStorage.setItem('RMA_history',$('#CH').val());
	localStorage.setItem('RMA_TS',$('#TS').val());
	localStorage.setItem('RMA_casenum',$('#casenumber_standard').val());
	localStorage.setItem('RMA_email',$('#email').val());
	localStorage.setItem('RMA_phone',$('#phone').val());
	localStorage.setItem('RMA_platform',($('#standard_login').val()==null)?'':$('#standard_login').val()+' '+$('#standard_login_model').val());
	localStorage.setItem('RMA_BSFW',$('#BSFW').val());
	localStorage.setItem('RMA_CamFW',$('#CamFW').val());
	localStorage.setItem('RMA_ISP',$('#ISP').val());
}

function forEscalation(){
	localStorage.setItem('L2escalate_case',$('#casenumber_standard').val());
	localStorage.setItem('L2escalate_email',$('#email').val());
	if(($('#standard_device').val()).substr(0,3)=='VMB'){
		localStorage.setItem('L2escalate-bssn',$('#standard_deviceSN').val());	
		localStorage.setItem('L2escalate-bsfw',$('#standard_deviceFW').val());
		if((($('#standard_device').val()).substr(3,4)=='4540')||(($('#standard_device').val()).substr(3,4)=='5000')){
			localStorage.setItem('L2escalate-devicetype','SmartHub');
		}else{
			localStorage.setItem('L2escalate-devicetype','Base Station');
		}
	}else if(($('#standard_device').val()).substr(0,3)=='VMA'){
		localStorage.setItem('L2escalate-devicetype','Accessory');
		localStorage.setItem('L2escalate-camsn',$('#standard_deviceSN').val());
		localStorage.setItem('L2escalate-camfw',$('#standard_deviceFW').val());
	}else if((($('#standard_device').val()).substr(0,3)=='VMC')||(($('#standard_device').val()).substr(0,3)=='ABC')){
		localStorage.setItem('L2escalate-devicetype','Accessory');
		localStorage.setItem('L2escalate-camsn',$('#standard_deviceSN').val());
		localStorage.setItem('L2escalate-camfw',$('#standard_deviceFW').val());
	}
	localStorage.setItem('L2escalate_device',$('#standard_device').val());
}

function loadRMA(){
	console.log(localStorage.getItem('RMA_logs'));
	$('#RMA_casenum').val(localStorage.getItem('RMA_casenum'));
	$('#RMA_email').val(localStorage.getItem('RMA_email'));
	$('#RMA_phone').val(localStorage.getItem('RMA_phone'));
	$('#RMA_tz').val(localStorage.getItem('RMA_tz'));
	$('#RMA_POP').prop('checked',localStorage.getItem('RMA_POP')==='true'?true:false);
	$('#RMA_logs').prop('checked',localStorage.getItem('RMA_logs')==='true'?true:false);
	
	$('#RMA_main_device').val(localStorage.getItem('RMA_main_device'));
	$('#RMA_main_deviceSN').val(localStorage.getItem('RMA_main_deviceSN'));
	$('#RMA_main_deviceFW').val(localStorage.getItem('RMA_main_deviceFW'));
	$('#RMA_quantity').val(localStorage.getItem('RMA_quantity'));
	
	$('#RMA_accessoryreplacement').val(localStorage.getItem('RMA_accessoryreplacement'));
	$('#RMA_partcode').val(localStorage.getItem('RMA_partcode'));
	$('#RMA_shippingaddress').val(localStorage.getItem('RMA_shippingaddress'));
	
	
	//$('#RMA_BSFW').val(localStorage.getItem('RMA_BSFW'));
	//$('#RMA_CamFW').val(localStorage.getItem('RMA_CamFW'));
	$('#RMA_prob').val(localStorage.getItem('RMA_prob'));
	$('#RMA_platform').val(localStorage.getItem('RMA_platform'));
	$('#RMA_history').val(localStorage.getItem('RMA_history'));
	$('#RMA_TS').val(localStorage.getItem('RMA_TS'));
	$('#RMA_ISP').val(localStorage.getItem('RMA_ISP'));
	$('#RMA_modem').val(localStorage.getItem('RMA_modem'));
	$('#RMA_router').val(localStorage.getItem('RMA_router'));
	$('#RMA_wirelessnetwork').val(localStorage.getItem('RMA_wirelessnetwork'));
	$('#RMA_wirelessdevices').val(localStorage.getItem('RMA_wirelessdevices'));
	
}

function clearRMA(){
	localStorage.setItem('RMA_casenum','');
	localStorage.setItem('RMA_email','');
	localStorage.setItem('RMA_phone','');
	localStorage.setItem('RMA_tz','');
	localStorage.setItem('RMA_POP','false');
	localStorage.setItem('RMA_logs','false');
	

	localStorage.setItem('RMA_main_device','');
	localStorage.setItem('RMA_SN','');
	localStorage.setItem('RMA_FW','');
	localStorage.setItem('RMA_accessoryreplacement','');
	localStorage.setItem('RMA_quantity','');
	localStorage.setItem('RMA_partcode','');
	localStorage.setItem('RMA_shippingaddress','');
	
	
	localStorage.setItem('RMA_BSFW','');
	localStorage.setItem('RMA_CamFW','');
	localStorage.setItem('RMA_prob','');
	localStorage.setItem('RMA_platform','');
	localStorage.setItem('RMA_history','');
	localStorage.setItem('RMA_TS','');
	localStorage.setItem('RMA_ISP','');
	localStorage.setItem('RMA_modem','');
	localStorage.setItem('RMA_router','');
	localStorage.setItem('RMA_wirelessnetwork','');
	localStorage.setItem('RMA_wirelessdevices','');
}

function saveData(storage){
	if(storage=='standard_deviceSN'){
		if(vdb_affected_SN.includes($('#standard_deviceSN').val().trim().replace(/\s/g,''))){
			$('#standard_deviceSN').css('color','red');
			$('#standard_deviceSN').css('font-weight','normal');
		}else{
			$('#standard_deviceSN').css('color','black');
			$('#standard_deviceSN').css('font-weight','normal');
		}
		if(vdb_onboarded_SN.includes($('#standard_deviceSN').val().trim().replace(/\s/g,''))){
			$('#standard_deviceSN').css('color','#1015a3');
			$('#standard_deviceSN').css('font-weight','bold');
		}else{
			$('#standard_deviceSN').css('color','black');
			$('#standard_deviceSN').css('font-weight','normal');
		}
	}
	currentStandardT[storage]=document.getElementById(storage).value;
	standardStorage[currentRecord]=currentStandardT;
	localStorage.setItem("standardLocalStorage", JSON.stringify(standardStorage));
}

function saveCheck(storage){
	currentStandardT[storage]=document.getElementById(storage).checked;
	standardStorage[currentRecord]=currentStandardT;
	localStorage.setItem("standardLocalStorage", JSON.stringify(standardStorage));
	
}

function getData(next){
	
	currentRecord=parseInt(currentRecord) + parseInt(next);
	currentRecord=currentRecord<1?1:currentRecord;
	loadData(currentRecord);
}

function loadData(index){
	//console.log(standardStorage);

	//if(localStorage.getItem('standardLocalStorage')!=null){
	standardStorage = ("standardLocalStorage" in localStorage)?JSON.parse(localStorage.getItem("standardLocalStorage")):[];
	//}
	
	if(standardStorage[index]==(undefined||null)){
		Object.keys(currentStandardT).forEach(v => currentStandardT[v] = "");
		//console.log(currentStandardT);
		standardStorage[index]={ ...currentStandardT};
	}else{
		currentStandardT={ ...standardStorage[index]};
	}
	//console.log(standardStorage[index]);
	//console.log(standardStorage[index]!= (undefined||null));
	//console.log(currentStandardT);
	if((standardStorage[index]!= (undefined||null))&&(currentStandardT!= (undefined||null))){
		//console.log(standardStorage[index].inquiry);
		$('#inquiry').val(standardStorage[index].inquiry);
		//document.getElementById('inquiry').value=standardStorage[index].inquiry;
		$('#name').val(standardStorage[index].name);
		$('#email').val(standardStorage[index].email);
		$('#phone').val(standardStorage[index].phone);
		//console.log(standardStorage[index].standard_device);
		$('#standard_device').val(standardStorage[index].standard_device);
		$('#standard_deviceSN').val(standardStorage[index].standard_deviceSN);
		$('#standard_deviceFW').val(standardStorage[index].standard_deviceFW);

		if(vdb_affected_SN.includes($('#standard_deviceSN').val().trim().replace(/\s/g,''))){
			$('#standard_deviceSN').css('color','red');
			$('#standard_deviceSN').css('font-weight','normal');
		}else{
			$('#standard_deviceSN').css('color','black');
			$('#standard_deviceSN').css('font-weight','normal');
		}
		if(vdb_onboarded_SN.includes($('#standard_deviceSN').val().trim().replace(/\s/g,''))){
			$('#standard_deviceSN').css('color','#1015a3');
			$('#standard_deviceSN').css('font-weight','bold');
		}else{
			$('#standard_deviceSN').css('color','black');
			$('#standard_deviceSN').css('font-weight','normal');
		}

		$('#DOP').val(standardStorage[index].DOP);
		$('#POP').val(standardStorage[index].POP);
		$('#ISP').val(standardStorage[index].ISP);

		$('#nextaction').val(standardStorage[index].nextaction);
		$('#CH').val(standardStorage[index].CH);
		$('#standard_login').val(standardStorage[index].standard_login);
		$('#standard_login_model').val(standardStorage[index].standard_login_model);
		$('#TS').val(standardStorage[index].TS);
		$('#TSoutbound').val(standardStorage[index].TSoutbound);
		
		$('#logs').prop('checked',standardStorage[index].logs==true? true : false);
		$('#selfservice').prop('checked',standardStorage[index].selfservice==true? true : false);
		$('#survey').prop('checked',standardStorage[index].survey==true? true : false);
		$('#KB').val(standardStorage[index].KB);
		$('#caseclosed_standard').prop('checked',standardStorage[index].caseclosed_standard==true? true : false);
		$('#casenumber_standard').val(standardStorage[index].casenumber_standard);
		$('#RMA_standard').prop('checked',standardStorage[index].RMA_standard==true? true : false);
		$('#call_pulse').prop('checked',standardStorage[index].call_pulse==true? true : false);
	}
	$('#callflow_cxname').html($('#name').val().split(' ')[0]);
	$('#callflow_casenumber_spiel').html($('#casenumber_standard').val());
}

function resetStorage(){
	standardStorage=[];
	for (var prop in currentStandardT) {
		if (Object.prototype.hasOwnProperty.call(currentStandardT, prop)) {
			prop="";
		}
	}
	localStorage.removeItem("standardLocalStorage");
	
}

function addData(index){
	var blankForm={ ...currentStandardT };
	Object.keys(blankForm).forEach(v => blankForm[v] = "");
	
	standardStorage.splice(index,0,currentStandardT);
	standardStorage[index]=blankForm;
	localStorage.setItem("standardLocalStorage", JSON.stringify(standardStorage));
	loadData(index);
}

function resetData(index){
	//Object.keys(currentStandardT).forEach(v => currentStandardT[v] = "");
	//console.log(currentStandardT);
	//standardStorage[index]=currentStandardT;
	standardStorage=standardStorage.filter(function(item,indx){
		if(indx!==index){
			return true;
		}
	});
	localStorage.setItem("standardLocalStorage", JSON.stringify(standardStorage));
	loadData(index);
}

function showMenu(target){
$('.submenu').slideUp();
($('#' + target + '').css("display")== "none")?($('#' + target + '').slideDown("fast")):($('#' + target + '').slideUp("fast"));
$('#' + target + 'New').css("display","none")
}

function generateTemplate(){
  var templatetext=$('#email_followup_templates').val();
  templatetext=templatetext.replace(/<<CUXNAME>>/g,$('#template_cxname').val());
  templatetext=templatetext.replace(/<<EXPERTNAME>>/g,expertName);
  templatetext=templatetext.replace(/<<CASENUMBER>>/g,$('#template_casenum').val());
  $('#email_followup_templates').val(templatetext);


  templatetext=$('#email_followupcallback_templates').val();
  templatetext=templatetext.replace(/<<CUXNAME>>/g,$('#template_cxname').val());
  templatetext=templatetext.replace(/<<EXPERTNAME>>/g,expertName);
  templatetext=templatetext.replace(/<<CASENUMBER>>/g,$('#template_casenum').val());
  $('#email_followupcallback_templates').val(templatetext);

  templatetext=$('#email_followupkb_templates').val();
  templatetext=templatetext.replace(/<<CUXNAME>>/g,$('#template_cxname').val());
  templatetext=templatetext.replace(/<<EXPERTNAME>>/g,expertName);
  templatetext=templatetext.replace(/<<CASENUMBER>>/g,$('#template_casenum').val());
  $('#email_followupkb_templates').val(templatetext);

  templatetext=$('#email_close_templates').val();
  templatetext=templatetext.replace(/<<CUXNAME>>/g,$('#template_cxname').val());
  templatetext=templatetext.replace(/<<EXPERTNAME>>/g,expertName);
  templatetext=templatetext.replace(/<<CASENUMBER>>/g,$('#template_casenum').val());
  $('#email_close_templates').val(templatetext);
}

var slideIndex = [1,0];
var slideId = ["mySlides1", "mySlides2"]

function plusSlides(n, no) {
  prevSlide=slideIndex[no];
  //console.log('prevslide: '+prevSlide);
  showSlides(slideIndex[no] += n, no);
}

function showSlides(n, no) {
  var i;
  var x = document.getElementsByClassName(slideId[no]);
  //console.log(x[0]);
  //console.log('length: ' + x.length)
  //console.log('slide to display : '+ n);
  //console.log(n > x.length);
  
  if (n > x.length) {slideIndex[no] = 1}else{slideIndex[no] = n}
  //console.log('slideindex: ' + slideIndex[no]);
  if (n < 1) {slideIndex[no] = x.length}
  for (i = 0; i < x.length; i++) {
     x[i].style.display = "none";  
  }
  //console.log(slideIndex[no]-1);
  //console.log(x[0]);
  x[slideIndex[no]-1].style.display = "block";  
  //$('#vdinstall_counter').html("Step " + slideIndex[no]);
}

function showCallHandler(issue_num){

	var xhttp = new XMLHttpRequest();
	xhttp.onreadystatechange = function() {
		if (this.readyState == 4 && this.status == 200) {
			// Typical action to be performed when the document is ready:
			try{
			var callhandler = JSON.parse(xhttp.responseText);
			console.log(callhandler.data.issue_callhandler);
			
			$('#call_handler').html(callhandler.data.issue_callhandler.replace(/\n/g, "<br>"));
			}catch{}
			finally{
			}
		}
	};
	xhttp.open("GET", "/api/callhandler/"+issue_num, true);
	xhttp.send();	
}

function loadIssues(){

	var xhttp = new XMLHttpRequest();
	xhttp.onreadystatechange = function() {
		if (this.readyState == 4 && this.status == 200) {
			// Typical action to be performed when the document is ready:
			try{
			var issueList = JSON.parse(xhttp.responseText);
			var table_content='<thead><tr class="header"><th class="tg-0pky" style="width:20%">Issue Number</th><th class="tg-0pky" style="width:60%">Description</th><th class="tg-0pky" style="width:20%">Affected Device/Platform/Feature</th></tr></thead><tbody>';
			for(i=0;i<issueList.data.length;i++){
				table_content+='<tr>';
				table_content+='<td><a href="#" onclick="showCallHandler(' + issueList.data[i].issue_number + ')">' + issueList.data[i].issue_number + '</a></td>';
				table_content+='<td>' + issueList.data[i].issue_description + '</td>';
				table_content+='<td>' + issueList.data[i].issue_keywords + '</td>';
				table_content+='</tr>';
			}
			table_content+='</tbody>';
			$("#issue_table").html(table_content);
			}catch{}
			finally{
			
			//$("#issue_filter").on('keyup', filter('issue_table'));
			//$("#issue_filter").on('search', filter('issue_table'));
			sortTable(0);
			}
		}
	};
	xhttp.open("GET", "/api/issues", true);
	xhttp.send();
	
}


/*
// Get the modal
var modal = document.getElementById("modal_comment");

// Get the button that opens the modal
var btn = document.getElementById("modal_btn_comment");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];

// When the user clicks on the button, open the modal
btn.onclick = function() {
  modal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
  modal.style.display = "none";
}
*/
// When the user clicks anywhere outside of the modal, close it



/*
function getIP(){
	window.RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;  
	var pc = new RTCPeerConnection({iceServers:[]}), 
	noop = function(){}; 
     
   	pc.createDataChannel("");  
	pc.createOffer(pc.setLocalDescription.bind(pc), noop);   
    	pc.onicecandidate = function(ice){ 
   	if(!ice || !ice.candidate || !ice.candidate.candidate)  return;

        	var myIP = /([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/.exec(ice.candidate.candidate)[1];

        	console.log('my IP: ', myIP); 
			//$('.ipAdd').text(myIP);
  
        	pc.onicecandidate = noop;
  
	 }; 
}
*/

function compareHide(camera){
	$('.'+camera+'compare').addClass('compare-hidden');
	compareColumns=compareColumns-1;
	$('.compare').css('width',(80/compareColumns) + '%');
	console.log(compareColumns);
	$('#'+camera+'-option').removeAttr('disabled');
	if(compareColumns<5){
		$('.compare').css('width','16%');
		$('.compare-table').css('width',(20+(20*compareColumns)) + '%');
	}else{
		$('.compare').css('width',(80/compareColumns) + '%');
		$('.compare-table').css('width','100%');
	}
	if(!compareColumns){
		$('.selectcompare').removeClass('compare-hidden');
		$('.compare-tbody').addClass('compare-hidden');
		$('.compare-table').css('width','40%');
	}
}

function compareShow(camera){
	$('.'+camera+'compare').removeClass('compare-hidden');
	compareColumns=compareColumns+1;
	if(compareColumns<5){
		$('.compare').css('width','16%');
		$('.compare-table').css('width',(20+(20*compareColumns)) + '%');
	}else{
		$('.compare').css('width',(80/compareColumns) + '%');
		$('.compare-table').css('width','100%');
	}
	//console.log($('.compare').css('width'));
	$('#'+camera+'-option').prop('disabled','true');
	if(compareColumns){
		$('.selectcompare').addClass('compare-hidden');
		showFilters();
	}
}

function showFilters(){
	$('#checkboxes').children().each(function(index){
		if($(this).hasClass('compare-filtered')){
			$('tbody.compare-'+$(this).get(0).id.split('-')[1]+'-tbody').removeClass('compare-hidden');
		}else{
			$('tbody.compare-'+$(this).get(0).id.split('-')[1]+'-tbody').addClass('compare-hidden');
		}
	});
}

function compareFilter(filter){
	console.log($('#filter-'+filter).hasClass('compare-filtered'));
	
	if($('#filter-'+filter).hasClass('compare-filtered')){
		$('#filter-'+filter).removeClass('compare-filtered');
	}else{
		$('#filter-'+filter).addClass('compare-filtered');
	}
	if(compareColumns){
		showFilters();
	}
}

function showCheckboxes() {
  var checkboxes = document.getElementById("checkboxes");
  if (!expanded) {
	checkboxes.style.display = "block";
    expanded = true;
  } else {
	checkboxes.style.display = "none";
    expanded = false;
  }
}

window.onclick = function(event) {
	//console.log($(event.target).attr('class'));
	//console.log($(event.target).attr('id'));
	if ($(event.target).attr('class') == 'modal') {
		if (($(event.target).attr('id') !== 'modal_name')&&($(event.target).attr('id') !== 'login')&&
					($(event.target).attr('id') !== 'signup')&&
					($(event.target).attr('id') !== 'modal_notice')&&
					($(event.target).attr('id') !== 'modal_survey')&&
					($(event.target).attr('id') !== 'modal_loyalty')&&
					($(event.target).attr('id') !== 'modal_surveycnx')){
			$(event.target).css('display','none');
		}
		if ($(event.target).attr('id') == 'modal_arlee'){
			arleeopen=false;
		}
    //modal.style.display = "none";
	}
	if((expanded)&&(!($(event.target).hasClass('overSelect'))&&(!$(event.target).hasClass('compare-filter')))){
		$('#checkboxes').css('display','none');
		expanded=false;
	}
}

function showMessage(expertname,message,id){
	
	if(expertName==expertname){
		if(localStorage.getItem('expertName'+id)!=='sent'){
			$('#modal_message').css('display','block');
			$('#modal_message_name').html(expertname);
			$('#modal_message_reply').html(message);
			localStorage.setItem('expertName'+id,'sent');
		}
	}
}

function priceCalc(numCameras,plan,div,countrycode){
	console.log(countrycode);
	var country={
		'USD':{pmc:9.99, psc:2.99, emc:14.99, esc:4.99},
		'CAD':{pmc:13.49, psc:3.99, emc:19.99, esc:6.49},
		'EUR':{pmc:8.99, psc:2.79, emc:13.99, esc:4.49},
		'GBP':{pmc:7.99, psc:2.49, emc:12.49, esc:3.99},
		'AUD':{pmc:14.99, psc:4.49, emc:21.99, esc:7.49},
		'DKK':{pmc:69, psc:20, emc:99, esc:35},
		'SEK':{pmc:95, psc:29, emc:145, esc:49},
		'CHF':{pmc:10.99, psc:2.99, emc:15.99, esc:4.99},
		'CZK':{pmc:235, psc:70, emc:350, esc:155},
		'PLN':{pmc:39, psc:12, emc:59, esc:20},
		'NZD':{pmc:14.99, psc:4.99, emc:23.99, esc:7.99},
		'NOK':{pmc:89, psc:27, emc:135, esc:45},
		'HUF':{pmc:2960, psc:885, emc:4440, esc:1475},
		'HKD':{pmc:79, psc:24, emc:117, esc:39},
		'JPY':{pmc:1060, psc:320, emc:1595, esc:530},
		'ZAR':{pmc:152, psc:45, emc:229, esc:76},
		'SGD':{pmc:13.99, psc:4.49, emc:21.99, esc:6.99},

	}
	console.log(plan);
	var format = new Intl.NumberFormat('en-US', { 
                style: 'currency', 
                currency: countrycode, 
                minimumFractionDigits: 2, 
			}); 
			
	if(numCameras<4){
		if(plan=='premier'){
			$('#'+div).html('Premier Single Cam Plans: '+format.format(numCameras*country[countrycode].psc));
		}else{
			$('#'+div).html('Elite Single Cam Plans: '+format.format(numCameras*country[countrycode].esc));
		}
	}else{
		if(plan=='premier'){
			if(numCameras>5){
				$('#'+div).html('Premier Multi-cam Plan X1: '+ format.format(country[countrycode].pmc)+'<br>Premier Single Cam Plan <b>(50%off)</b> X' + (numCameras-5) + ': '+format.format((roundDown((numCameras-5)*(country[countrycode].psc/2),2)))+'<br>Total: '+format.format((roundDown(((numCameras-5)*(country[countrycode].psc/2))+country[countrycode].pmc,2))));
			}else{
				$('#'+div).html('Premier Multi-cam Plan X1: '+ format.format(country[countrycode].pmc));
			}
		}else{
			if(numCameras>5){
				$('#'+div).html('Elite Multi-cam Plan X1: '+ format.format(country[countrycode].emc)+'<br>Elite Single Cam Plan <b>(50%off)</b> X' + (numCameras-5) + ': '+format.format((roundDown((numCameras-5)*(country[countrycode].esc/2),2)))+'<br>Total: '+format.format((roundDown(((numCameras-5)*(country[countrycode].esc/2))+country[countrycode].emc,2))));
			}else{
				$('#'+div).html('Elite Multi-cam Plan X1: '+ format.format(country[countrycode].emc));
			}

		}
	}
}





function recordUser(user){
	data={
		name:expertName
	}

	$.ajax({
		type:"POST",
		url:"/api/recorduser" ,
		data:JSON.stringify(data),
		headers:{
			"Content-Type":"application/json"
		},
		//dataType:"json",
		success:function(data){
			//console.log(data);
		},
		error:function(error){
		}
	 });
}

function getMetricDate(callback){
	let xhr = new XMLHttpRequest();
	try{
		xhr.open('GET', '/api/metric/metricdate')
		xhr.send();
		xhr.onload = function() {
			if (xhr.status != 200) { // analyze HTTP status of the response
				console.log(`Error ${xhr.status}: ${xhr.statusText}`); // e.g. 404: Not Found
			} else {
				var tempDate=JSON.parse(xhr.response).data[0]["metric-Response-Completiondate"]
				console.log(tempDate)
				metricDate=new Date(getDateString(tempDate));
				if(callback){
					//console.log("in callback");
					callback(tempDate);
				}
				//console.log(tempDate);
				return tempDate;
			}
		}
		xhr.onerror = function() {
			console.log("Request failed");
		};
	}catch(err){
		console.log(err)
	}
}

function showMetricDate(data,callback){
//	metricDate=new Date(getMetricDate());
	$('#metricDateDiv').html('As of ' + metricDate.toLocaleString('default',{month:'long'}) +' ' + parseInt(metricDate.getDate()) + ', ' + parseInt(metricDate.getYear()+1900));

	if(callback){
		console.log("in callback");
		callback(data);
	}
}


function toggleQuicklinks(source){
	if ($("#quicklinks_panel").hasClass('show')) {
		$("#quicklinks_panel").animate({
			left: "-96px"
        }, 0).removeClass('show').addClass('hide');
		$("#content").animate({
			"padding-left": "0px"
		},0);
	} else {
		$("#quicklinks_panel").css("left","0px").removeClass('hide').addClass('show');
		$("#quicklinks:after").css('content','\f152');
		//$('#quicklinks').css("width","100px");
		$("#content").animate({
			"padding-left": "96px"
		},0);
	}
}

function getCommendations(){
	var folder = "/assets/img/commendations";
	console.log('commend');
	$.ajax({
		url : folder,
		type:'GET',
		success: function (data) {
			console.log(data);
			$(data).find("a").attr("href", function (i, val) {
				if( val.match(/\.(jpe?g|png|gif)$/i) ) { 
					console.log('image');
					console.log(folder + ' ' + val);
					$("#table_commendations").append( "<tr><td><img src='"+ val +"' width=100%></td></tr>" );
				} 
			});
		}
	});
}

function getVL(){
	var folder = "/assets/img/commendations";
	console.log('commend');
	$.ajax({
		url : folder,
		type:'GET',
		success: function (data) {
			console.log(data);
			$(data).find("a").attr("href", function (i, val) {
				if( val.match(/vl.*\.(jpe?g|png|gif)$/i) ) { 
					console.log('image');
					console.log(folder + ' ' + val);
					$("#table_VL").append( "<tr><td><img src='"+ val +"' width=100%></td></tr>" );
				} 
			});
		}
	});
}

function ecommerceCalc(){
	var days=['Sun','Mon','Tue','Wed','Thu','Fri','Sat']
	var today = new Date().toLocaleString("en-US", {timeZone: "America/Los_Angeles"});
	var PST = new Date(today);
	var hPST = PST.getHours();
	var mPST = PST.getMinutes();
	var sPST = PST.getSeconds();
	var dayPST = PST.getDay();
	hPST = checkTime(hPST);
	mPST = checkTime(mPST);
	sPST = checkTime(sPST);
	today = new Date().toLocaleString("en-US", {timeZone: "Canada/Mountain"});
	var MST = new Date(today);
	var hMST = MST.getHours();
	var mMST = MST.getMinutes();
	var sMST = MST.getSeconds();
	var dayMST = MST.getDay();
	hMST = checkTime(hMST);
	mMST = checkTime(mMST);
	sMST = checkTime(sMST);
	today = new Date().toLocaleString("en-US", {timeZone: "America/New_York"});
	var EST = new Date(today);
	var hEST = EST.getHours();
	var mEST = EST.getMinutes();
	var sEST = EST.getSeconds();
	var dayEST = EST.getDay();
	hEST = checkTime(hEST);
	mEST = checkTime(mEST);
	sEST = checkTime(sEST);
	today = new Date().toLocaleString("en-US", {timeZone: "America/Chicago"});
	var CST = new Date(today);
	var hCST = CST.getHours();
	var mCST = CST.getMinutes();
	var sCST = CST.getSeconds();
	var dayCST = CST.getDay();
	hCST = checkTime(hCST);
	mCST = checkTime(mCST);
	sCST = checkTime(sCST);
	$('#ecomTimeCST').html('<b>' + days[dayCST] + ' ' + hCST + ":" + mCST + " CST</b>");
	$('#ecomTimeMST').html('<b>' + days[dayMST] + ' ' + hMST + ":" + mMST + " MST</b>");
	$('#ecomTimeEST').html('<b>' + days[dayEST] + ' ' + hEST + ":" + mEST + " EST</b>");
	$('#ecomTimePST').html('<b>' + days[dayPST] + ' ' + hPST + ":" + mPST + " PST</b>");
	$('#ecommerceTime').html('<b>' + days[dayPST] + ' ' + hPST + ":" + mPST + ":" + sPST + " PST</b>");
	$('#ecomStatus').html((((hPST>2)&&(hPST<19)))?'ECOM is <b style="color:#a3ffbc">OPEN</b>':'ECOM is <b style="color:#ff7373">CLOSED</b>');
	$('#cctStatus').html((((hPST>2)&&(hPST<19)))?'CCT is <b style="color:#a3ffbc">OPEN</b>':'CCT is <b style="color:#ff7373">CLOSED</b>');
	var t = setTimeout(ecommerceCalc, 500);
}



function save_intervention(coach,agents,topic,product){

	data={
		interventions_coach:coach,
		interventions_attendees:agents,
		interventions_topic:topic,
		interventions_devices:product
	}

	$.ajax({
		type:"POST",
		url:"/api/intervention/add" ,
		data:JSON.stringify(data),
		headers:{
			"Content-Type":"application/json"
		},
		//dataType:"json",
		success:function(data){
			//console.log(data);
			resetIntervention();
			updateInterventionTable();
			$("#intervention_status").html("Intervention recorded.");
		},
		error:function(error){

		}
	});
}



function resetIntervention(){
	$('#L2_list_intervention').html('');
	$('#L2_list_intervention').append(new Option('Select L2 Expert', 0, true, true));
	$('#L2_list_intervention option').addClass('selectheader');
	$('.selectheader').prop('disabled','disabled');
	$('.selectheader').prop('selected','selected');
	
	$('#intervention_topic').val('');
	$("#L1_list_intervention_dest").html('');
	getDataRecord('/api/users/type/Level 2/TM',function(experts){
		//console.log(experts.length);
		//$("#L2_list_intervention").html('');
		experts.sort((a, b) => (a["users_CN"] > b["users_CN"]) ? 1 : -1)
		experts.forEach(data => {
			//console.log(data);
			$("#L2_list_intervention").append(new Option(data.users_CN, data.users_CES));
		});
	},'L2_list_intervention');

	getDataRecord('/api/users/type/Level 1/0',function(experts){
		//console.log(experts);
		
		$("#L1_list_intervention_source").html('');
		experts.sort((a, b) => (a["users_CN"] > b["users_CN"]) ? 1 : -1)
		experts.forEach(data => {
			//console.log(data);
			$("#L1_list_intervention_source").append(new Option(data.users_CN, data.users_CES));
		});
	},'L1_list_intervention_source');
	

	getDataRecord('/api/devices',function(devices){
		//console.log(experts.length);
		$("#intervention_product").html('');
		devices.sort((a, b) => (a["device_name"] > b["device_name"]) ? 1 : -1)
		devices.forEach(data => {
			//console.log(data);
			$("#intervention_product").append(new Option(data.device_name + "    (" + data.device_model + ")", data.device_model));
		});
	},'intervention_product');
}

function updateInterventionTable(){
	
	getDataRecord('/api/interventions/get',function(interventions){
		var html="";
		//console.log(interventions);
		$("#intervention_table").html('<tr><td>Coach</td><td>L1 Agents</td><td>Topic</td><td>Product</td></tr>');
		interventions.forEach(data => {
			html="<tr><td id='coach_"+ data.interventions_id +"'></td><td id='attendees_"+ data.interventions_id +"'></td><td>" + data.interventions_topic + "</td><td id='devices_"+ data.interventions_id +"'></td></tr>";
			$("#intervention_table").append(html);
			getDataRecord('/api/users/CES/'+data.interventions_coach+'/0',function(coachdata){
					var html4='';
					html4+=coachdata[0].users_CN + "<br>";
					$('#coach_'+ data.interventions_id).append(html4);
					//console.log(html4);
			},'');


			var attendees_array =  data.interventions_attendees.split(",");
			attendees_array.forEach(attendee =>{
				getDataRecord('/api/users/CES/'+attendee+'/0',function(attendeedata){
					var html2='';
					html2+=attendeedata[0].users_CN + "<br>";
					$('#attendees_'+ data.interventions_id).append(html2);
					//console.log(html2);
				},'');
			});

			var devices_array =  data.interventions_devices.split(",");
			//console.log(devices_array);
			devices_array.forEach(device =>{
				if(device=''){

				}else{
					getDataRecord('/api/devices/model/'+device,function(devicedata){
						var html3='';
						//console.log(devicedata);
						html3+=devicedata[0].device_name + "<br>";
						$('#devices_'+ data.interventions_id).append(html3);
						//console.log(html3);
					},'');
				}
			});
		});
		//console.log(html);
		
	},'');
}




function getUpdates(callback){
	getDataRecord('/api/viewupdates',function(updatedata){
		console.log(updatedata);
		var html="<tbody>";
		updatedata.forEach(update => {
			html+="<tr class='update_row'><td style='text-wrap:normal;word-wrap: break-word;'><h5 style='font-size:14px;margin-bottom:5px;margin-right:0px;width:99%;'>"+ update.updates_title + "</h5><br>" + update.updates_timestamp + "<br><br><span style='font-size:12px;'>" + update.updates_content.replace(/\n/g,'<br>') + "</span></td></tr>";
		});
		html+="</tbody>";
		callback(html);
	},'');
}






/*
((parseFloat(a.CSAT[1]) > parseFloat(b.CSAT[1])) ? 1 : -1)

	getDataRecord('/api/utilization/get/'+CES,function(utildata){
		getDataRecord('/api/metric/CES/'+CES,function(csatdata){
			var month_csat_data = csatdata.filter(csatelement => {
				return (parseInt(csatelement["metric-Response-Completiondate"].split("/")[1])==metricDate.getMonth()+1)
			});
			var month_util_data = utildata.filter(utilelement => {
				return (parseInt(utilelement["util_date"].split("/")[1])==metricDate.getMonth()+1);
			});
			console.log(month_util_data);
			console.log(month_csat_data);
			var month_data=[]
			month_util_data.forEach(element=>{
				if(element.util_productivityrate=="0.00%"){
					element.util_productivityrate='';
				}
				if(element.util_utilizationrate=="0.00%"){
					element.util_utilizationrate='';
				}
				month_data[month_util_data.indexOf(element)]=element;
				
				var csatdata = month_csat_data.filter(dayelement=>{
					return (parseInt(dayelement["metric-Response-Completiondate"].split("/")[2])<=element.util_date.split("/")[2])
				}).map(a => a["metric-Q1"]);
				var npsdata = month_csat_data.filter(dayelement=>{
					return (parseInt(dayelement["metric-Response-Completiondate"].split("/")[2])<=element.util_date.split("/")[2])
				}).map(a => a["metric-Q2"]);
				var fcrdata = month_csat_data.filter(dayelement=>{
					return (parseInt(dayelement["metric-Response-Completiondate"].split("/")[2])<=element.util_date.split("/")[2])
				}).map(a => a["metric-Q4"]);
				month_data[month_util_data.indexOf(element)].csat=calcCsat(csatdata);
				month_data[month_util_data.indexOf(element)].csat[0]
				month_data[month_util_data.indexOf(element)].nps=calcNps(npsdata);
				month_data[month_util_data.indexOf(element)].fcr=calcFcr(fcrdata);
			})
			console.log(month_data);
			/*var html="<tbody>";
			updatedata.forEach(update => {
				html+="<tr class='update_row'><td><h5 style='font-size:14px;margin-bottom:5px;'>"+ update.updates_title + "</h5><br>" + update.updates_timestamp + "<br><br><span style='font-size:12px'>" + update.updates_content.replace(/\n/g,'<br>') + "</span></td></tr>";
			});
			html+="</tbody>";
			if(callback){
				callback(month_data);
			}
		});
		
	},''); 

}*/


function show_screensaver(){
    $('#screensaver').fadeIn().css('display','table');
    screensaver_active = true;
    screensaver_animation();
}

function stop_screensaver(){
    $('#screensaver').fadeOut();
    screensaver_active = false;
}

function screensaver_animation(){
    if (screensaver_active) {
        
    }
}

function changeScreenSaverImage(){
	if(!screensaverImageList.length){
		screensaverImageList=screensaverMasterImageList.slice();
	}
	var randomImage=Math.floor(Math.random()*screensaverImageList.length);
	console.log(randomImage);
	mousetimeout=setTimeout(function(){
		changeScreenSaverImage();	
	},idletime*1000);
	$('#screensaverSlides').fadeIn().attr('src',screensaverImageList[randomImage]);
	screensaverImageList.splice(randomImage,1);;
	console.log(screensaverImageList);
}

function runScreenSaver(){
    clearTimeout(mousetimeout);
    if (screensaver_active) {
        stop_screensaver();
	}
	
    mousetimeout = setTimeout(function(){
		changeScreenSaverImage()
		show_screensaver();
    }, 1000 * idletime); // 5 secs
};

function saveCasesFile(){
	var today=new Date();
	data = {
		ces:userCES,
		dataStandard:localStorage.getItem('standardLocalStorage'),
		dataEOS:localStorage.getItem('EOS'),
		dataAHT:localStorage.getItem('AHT')
	}
	saveTextAsFile(JSON.stringify(data),today.getFullYear() + "-" +(today.getMonth()+1) + "-" + (today.getDate()));
}

function loadCasesFile(){
	$('#load-input').trigger('click');
	$('#load-input').on('change',function(){
		var file = $('#load-input')[0].files[0];
		const reader = new FileReader();
		reader.addEventListener('load', (event) => {
			console.log(event.target.result.length);
			if(event.target.result.length){
				data=JSON.parse(event.target.result);
				try{
					standardStorage=[];
					standardStorage=JSON.parse(data.dataStandard);
					localStorage.setItem('standardLocalStorage',JSON.stringify(standardStorage));
				}catch(err){
					console.log(err);
				}
				try{
					AHT=[];
					AHT=JSON.parse(data.dataAHT);
					localStorage.setItem('AHT',JSON.stringify(AHT));
					AHT_num_cases=AHT.length;
					localStorage.setItem('AHT_numCases',AHT_num_cases);
				}catch(err){
					console.log(err);
				}
				try{
					EOS=[];
					EOS=JSON.parse(data.dataEOS);
					localStorage.setItem('EOS',JSON.stringify(EOS));
					num_cases=EOS.length;
					localStorage.setItem('numCases',num_cases);
				}catch(err){
					console.log(err);
				}
				console.log(AHT);
				console.log(standardStorage);
				//localStorage.setItem('standardLocalStorage',[JSON.stringify(data.data[0].cases_data)]);
				loadData(currentRecord);
			}else{
				alert("No cases in database.");
			}
		});
		reader.readAsText(file);
	})

}

function saveCases(){
	data = {
		ces:userCES,
		dataStandard:localStorage.getItem('standardLocalStorage'),
		dataEOS:localStorage.getItem('EOS'),
		dataAHT:localStorage.getItem('AHT')
	}
	$.ajax({
		type:"POST",
		url:"/api/cases/save" ,
		data:JSON.stringify(data),
		headers:{
			"Content-Type":"application/json"
		},
		//dataType:"json",
		success:function(data){
			//console.log(data);
		},
		error:function(error){
		}
	});
}

function loadCases(){
	newdata = {
		ces:'',
		dataStandard:'',
		dataEOS:'',
		dataAHT:''
	}
	$.ajax({
		type:"GET",
		url:"/api/cases/get/"+userCES,
		headers:{
			"Content-Type":"application/json"
		},
		//dataType:"json",
		success:function(data){
			console.log(data);
			if(data.data.length){
				newdata.ces=data.data[0].cases_CES;
				try{
					
					newdata.dataStandard=JSON.stringify(data.data[0].cases_data);
					newdata.dataStandard=newdata.dataStandard.substring(2);
					newdata.dataStandard=newdata.dataStandard.substring(0,newdata.dataStandard.length-2);
					newdata.dataStandard=newdata.dataStandard.replace(/\\\\[n]+/g, '\\n');
					newdata.dataStandard=newdata.dataStandard.replace(/\\["]+/g, '"');
					standardStorage=[];
					standardStorage=JSON.parse("["+newdata.dataStandard+"]");
					localStorage.setItem('standardLocalStorage',JSON.stringify(standardStorage));
				}catch(err){
					console.log(err);
				}
				
				try{
					newdata.dataAHT=data.data[0].cases_AHT;
					newdata.dataAHT=newdata.dataAHT.substring(2);
					newdata.dataAHT=newdata.dataAHT.substring(0,newdata.dataAHT.length-2);
					newdata.dataAHT=newdata.dataAHT.replace(/\\["]+/g, '"');


					AHT=[];
					AHT=JSON.parse("["+newdata.dataAHT+"]");
					localStorage.setItem('AHT',JSON.stringify(AHT));
					AHT_num_cases=AHT.length;
					localStorage.setItem('AHT_numCases',AHT_num_cases);
				}catch(err){
					console.log(err);
				}
				try{
					newdata.dataEOS=data.data[0].cases_EOS;
					newdata.dataEOS=newdata.dataEOS.substring(2);
					newdata.dataEOS=newdata.dataEOS.substring(0,newdata.dataEOS.length-2);
					newdata.dataEOS=newdata.dataEOS.replace(/\\["]+/g, '"');

					EOS=[];
					EOS=JSON.parse("["+newdata.dataEOS+"]");
					localStorage.setItem('EOS',JSON.stringify(EOS));
					num_cases=EOS.length;
					localStorage.setItem('numCases',num_cases);
				}catch(err){
					console.log(err);
				}
				
				
				
				console.log(AHT);
				console.log(standardStorage);
				//localStorage.setItem('standardLocalStorage',[JSON.stringify(data.data[0].cases_data)]);
				loadData(currentRecord);
			}else{
				alert("No cases in database.");
			}
			
		},
		error:function(error){
		}
	});
}


function getDeficit(actual,total,target){
	if(total==0){
		return 1;
	}
	const fn = (x,y,z) => ((x+z)/(y+z))*100;
	var deficit=0;
	const fnParams = [actual,total,deficit];
	//console.log(fnParams);
	try {
		const result = goalSeek({
		fn,
		fnParams,
		percentTolerance: 0.1,
		maxIterations: 1000000,
		maxStep: 0.01,
		goal: target,
		independentVariableIdx: 2
		})
		//console.log(result);
		return (Math.ceil(result));
		// result => 98
	} catch(e) {
		console.log(e);

  	}
}



function getBirthdays(callback){
	$.ajax({
		type:"GET",
		url:"/api/users/birthday/get",
		headers:{
			"Content-Type":"application/json"
		},
		//dataType:"json",
		success:function(data){
			//console.log(data.data);
			if(callback){
				callback(data.data);
			}
			return data.data;
			
		},
		error:function(error){
		}
	})
}



  function populateMIPCurrentStats(){
	var mip=0;
	console.log($('#table_metrics_summary_data td:nth-child(12)').html());
	inbound=$('#table_metrics_summary_data td:nth-child(12)').html();
	console.log(inbound);
	$('#mip_CSAT').html($('#table_metrics_summary_data td:nth-child(1)').html());
    $('#mip_NPS').html($('#table_metrics_summary_data td:nth-child(4)').html());
    $('#mip_FCR').html($('#table_metrics_summary_data td:nth-child(5)').html());
	$('#mip_ACD').html($('#table_metrics_summary_data td:nth-child(9)').html());
	$('#mip_QA').html($('#table_metrics_summary_data td:nth-child(10)').html());
	$('#mip_closure').html(((parseFloat($('#table_metrics_summary_data td:nth-child(13)').html())/inbound)*100).toFixed(2)+'%');
	
	mip=(identifyMIPRating('CSAT')*parseFloat($('#mip_CSAT_wt').html())/100+
		identifyMIPRating('NPS')*parseFloat($('#mip_NPS_wt').html())/100+
		identifyMIPRating('FCR')*parseFloat($('#mip_FCR_wt').html())/100+
		identifyMIPRating('ACD')*parseFloat($('#mip_ACD_wt').html())/100+
		identifyMIPRating('QA')*parseFloat($('#mip_QA_wt').html())/100+
		identifyMIPRating('closure')*parseFloat($('#mip_closure_wt').html())/100).toFixed(2);
	$('#mip_score').html(mip);
  }

function identifyMIPRating(stat){
	$('.mip_'+stat+'_grid').css('background-color','white');
	switch(true){
		case (parseFloat($('#mip_'+stat).html())>=parseFloat($('#mip_'+stat+'_5').html())):
			$('#mip_'+stat+'_5').css('background-color','#fce303');
			return(5);
			break;
		case (parseFloat($('#mip_'+stat).html())>=parseFloat($('#mip_'+stat+'_4').html())):
			$('#mip_'+stat+'_4').css('background-color','#fce303');
			return(4);
			break;
		case (parseFloat($('#mip_'+stat).html())>=parseFloat($('#mip_'+stat+'_3').html())):
			$('#mip_'+stat+'_3').css('background-color','#fce303');
			return(3);
			break;
		case (parseFloat($('#mip_'+stat).html())>=parseFloat($('#mip_'+stat+'_2').html())):
			$('#mip_'+stat+'_2').css('background-color','#fce303');
			return(2);
			break;
		case (parseFloat($('#mip_'+stat).html())<parseFloat($('#mip_'+stat+'_1').html())):
			$('#mip_'+stat+'_1').css('background-color','#fce303');
			return(1);
			break;
		default:
			$('#mip_'+stat+'_1').css('background-color','#fce303');
			return(1);

	}
}

function populateL2Endorsers(table,selector,week){
	console.log(week);
	if(l2endorser_editor.indexOf(user.users_CES)>=0){
		$("."+table+" ."+selector).html('');
		$("."+table+" ."+selector).append(new Option('Select Expert',''));
		getDataRecord('/api/users/type/Level 2/TM',function(expertsL2){
			expertsL2.sort((a, b) => (a.users_alias < b.users_alias) ? -1 : 1)
			expertsL2.forEach(function(expert){
				$("."+table+" ."+selector).append(new Option(expert.users_alias,expert.users_CES))
			})
			getDataRecord('/api/endorser/get/'+week,function(data){
				if(data.length>0){
					var endorsers=JSON.parse(data[0].endorsers_data);
					//console.log(endorsers);
					
					endorsers.forEach(function(endorser){
						//console.log(endorser.endorser);
						//console.log(user.users_ces);
						if(endorser.endorser!=null){
							if(endorser.endorser==user.users_CES){
								$("#"+endorser.slot).val(endorser.endorser);
								$("#"+endorser.slot).parent().css('background-color','#75c98b')
							}else{
								$("#"+endorser.slot).val(endorser.endorser);
								$("#"+endorser.slot).parent().css('background-color','rgba(255, 255, 255, 0.8)')
							}
						}else{
							$("#"+endorser.slot).val('');
							$("#"+endorser.slot).parent().css('background-color','#ad717b')
						}
						
					})
				}else{
					$("."+selector).val('');
					$("."+selector).parent().css('background-color','#ad717b')
				}
			})
		});
		
	}else{
		getDataRecord('/api/endorser/get/'+week,function(data){
			if(data.length>0){
				var endorsers=JSON.parse(data[0].endorsers_data);
				//console.log(endorsers);

				endorsers.forEach(function(endorser){
                    var endorserslot=((endorser.slot).substr(5,1)=='_')?(endorser.slot).substr(0,5):(endorser.slot).substr(0,6)
                    console.log((endorser.slot).substr(6,1));
                    getDataRecord("/api/users/CES/"+endorser.endorser+"/A",function(user){
                        if(user.length>0){
                            //console.log(user);
                            $("#"+endorserslot+ " .endorser_name").html(user[0].users_alias);
                            if(user[0].users_alias==user.users_alias){
                                //console.log(user.users_alias);
                                $("#"+endorserslot).css('background-color','#75c98b')
                            }else{
                                $("#"+endorserslot).css('background-color','rgba(255, 255, 255, 0.8)')
                            }
                        }else{
                            $("#"+endorserslot+ " .endorser_name").html("None");
                            $("#"+endorserslot).css('background-color','#ad717b')
                        }

                    })
                })
			}else{
				$('.endorser_name').html('None');
				$('.endorser_name').parent().css('background-color','#ad717b')
			}
		})
	}
	console.log(week.substring(2));
	var endorserDate=new Date(2020,week.substring(0,2)-1,week.substring(2));
	console.log(endorserDate);
	for(i=0;i<7;i++){
		$('#date_'+i).html(((((endorserDate.getMonth()+1)+'').length<2)?'0':'')+(endorserDate.getMonth()+1)+'/'+((((endorserDate.getDate()+1)+'').length<2)?'0':'')+endorserDate.getDate());
		endorserDate.setDate(endorserDate.getDate() + 1);
	}
	
}

function saveEndorserSchedule(selector,week){
	var endorsersElements=$('.'+selector).map(function(){
		return {slot:$(this).attr('id'),endorser:$(this).val()};
	}).get();
	
	data={
		week:week,
		endorser:endorsersElements
	}
	console.log(data);
	getDataRecord("/api/endorser/get/"+week,function(schedule){
		console.log(schedule);
		if(schedule.length>0){
			$.ajax({
				type:"POST",
				url:"/api/endorser/update" ,
				data:JSON.stringify(data),
				headers:{
					"Content-Type":"application/json"
				},
				//dataType:"json",
				success:function(data){
					//console.log(data);
				},
				error:function(error){
				}
			});
		}else{
			$.ajax({
				type:"POST",
				url:"/api/endorser/add" ,
				data:JSON.stringify(data),
				headers:{
					"Content-Type":"application/json"
				},
				//dataType:"json",
				success:function(data){
					//console.log(data);
				},
				error:function(error){
					console.log(error)
				}
			});
		}
	})
}

function generateEscalationReport(month){
	var reasons=[
		"Incorrect Tagging",
		"Did not download doorbell logs/BS Logs",
		"Did not follow Call handler/TS guidelines",
		"Did not escalate for Issue attachment",
		"Inaccurate TS Recommendation or Resolution",
		"Inaccurate/Unclear Case Documentation",
		"Delayed Escalation",
		"Did not processed callback nor endorsed for callback",
		"Did not follow escalation process",
		"Did not escalate to L2",
		"Providing Wrong Information",
		"Did Not follow the RMA process",
		"Closing Case without resolution",
		"Incomplete case isolation",
		"Others"
	]
	var reasonsLower=[
		"incorrect tagging",
		"did not download doorbell logs/bs logs",
		"did not follow call handler/ts guidelines",
		"did not escalate for issue attachment",
		"inaccurate ts recommendation or resolution",
		"inaccurate/unclear case documentation",
		"delayed escalation",
		"did not processed callback nor endorsed for callback",
		"did not follow escalation process",
		"did not escalate to l2",
		"providing wrong information",
		"did not follow the rma process",
		"closing case without resolution",
		"incomplete case isolation",
		"others"
	]
	var reasonsCount=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	
	var results=[];
	var otherReasons=[];
	var html,html2;
	var totalReasons=0;
	getDataRecord('/api/devices',function(devices){
		getDataRecord('/api/escalations/get',function(escalations){
			var month_escalations=escalations.filter(function(escalation){
				if(escalation.escalations_timestamp.split("/")[0]==month)
					return true;
			});
			console.log(month_escalations);
			month_escalations.forEach(function(escalation){
				totalReasons++;
				try{
					escalation.escalations_reason.toLowerCase()
				}catch(err){
					console.log(escalation);
				}
				if(reasonsLower.indexOf(escalation.escalations_reason.toLowerCase())==-1){
					reasonsCount[14]++;
					otherReasons.push(escalation.escalations_reason);
				}else{
					reasonsCount[reasonsLower.indexOf(escalation.escalations_reason.toLowerCase())]++
				};
			})
			console.log(reasons.length);
			console.log(reasonsCount);
			for(i=0;i<reasons.length;i++){
				results.push({reason:reasons[i],count:reasonsCount[i]})
			}
			console.log(results);
			results.sort((a, b) => (a.count > b.count) ? -1 : 1)
			console.log(results);
			html="<tr><th style='width:500px;text-align:left;background-color:rgb(169, 208, 142);border:1px solid black'>Feedback Summary</th><th style='width:100px;background-color:rgb(169, 208, 142);border:1px solid black'>Count</th></tr>"
			results.forEach(function(result){
				html+="<tr><td>"+result.reason+"</td><td style='text-align:center'>"+result.count+"</td></tr>";
			})
			html+="<tr style='background-color:rgb(169, 208, 142);border:1px solid black;'><th style='text-align:left'>Total</th><th>"+totalReasons+"</th></tr>"

			html2="<tr><th style='width:500px;text-align:left;background-color:rgb(169, 208, 142);border:1px solid black'>Other Reasons</th></tr>"
			otherReasons.forEach(function(result){
				html2+="<tr><td style='border:1px solid black'>"+result+"</td></tr>";
			})
			myWindow = window.open("", "Title", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=780,height=800,top="+0+",right="+100);
			myWindow.document.head.innerHTML = "<title>Invalid Escalation Report"+ 
			'</title><link rel="stylesheet" href="/assets/js/json-viewer/jquery.json-viewer.css"/><link rel="stylesheet" href="/assets/css/carousel.css"/><link rel="stylesheet" href="/assets/css/index.css"/><link rel="stylesheet" href="/assets/font/css/all.css"/><link rel="stylesheet" href="/assets/font/css/fontawesome.css"/><link rel="stylesheet" href="/assets/font/css/solid.css"/><link rel="stylesheet" href="/assets/js/jqueryui/jquery-ui.css"/><link rel="stylesheet" href="/assets/css/dropdown.css"/><link rel="stylesheet" href="/assets/css/arleebird.css"/><link rel="stylesheet" href="/assets/js/charts/Chart.css"/><link rel="stylesheet" href="/assets/css/chat.css"/>'+
			'<script src="/assets/js/jquery-3.4.1.min.js"></script><script src="/assets/js/socket/socket.io.js"></script><script src="/assets/js/createjs-2013.09.25.min.js"></script><script src="/assets/js/ndgmr.Collision.js"></script><script src="/assets/js/arleebird.js"></script><script src="/assets/js/dropdown.js"></script><script src="/assets/js/charts/Chart.js"></script><script src="/assets/js/jquery.mark.min.js"></script><script src="/assets/js/jqueryui/jquery-ui.js"></script><script src="/assets/js/main.js"></script><script src="/assets/js/pako.min.js"></script><script src="/assets/js/logfilereader.js"></script><script src="/assets/js/json-viewer/jquery.json-viewer.js"></script><script src="/assets/js/goalseek.js"></script>';
			
			myWindow.document.body.innerHTML = "<table style='border-collapse:collapse;border:1px solid black;'>"+html+"</table>"+
			"<table style='border-collapse:collapse;border:1px solid black;'>"+html2+"</table>"+
			'<canvas id="reasonsChart" width="100%" style="max-width:100%!important;max-height:400px!important;min-height:100px!important;"></canvas>';
			myWindow.document.body.onload = function(){
				reasonsChart.update();
			}
				var ctx = myWindow.document.getElementById('reasonsChart').getContext('2d');
				console.log(reasonsCount);
				var reasonsChart = new Chart(ctx, {
					type: 'pie',
					data: {
						labels: reasons,
						datasets: [{
							label: 'Feedback',
							data: reasonsCount,
						}]
					},
					options: {
						
						title: {
							display:true,
							text: 'Feedback',
						},
						plugins:{
							labels:{
								render: 'label',
							}
						}
					}
				});
				setTimeout(function(){reasonsChart.update();},1000);
				myWindow.focus();
				
			
			
		});
	});
}

function generateL2Text(){
	var rdparty=$('#l2esca_3rdparty').val();
	rdparty=rdparty.replace('\r', '&nbsp;').replace('\n', '<br>');
	var network=$('#l2esca_network').val();
	network=network.replace('\r', '&nbsp;').replace('\n', '<br>');
	var issuedesc=$('#l2esca_issuedesc').val();
	issuedesc=issuedesc.replace('\r', '&nbsp;').replace('\n', '<br>');
	var steps=$('#l2esca_steps').val();
	steps=steps.replace('\r', '&nbsp;').replace('\n', '<br>');
	var history=$('#l2esca_history').val();
	history=history.replace('\r', '&nbsp;').replace('\n', '<br>');

	myWindow = window.open("", "Title", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=780,height=600,top="+0+",right="+100);

	myWindow.document.head.innerHTML = "<title>Case Standard Template</title><style>.hiddenDiv{display:none}</style>"
	myWindow.document.body.innerHTML = "<div style='white-space: pre-wrap;'><pre>"+
	"Arlo account Email: " + $('#l2esca_email').val() + "<br>" +
	"Affected device: " + $('#l2esca_device').val() + "<br>" +
	"Device Type/Firmware version (BS/Camera): " + $('#l2esca_type').val() + "<br>" +
	"iOS/Android/Web - model/version/OS: " + $('#l2esca_access').val() + "<br>" +
	"Minimum upload download speed: " + $('#l2esca_dlul').val() + "<br>" +
	"3rd Party device details (apps/routers/etc..): <br>" + rdparty + "<br>" +
	"Network Topology Example: <br>" + network + "<br>" + 
	"Issue Description: <br>" + issuedesc + "<br>" +
	"Steps to reproduce the issue: <br>" + steps + "<br>" +
	"History of the problem: <br>" + history + "<br>" +
	"All logs/screenshot/library recording: " + $('#l2esca_logs').val() + "<br>" +
	"RMA History: " + $('#l2esca_rma').val() + "<br>" +
	"Other: " + $('#l2esca_other').val() + "<pre></div>" +
	$('#l2subtemplates_div').html()


	myWindow.focus();
}

function sendMessageExpert(message){
	data={
		user:rtaToExpert,
		type:message
	}
	socket.emit('rta message', data);
	$('#rtaPopup').fadeOut();
}

 function popupRTA(event){
	 e=event||window.event;
	 var target=e.target||e.srcElement;
	 console.log(target);
	 console.log(e.pageY);
	 console.log(e.pageX);
	 rtaToExpert=target.id;
	 console.log(rtaToExpert)
	 $('#rtaPopup').css('top',e.pageY).css('left',e.pageX).fadeIn();
 }

function onUserInactivity(){
	console.log(('Logging out.'))
	try{
		socket.emit('disconnect me',userCES);
	}catch(err){
		console.log(err);
	}
	document.cookie = 'token=;expires=;path=/';
	document.cookie = 'refreshToken=;expires=;path=/';
	document.cookie = 'userdetails=;expires=;path=/';
	location.reload(true);
	window.open('/','_self',true);
}

function resetTimeout() {
	clearTimeout(inactivityTimeout);
	if(goReset){
		
	}else{
		goReset=true;
		resetTimeoutOK = setTimeout(function(){
			console.log('Resetting inactivity.');
			inactivityTimeout = setTimeout(onUserInactivity, 8 * 60 * 60 * 1000);
			goReset=false
		}, 60 * 1000 * 1);
	}
}

function getDateString(tempdate){
	//console.log(tempdate);
	return (tempdate.split("/")[1]) + "/" + tempdate.split("/")[2].split(" ")[0] + "/" + tempdate.split("/")[0] + " " + tempdate.split("/")[2].split(" ")[1] + " " + tempdate.split("/")[2].split(" ")[2];
}


function generatePDF(){
	console.log($('#sah_cn').val());
	var data={
		cn:$('#sah_cn').val()
	}
	$.ajax({
		type:"POST",
		url:"/sah/charger/getpdf" ,
		data:JSON.stringify(data),
		headers:{
			"Content-Type":"application/json"
		},
		//dataType:"json",
		success:function(data){
			console.log(data);
		},
		error:function(error){
		}
	});





	let xhr = new XMLHttpRequest();
	xhr.open('POST', "/sah/charger/getpdf")
	xhr.setRequestHeader('Content-Type', 'application/json');
	console.log($('#sah_cn').val());
	xhr.send(JSON.stringify({
		cn:$('#sah_cn').val()
	}));
	xhr.onload = function() {
		if (xhr.status != 200) { // analyze HTTP status of the response
			console.log(`Error ${xhr.status}: ${xhr.statusText}`); // e.g. 404: Not Found
		} else {
			console.log(xhr.response);
			xhr.response.blob().then(res=>{

				const link = document.createElement('a');
				link.href = window.URL.createObjectURL(res);
				link.download = `your-file-name.pdf`;
				link.click();
			})
		}
	}
	xhr.onerror = function() {
	  console.log("Request failed");
	};




/*
	fetch("/sah/charger/getpdf", {
		method: "POST",
		headers: {
			'Content-Type': 'application/json'
			// 'Content-Type': 'application/x-www-form-urlencoded',
		},
		body:JSON.stringify({
			cn:$('#sah_cn').val()
		})
	}).then(res => {
		console.log(res);
		res.blob().then(res=>{

			const link = document.createElement('a');
			link.href = window.URL.createObjectURL(res);
			link.download = `your-file-name.pdf`;
			link.click();
		})
	});
	*/
}

function saveAsPDF(){
	//console.log($('#sah_injured').chc());
	var data={
		sah_charger_cn:$('#sah_charger_cn').val(),
		sah_charger_injured:$('#sah_charger_injured').prop('checked')==true?"Yes":"No",
		sah_charger_injuredesc:$('#sah_charger_injuredesc').val(),
		sah_charger_shock:$('#sah_charger_shock').prop('checked')==true?"Yes":"No",
		sah_charger_shockdesc:$('#sah_charger_shockdesc').val(),
		sah_charger_incdate:$('#sah_charger_incdate').val(),
		sah_charger_inctime:$('#sah_charger_inctime').val(),
		sah_charger_usedlength:$('#sah_charger_usedlength').val(),
		sah_charger_usedate:$('#sah_charger_usedate').val(),
		sah_charger_detected:$('#sah_charger_detected').val(),
		sah_charger_chargerused:$('#sah_charger_chargerused').prop('checked')==true?"Yes":"No",
		sah_charger_numbatteries:$('#sah_charger_numbatteries').val(),
		sah_charger_CR123:$('#sah_charger_CR123').prop('checked')==true?"Yes":"No",
		sah_charger_partnumbatteries:$('#sah_charger_partnumbatteries').val(),
		sah_charger_fire:$('#sah_charger_fire').prop('checked')==true?"Yes":"No",
		sah_charger_firesigns:$('#sah_charger_firesigns').val(),
		sah_charger_fireothers:$('#sah_charger_fireothers').prop('checked')==true?"Yes":"No",
		sah_charger_fireothersdescription:$('#sah_charger_fireothersdescription').val(),
		sah_charger_enclosure:$('#sah_charger_enclosure').prop('checked')==true?"Yes":"No",
		sah_charger_exposewire:$('#sah_charger_exposewire').prop('checked')==true?"Yes":"No",
		sah_charger_melted:$('#sah_charger_melted').prop('checked'),
		sah_charger_cracked:$('#sah_charger_cracked').prop('checked'),
		sah_charger_breached:$('#sah_charger_breached').prop('checked'),
		sah_charger_locationinstalled:$('#sah_charger_locationinstalled').val(),
		sah_charger_heatnearlocation:$('#sah_charger_heatnearlocation').prop('checked')==true?"Yes":"No",
		sah_charger_heatlocationinstalled:$('#sah_charger_heatlocationinstalled').val(),
		sah_charger_charger:$('input[name="ChargerBrand"]').val(),
		sah_charger_chargerbrand:$('#sah_charger_chargerbrand').val(),
		sah_charger_chargermodel:$('#sah_charger_chargermodel').val(),
		sah_charger_chargerserial:$('#sah_charger_chargerserial').val()
	}
	console.log(data);
	fetch("/sah/charger/getpdf", {
		method: "POST",
		headers: {
			'Content-Type': 'application/json'
			// 'Content-Type': 'application/x-www-form-urlencoded',
		},
		body:JSON.stringify(data)
	}).then(res => {
		console.log(res);
		res.blob().then(res=>{
			const link = document.createElement('a');
			link.href = window.URL.createObjectURL(res);
			link.download = data.sah_charger_cn+'-'+Date.now()+`.docx`;
			link.click();
		})
	});
}

function logout(){
	data={
		ces:userCES
	}

	$.ajax({
		type:"POST",
		url:"/logout" ,
		data:JSON.stringify(data),
		headers:{
			"Content-Type":"application/json"
		},
		//dataType:"json",
		success:function(data){
			//console.log(data);
		},
		error:function(error){
		}
	});	
}

function timeConvert(date,time,tz1,tz2){
	console.log(date);
	console.log(time);
	console.log(tz1);
	console.log(tz2);
	const dateTemp=moment.tz(date+" "+time,tz1);
	console.log(dateTemp.format());
	dateTemp.tz(tz2);
	console.log(dateTemp.format());
	return {date:dateTemp.format("YYYY-MM-DD"),time:dateTemp.format("HH:mm")}

}

function changeCallbackTime(mode){
	console.log($('#callback_cxdate').val());
	console.log($('#callback_cxtime').val());
	switch(mode){
		case 0:
			$('#callback_cxdate').attr('disabled',false);
			$('#callback_cxtime').attr('disabled',false);
			$('#callback_localdate').attr('disabled',false);
			$('#callback_localtime').attr('disabled',false);
			if(($('#callback_cxdate').val()!='')&&($('#callback_cxtime').val()!='')&&($('#callback_tz').val()!=null)){
				$('#callback_localdate').val(timeConvert($('#callback_cxdate').val(),$('#callback_cxtime').val(),$('#callback_tz').val(),moment.tz.guess()).date);
				$('#callback_localtime').val(timeConvert($('#callback_cxdate').val(),$('#callback_cxtime').val(),$('#callback_tz').val(),moment.tz.guess()).time);
			}
			break;
		case 1:
			//console.log($('#callback_cxdate').val());
			//console.log($('#callback_cxtime').val());
			if(($('#callback_cxdate').val()!='')&&($('#callback_cxtime').val()!='')&&($('#callback_tz').val()!=null)){
				$('#callback_localdate').val(timeConvert($('#callback_cxdate').val(),$('#callback_cxtime').val(),$('#callback_tz').val(),moment.tz.guess()).date);
				$('#callback_localtime').val(timeConvert($('#callback_cxdate').val(),$('#callback_cxtime').val(),$('#callback_tz').val(),moment.tz.guess()).time);
			}
			break;
		case 2:
			if(($('#callback_localdate').val()!='')&&($('#callback_localtime').val()!='')&&($('#callback_tz').val()!=null)){
				$('#callback_cxdate').val(timeConvert($('#callback_localdate').val(),$('#callback_localtime').val(),moment.tz.guess(),$('#callback_tz').val()).date);
				$('#callback_cxtime').val(timeConvert($('#callback_localdate').val(),$('#callback_localtime').val(),moment.tz.guess(),$('#callback_tz').val()).time);
			}
			break;
	}
}

function saveCallback(){
	var data = {
        callback_cn: $('#callback_casenum').val(),
        callback_device: $('#callback_device').val(),
        callback_phone: $('#callback_phone').val(),
        callback_cxtz: $('#callback_tz').val(),
        callback_loctz: moment.tz.guess(),
        callback_cxdatetime: moment.tz($('#callback_cxdate').val()+" "+$('#callback_cxtime').val(),$('#callback_tz').val()).format("X"),
        callback_concern: $('#callback_concern').val(),
        callback_supcall: $('#callback_supcall').prop("checked"),
        callback_owner: 0,
        callback_status: ''
	}
	console.log(data);
	
	$.ajax({
		type:"POST",
		url:"/api/callback/add" ,
		data:JSON.stringify(data),
		headers:{
			"Content-Type":"application/json"
		},
		//dataType:"json",
		success:function(data){
			//console.log(data);
			clearCallback();
			$("#saveCallback").prop('disabled',true);
			$("#callbackMessage").removeClass("hiddenDiv");
			setTimeout(function(){
				$("#callbackMessage").addClass("hiddenDiv");
				$("#saveCallback").prop('disabled',false);
			},5000);
		},
		error:function(error){
		}
	});
}

function getTimeRemaining(endtime){
	var total,negative;
	if(endtime>new Date()){
		total = endtime - new Date();
		negative=false;
	} else {
		total = new Date() - endtime;
		negative=true;
	}
	const seconds = Math.floor( (total/1000) % 60 );
	const minutes = Math.floor( (total/1000/60) % 60 );
	const hours = Math.floor( (total/(1000*60*60)) % 24 );
	const days = Math.floor( total/(1000*60*60*24) );
  
	return {
	  total,
	  days,
	  hours,
	  minutes,
	  seconds,
	  negative
	};
}
var timeinterval=[];
function updateClock(id,endtime){
	
	const t = getTimeRemaining(endtime);
	$('#hours'+id).html(('0' + t.hours).slice(-2));
	$('#minutes'+id).html(('0' + t.minutes).slice(-2));
	$('#seconds'+id).html(('0' + t.seconds).slice(-2));
	if (t.total <= 0) {
		clearInterval(timeinterval[id]);
	}
	if((t.hours==1)&&(t.minutes<1)&&(t.seconds<1)&&!t.negative){
		console.log($('#callbackStatus'+id).html());
		console.log(usertype);
		console.log("30 minute warning")
		if(($('#callbackStatus'+id).html()=='')&&(usertype=='TM')){
			showNotification("1 hour to callback "+$('#callbackCN'+id).html()+".","Please assign to expert.");
		}else if(($('#callbackStatus'+id).html()=='Assigned')&&(usertype=='Voice')){
			showNotification("1 hour to callback "+$('#callbackCN'+id).html()+".","Please take note.");
		}
	}else if((t.hours<1)&&(t.minutes==30)&&(t.seconds<1)&&!t.negative){
		console.log($('#callbackStatus'+id).html());
		console.log(usertype);
		console.log("30 minute warning")
		if(($('#callbackStatus'+id).html()=='')&&(usertype=='TM')){
			showNotification("30 minutes to callback "+$('#callbackCN'+id).html()+".","Please assign to expert.");
		}else if(($('#callbackStatus'+id).html()=='Assigned')&&(usertype=='Voice')){
			showNotification("30 minutes to callback "+$('#callbackCN'+id).html()+".","Please take note.");
		}
	}else if((t.hours<1)&&(t.minutes==10)&&(t.seconds<1)&&!t.negative){
		console.log("10 minute warning")
		if(($('#callbackStatus'+id).html()=='')&&(usertype=='TM')){
			showNotification("10 minutes to callback "+$('#callbackCN'+id).html()+".","Please assign to expert.");
		}else if(($('#callbackStatus'+id).html()=='Assigned')&&(usertype=='Voice')){
			showNotification("10 minutes to callback "+$('#callbackCN'+id).html()+".","Please take note.");
		}
	}else if((t.hours<1)&&(t.minutes<1)&&(t.seconds<1)&&!t.negative){
		console.log("callback warning")
		if(($('#callbackStatus'+id).html()=='')&&(usertype=='TM')){
			showNotification("Time for callback "+$('#callbackCN'+id).html()+".","Please assign to expert.");
		}else if(($('#callbackStatus'+id).html()=='Assigned')&&(usertype=='Voice')){
			showNotification("Time for callback "+$('#callbackCN'+id).html()+".","Initiate call now.");
		}
	}
	
}

function populateCallbackTable(callbacks){
	var status="Call Taken";
	getDataRecord('/api/users/type/Level 1 Voice/-',function(L1){
		getDataRecord('/api/users/type/Level 1 TM/-',function(L1TM){
			console.log(L1);
			var cnxL1=L1.filter(expert=>expert.users_LOB=="L1 ARLO");
			cnxL1=cnxL1.filter(expert=>expert.users_active=="ACTIVE")
			cnxL1.sort((a, b) => (a.users_LN > b.users_LN) ? 1 : -1)
			console.log(cnxL1);

			var cnxL1TM=L1TM.filter(expert=>expert.users_LOB=="L1 ARLO");
			cnxL1TM=cnxL1TM.filter(expert=>expert.users_active=="ACTIVE")
			cnxL1TM.sort((a, b) => (a.users_LN > b.users_LN) ? 1 : -1)
			console.log(cnxL1TM);
			

			var overdue=false;
			callbacks.sort((a, b) => (a.callback_cxdatetime > b.callback_cxdatetime) ? 1 : -1)
			$('#callback_table > tbody').html('');
			callbacks.forEach(function(callback){
				var cxdatetime=moment.tz(callback.callback_cxdatetime*1000,callback.callback_cxtz);
				var localdatetime=moment.tz(callback.callback_cxdatetime*1000,moment.tz.guess());

				if(Date.now()>callback.callback_cxdatetime*1000){
					overdue=true;
				}else{
					overdue=false;
				}
				
				$('#callback_table > tbody').append('<tr class="hiddenDiv" id="callback'+callback.callback_id+'">'+
				'<td id="callbackCN'+callback.callback_id+'">'+callback.callback_cn+'</td>'+
				'<td>'+callback.callback_concern+
				'</td><td>'+(callback.callback_supcall==1?"Yes":"No")+
				'</td><td>'+callback.callback_device+
				'</td><td>'+cxdatetime.format("YYYY-MM-DD[<br>]h:mm A[<br>]z")+
				'</td><td>'+localdatetime.format("YYYY-MM-DD[<br>]h:mm A[<br>]ZZ")+
				'</td><td><span id="countDown'+callback.callback_id+'">'+
					'<span id="hours'+callback.callback_id+'"></span>:'+
					'<span id="minutes'+callback.callback_id+'"></span>:'+
					'<span id="seconds'+callback.callback_id+'"></span>'+
					'<span class="overdueMessage" id="overdue'+callback.callback_id+'"></span>'+
				'</span></td><td>'+
				'<select class="callbackOwnerSelect" disabled onchange=$("#confirmOwner'+callback.callback_id+'").removeClass("hiddenDiv") style="font-size:8pt!important;" id="expertOwner'+callback.callback_id+'"></select>'+
				'<div class="hiddenDiv" id="confirmOwner'+callback.callback_id+'">'+
				'<button onclick=$("#confirmOwner'+callback.callback_id+'").addClass("hiddenDiv");$("#assignOwner'+callback.callback_id+'").removeClass("hiddenDiv");$("#expertOwner'+callback.callback_id+'").prop("disabled",true);updateCallbackOwner('+callback.callback_id+');>Confirm</button>'+
				'<button onclick=$("#confirmOwner'+callback.callback_id+'").addClass("hiddenDiv");$("#assignOwner'+callback.callback_id+'").removeClass("hiddenDiv");$("#expertOwner'+callback.callback_id+'").prop("disabled",true);updateCallbackTable();>Cancel</button></div>'+
				'</td><td class="callbackStatus" id="callbackStatus'+callback.callback_id+'">'+callback.callback_status+'</td><td><button class="hiddenDiv" id="assignOwner'+callback.callback_id+'" onclick=$("#expertOwner'+callback.callback_id+'").prop("disabled",false);$("#assignOwner'+callback.callback_id+'").addClass("hiddenDiv")>Assign Expert</button>'+
				'<button class="hiddenDiv" id="takeCall'+callback.callback_id+'" onclick="updateCallbackStatus('+callback.callback_id+',\''+status+'\')">Take Call Now</button></td>/td></tr>');
				
				$('#expertOwner'+callback.callback_id).append(new Option('None', 0, true, true));
				$('#expertOwner'+callback.callback_id+' option').attr('disabled','disabled');
				if(callback.callback_supcall==1)
					cnxL1TM.forEach(function(expert){
						$('#expertOwner'+callback.callback_id).append(new Option(expert.users_LN, expert.users_CES, false, false));
					})
				else
					cnxL1.forEach(function(expert){
						$('#expertOwner'+callback.callback_id).append(new Option(expert.users_LN, expert.users_CES, false, false));
					});

				$('#expertOwner'+callback.callback_id).val(callback.callback_owner);
				if(overdue){
					$('#overdue'+callback.callback_id).append("<br><b style='color:red'>Overdue</b>");
				}
				if(callback.callback_status!="Call Taken"){
					updateClock(callback.callback_id,callback.callback_cxdatetime*1000); // run function once at first to avoid delay
					timeinterval[callback.callback_id]= setInterval(function(){updateClock(+callback.callback_id,callback.callback_cxdatetime*1000)},1000);
					if(usertype=='Voice'){
						if(callback.callback_owner==userCES){
							$('#callback'+callback.callback_id).removeClass('hiddenDiv');
							$('#takeCall'+callback.callback_id).removeClass('hiddenDiv');
						}
					}else{
						$('#callback'+callback.callback_id).removeClass('hiddenDiv');
						$('#assignOwner'+callback.callback_id).removeClass('hiddenDiv');
					}
				}else{
					if(usertype=='Voice'){
						if(callback.callback_owner==userCES){
							$('#callback'+callback.callback_id).removeClass('hiddenDiv');
						}
					}else{
						$('#callback'+callback.callback_id).removeClass('hiddenDiv');
					}
					//timeinterval.splice(callback.callback_id,1);
					clearInterval(timeinterval[callback.callback_id]);
					$('#countDown'+callback.callback_id).html('');
					$('#takeCall'+callback.callback_id).addClass('hiddenDiv');
					$('#assignOwner'+callback.callback_id).addClass('hiddenDiv');
				}
				
				if(($('#callback_overdue_toggle').hasClass('hiddenRow'))&&($('#overdue'+callback.callback_id).html()=='<br><b style="color:red">Overdue</b>')){
					$('#callback'+callback.callback_id).addClass('hiddenDiv');
				}
				if(($('#callback_status_toggle').hasClass('hiddenRow'))&&($('#callbackStatus'+callback.callback_id).html()=='Call Taken')){
					$('#callback'+callback.callback_id).addClass('hiddenDiv');
				}
				console.log(timeinterval)
			})
		});
	});
	
}

function updateCallbackTable(){
	getDataRecord('/api/callback/get',function(callbacks){
		callbacks.forEach(function(callback){
			$('#expertOwner'+callback.callback_id).val(callback.callback_owner);
			$('#callbackStatus'+callback.callback_id).html(callback.callback_status);
		})
    });
}

function updateCallbackOwner(id){
	data={
		id:id,
		owner:$('#expertOwner'+id).val()
	}
	
	$.ajax({
		type:"POST",
		url:"/api/callback/update/owner" ,
		data:JSON.stringify(data),
		headers:{
			"Content-Type":"application/json"
		},
		//dataType:"json",
		success:function(data){
			//console.log(data);
			updateCallbackTable();
		},
		error:function(error){
		}
	});
}

function updateCallbackStatus(id,status){
	data={
		id:id,
		status:status
	}
	
	$.ajax({
		type:"POST",
		url:"/api/callback/update/status" ,
		data:JSON.stringify(data),
		headers:{
			"Content-Type":"application/json"
		},
		//dataType:"json",
		success:function(data){
			//console.log(data);
			updateCallbackTable();
		},
		error:function(error){
		}
	});
}

function showNotification(title,message,callback) {
	var notification = new Notification(title, {
	   body: message,
	   icon: "/favicon.ico",
	   requireInteraction: true 
	})
	notification.onclick = function(x) { window.focus(); if(callback) callback(); this.close(); };
	document.addEventListener('visibilitychange', function() {
		if (document.visibilityState === 'visible') {
		  // The tab has become visible so clear the now-stale Notification.
		  notification.close();
		}
	});
}

function clearCallback(){
	$('#callback_casenum').val('');
	$('#callback_device').val('');
	$('#callback_phone').val('');
	$('#callback_tz').val(0);
	$('#callback_localdate').val(moment().format("YYYY-MM-DD"));
	$('#callback_localdate').prop('disabled',true);
	$('#callback_localtime').val('');
	$('#callback_localtime').prop('disabled',true);
	$('#callback_cxdate').val(moment().format("YYYY-MM-DD"));
	$('#callback_cxdate').prop('disabled',true);
	$('#callback_cxtime').val('');
	$('#callback_cxtime').prop('disabled',true);
	$('#callback_concern').val('');
	$('#callback_supcall').prop("checked",false);
}

function openCallbackTable(){
	console.log($('#content>#callback').hasClass('callbackDisplayed'));
	if(!($('#callback').hasClass('callbackDisplayed'))){
		loadExternal('/partials/dashboard','dashboardScript',function(){
			console.log("open dashboard");
			openTab('dashboard','callback');
			$('#callback').addClass('callbackDisplayed');
		});
	}
}

function checkLoyaltyDuplicate(email,warranty){
	$('#loyalty_error_duplicate').addClass('hiddenDiv');
	$('#loyalty_error_maxexceptions').addClass('hiddenDiv');
	console.log(warranty);
	$('#generate_loyalty').prop('disabled',true);
	$('#clear_loyalty').prop('disabled',true);
	if(($('#loyalty_cn').val().trim()=="")||($('#loyalty_email').val().trim()=="")||($('#loyalty_notes').val().trim()=="")||($('#loyalty_warranty').val()==null)||
			($('#loyalty_asset').val()==null)||($('#loyalty_serial').val().trim()=="")||($('#loyalty_symptom').val().trim()=="")){
		if($('#loyalty_cn').val().trim()==""){
			$('#loyalty_cn').css("border-color","red");
			$('#loyalty_cn').effect('shake',{distance:5})
		}
		if($('#loyalty_email').val().trim()==""){
			$('#loyalty_email').css("border-color","red");
			$('#loyalty_email').effect('shake',{distance:5})
		}
		if($('#loyalty_notes').val().trim()==""){
			$('#loyalty_notes').css("border-color","red");
			$('#loyalty_notes').effect('shake',{distance:5})
		}
		if($('#loyalty_warranty').val()==null){
			$('#loyalty_warranty').css("border-color","red");
			$('#loyalty_warranty').effect('shake',{distance:5})
		}
		if($('#loyalty_asset').val()==null){
			$('#loyalty_asset').css("border-color","red");
			$('#loyalty_asset').effect('shake',{distance:5})
		}
		if($('#loyalty_serial').val().trim()==""){
			$('#loyalty_serial').css("border-color","red");
			$('#loyalty_serial').effect('shake',{distance:5})
		}
		if($('#loyalty_symptom').val().trim()==''){
			$('#loyalty_symptom').css("border-color","red");
			$('#loyalty_symptom').effect('shake',{distance:5})
		}
		$('#generate_loyalty').prop('disabled',false);
		$('#clear_loyalty').prop('disabled',false);
	}else{
		$('#loyalty_notes').css("border-color","#4287f5");
		$('#loyalty_email').css("border-color","#4287f5");
		$('#loyalty_cn').css("border-color","#4287f5");
		$('#loyalty_warranty').css("border-color","#4287f5");
		$('#loyalty_asset').css("border-color","#4287f5");
		$('#loyalty_serial').css("border-color","#4287f5");
		$('#loyalty_symptom').css("border-color","#4287f5");
		$.ajax({
			url : '/api/loyalty/check/'+email+'/'+warranty,
			type:'GET',
			success: function (data) {
				//console.log(data.data[0].loyalty_code);
				if(data.data.length<1){
					getLoyalty($('#loyalty_cn').val(),$('#loyalty_email').val(),$('#loyalty_notes').val(),$('#loyalty_asset').val(),$('#loyalty_serial').val(),$('#loyalty_symptom').val(),warranty)
				} else if(data.data.length==1){
					$("#loyalty_error_duplicate").removeClass("hiddenDiv");
					$("#loyalty_prev").html('<b>'+data.data[0].loyalty_code+'</b>');
				} else if(data.data.length>1){
					$("#loyalty_error_maxexceptions").removeClass("hiddenDiv");
					$("#loyalty_prev1").html('<b>'+data.data[0].loyalty_code+'</b>');
					$("#loyalty_prev2").html('<b>'+data.data[1].loyalty_code+'</b>');
					$('#generate_loyalty').prop('disabled',false);
					$('#clear_loyalty').prop('disabled',false);
				}
			}
		});
	}
}

function getLoyalty(cn,email,notes,asset,serial,symptom,warranty){
	var data={
		cn:cn,
		email:email,
		notes:notes,
		asset:asset,
		serial:serial,
		symptom:symptom,
		warranty:warranty,
		center:(userLOB=='L1 IOPEX')?'IOPEX':(((userLOB=='CCT IOPEX')||(userLOB=='CCT ARLO'))?'CCT':'CNX'),
		CES:userCES
	}
	console.log('getting loyalty code')
	$.ajax({
		type:"POST",
		url:"/api/loyalty/get" ,
		data:JSON.stringify(data),
		headers:{
			"Content-Type":"application/json"
		},
		//dataType:"json",
		success:function(data){
			console.log(data);
			$('#loyalty_code').val(data.data);
			$('#clear_loyalty').prop('disabled',false);
			//$('#generate_loyalty').attr('disabled','disabled')
			
		},
		error:function(error){
			console.log(error);
		}
	});
}

function updateLoyaltyReport(){
	var detail_body='';
	var duplicate_body='';
	var ids={};
	var duplicateID=[];
	var duplicates=[];
	$.ajax({
		url : '/api/loyalty/report/'+$("#loyalty_date1").val()+'/'+$("#loyalty_date2").val(),
		type:'GET',
		success: function (data) {
			$('#CNX_OOW').html(data.data.stats.CNX_OOW);
			$('#IOPEX_OOW').html(data.data.stats.IOPEX_OOW);
			$('#CCT_OOW').html(data.data.stats.CCT_OOW);
			$('#TOTAL_OOW').html(data.data.stats.TOTAL_OOW);
			$('#CNX_IW').html(data.data.stats.CNX_IW);
			$('#IOPEX_IW').html(data.data.stats.IOPEX_IW);
			$('#CCT_IW').html(data.data.stats.CCT_IW);
			$('#TOTAL_IW').html(data.data.stats.TOTAL_IW);

			duplicateID = data.data.rows
				.map(e => e['loyalty_email']+e['loyalty_OOW'])
				.map((e, i, final) => final.indexOf(e) !== i && i)
				.filter(obj=> data.data.rows[obj])
				.map(e => data.data.rows[e]["loyalty_email"])
			console.log(duplicateID);
			duplicates = data.data.rows.filter(obj=> duplicateID.includes(obj.loyalty_email));
			console.log(duplicates);
			duplicates.sort((a, b) => (a["loyalty_email"] > b["loyalty_email"]) ? 1 : (a["loyalty_email"] < b["loyalty_email"]) ? -1 : (a["loyalty_date"] > b["loyalty_date"]) ? 1 : -1)

			data.data.rows.forEach(row=>{
				detail_body+='<tr style="text-align:center">';
				detail_body+='<td style="white-space: nowrap;">'+moment.tz(row.loyalty_date,'UTC').format("MM-DD-YYYY");+'</td>';
				detail_body+='<td>'+row.loyalty_center+'</td>';
				detail_body+='<td>'+row.usersCN+'</td>';
				detail_body+='<td>'+(row.loyalty_OOW==0?"OOW":"IW")+'</td>';
				detail_body+='<td style="white-space: nowrap;">'+row.loyalty_code+'</td>';
				detail_body+='<td>'+row.loyalty_CN+'</td>';
				detail_body+='<td>'+row.loyalty_asset+'</td>';
				detail_body+='<td>'+row.loyalty_serial+'</td>';
				detail_body+='<td>'+row.loyalty_symptom+'</td>';
				detail_body+='<td>'+row.loyalty_email+'</td>';
				detail_body+='<td style="text-align:left">'+row.loyalty_note+'</td>';
				detail_body+='</tr>';
			})
			duplicates.forEach(duplicate=>{
				duplicate_body+='<tr style="text-align:center">';
				duplicate_body+='<td>'+duplicate.loyalty_email+'</td>';
				duplicate_body+='<td style="white-space: nowrap;">'+duplicate.loyalty_code+'</td>';
				duplicate_body+='<td style="white-space: nowrap;">'+moment.tz(duplicate.loyalty_date,'UTC').format("MM-DD-YYYY");+'</td>';
				duplicate_body+='<td>'+duplicate.loyalty_center+'</td>';
				duplicate_body+='<td>'+duplicate.usersCN+'</td>';
				duplicate_body+='<td>'+(duplicate.loyalty_OOW==0?"OOW":"IW")+'</td>';
				duplicate_body+='<td>'+duplicate.loyalty_CN+'</td>';
				duplicate_body+='<td>'+duplicate.loyalty_asset+'</td>';
				duplicate_body+='<td>'+duplicate.loyalty_serial+'</td>';
				duplicate_body+='<td>'+duplicate.loyalty_symptom+'</td>';
				duplicate_body+='<td style="text-align:left">'+duplicate.loyalty_note+'</td>';
				duplicate_body+='</tr>';
			})
			
			$('#loyalty_center_detail_body').html(detail_body);
			$('#loyalty_center_duplicate_body').html(duplicate_body);


		}
	});
}

function displayLoyalty(){
	getDataRecord('/api/devices',function(devices){
		//console.log(experts.length);
		//$("#escalation_product").html('');
		devices.sort((a, b) => (a["device_name"] > b["device_name"]) ? 1 : -1)
		devices.forEach(data => {
			//console.log(data);
			$("#loyalty_asset").append(new Option(data.device_name + "    (" + data.device_model + ")", data.device_model));
		});
		$('#generate_loyalty').prop('disabled',false);
		$('#clear_loyalty').prop('disabled',false);
		$('#loyalty_email').val($('#email').val());
		$('#loyalty_notes').val('');
		$('#loyalty_asset').val($('#standard_device').val());
		$('#loyalty_serial').val($('#standard_deviceSN').val());
		$('#loyalty_symptom').val($('#inquiry').val());
		$('#loyalty_code').val('');
		$('#loyalty_cn').val($('#casenumber_standard').val());
		$('#loyalty_warranty').val('');
		$('#loyalty_error_duplicate').addClass('hiddenDiv');
		$('#loyalty_error_maxexceptions').addClass('hiddenDiv');
		$('#modal_loyalty').css('display','block');
		//console.log(standardLocation);
	},'loyalty_asset');


}